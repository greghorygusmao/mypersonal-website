{
  "version": 3,
  "sources": ["browser-route-module:/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/treelodot8/app/routes/index.jsx?browser", "../../../app/routes/index.jsx", "../../../app/components/ColumnCards/ColumnCards.jsx", "../../../app/components/BaseKit/BaseText/BaseText.js", "../../../app/components/BaseKit/Divider/Divider.js", "../../../app/components/BaseKit/Icon/Icon.js", "../../../app/components/Modal/ModalPortal.js", "../../../app/components/utils/portal.js", "../../../node_modules/gantt-task-react/src/types/public-types.ts", "../../../node_modules/gantt-task-react/src/helpers/date-helper.ts", "../../../node_modules/gantt-task-react/src/components/task-list/task-list-header.tsx", "../../../node_modules/gantt-task-react/src/components/task-list/task-list-table.tsx", "../../../node_modules/gantt-task-react/src/components/other/tooltip.tsx", "../../../node_modules/gantt-task-react/src/components/other/vertical-scroll.tsx", "../../../node_modules/gantt-task-react/src/components/task-list/task-list.tsx", "../../../node_modules/gantt-task-react/src/components/grid/grid-body.tsx", "../../../node_modules/gantt-task-react/src/components/grid/grid.tsx", "../../../node_modules/gantt-task-react/src/components/calendar/top-part-of-calendar.tsx", "../../../node_modules/gantt-task-react/src/components/calendar/calendar.tsx", "../../../node_modules/gantt-task-react/node_modules/babel-plugin-transform-async-to-promises/helpers.js", "../../../node_modules/gantt-task-react/src/components/other/arrow.tsx", "../../../node_modules/gantt-task-react/src/helpers/bar-helper.ts", "../../../node_modules/gantt-task-react/src/helpers/other-helper.ts", "../../../node_modules/gantt-task-react/src/components/task-item/bar/bar-display.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/bar/bar-date-handle.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/bar/bar-progress-handle.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/bar/bar.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/bar/bar-small.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/milestone/milestone.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/project/project.tsx", "../../../node_modules/gantt-task-react/src/components/task-item/task-item.tsx", "../../../node_modules/gantt-task-react/src/components/gantt/task-gantt-content.tsx", "../../../node_modules/gantt-task-react/src/components/gantt/task-gantt.tsx", "../../../node_modules/gantt-task-react/src/components/other/horizontal-scroll.tsx", "../../../node_modules/gantt-task-react/src/components/gantt/gantt.tsx", "../../../app/components/Navigation/LeftNavbar/LeftNavbar.jsx", "../../../app/components/Navigation/LinkNavigation/LinkNavigation.jsx"],
  "sourcesContent": ["export { default, links } from \"/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/treelodot8/app/routes/index.jsx\";", "import { useLoaderData } from \"remix\"\nimport Box from \"~/components/BaseKit/Box/Box\"\nimport { ColumnCards, links as ColumnCardsLinks } from \"~/components/ColumnCards/ColumnCards\"\nimport { LeftNavbar, links as LeftNavbarlinks } from \"~/components/Navigation/LeftNavbar/LeftNavbar\"\nimport { Title, links as TitleLinks } from \"~/components/Title/Title\"\nimport { getCardsOnBoard, getListsOnBoard, getMembersOnBoard } from \"~/services/trello\"\nimport { members } from \"../services/trellotypes\"\nimport { authenticator } from \"~/services/auth\"\n\nexport function links() {\n  return [...LeftNavbarlinks, ...TitleLinks, ...ColumnCardsLinks]\n}\n\nconst factorSearch = (data, factor) => {\n  return data.labels.find((ee) => ee.name === factor)\n}\nconst extractDeadLine = (data) => {\n  return (\n    data\n      ?.split(\"\\n\")\n      ?.find((e) => e?.indexOf(\"**PREVIS\u00C3O:**\") > -1)\n      ?.split(\"**PREVIS\u00C3O:**\")\n      ?.slice(1)?.[0]\n      ?.replace(\" \", \"\") || \"N\u00E3o Definido\"\n  )\n}\nconst extractCreatedAt = (data) => {\n  return (\n    data\n      ?.split(\"\\n\")\n      ?.find((e) => e?.indexOf(\"**DATA DE CRIA\u00C7\u00C3O:**\") > -1)\n      ?.split(\"**DATA DE CRIA\u00C7\u00C3O:**\")\n      ?.slice(1)?.[0]\n      ?.replace(\" \", \"\") || \"N\u00E3o Definido\"\n  )\n}\n\nconst formatData = (data, labels) => {\n  let e = data\n  e.priority = e.labels.find((ee) => {\n    return [\"M\u00C9DIA\", \"ALTA\", \"BAIXA\"].findIndex((e) => e === ee.name) > -1\n  })?.name\n\n  e.priorityOrder = 3\n\n  if (e.priority === \"ALTA\") {\n    e.priorityOrder = 0\n  } else if (e.priority === \"M\u00C9DIA\") {\n    e.priorityOrder = 1\n  } else {\n    e.priorityOrder = 2\n  }\n\n  e.labels = labels\n  e.members = e.idMembers.map((e) => {\n    return members.find((ee) => ee.idMember === e)\n  })\n  e.dateDeadLine = extractDeadLine(e.desc)\n  e.createdAt = extractCreatedAt(e.desc)\n\n  e.show = true\n\n  if (e.dateDeadLine === \"N\u00E3o Definido\" || e.createdAt === \"N\u00E3o Definido\") {\n    e.show = false\n  }\n  return e\n}\n\nexport let loader = async ({ request }) => {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/logar\",\n  })\n\n  let cards = await getCardsOnBoard()\n  let boards = await getListsOnBoard()\n  // let members = await getMembersOnBoard();\n\n  let group = [\n    {\n      title: \"IMPLEMENTA\u00C7\u00C3O\",\n      data: { finish: [], process: [] },\n      emoji: \"\uD83D\uDCA1\",\n    },\n    {\n      title: \"CORRE\u00C7\u00D5ES\",\n      data: { finish: [], process: [] },\n      emoji: \"\uD83D\uDEA8\",\n    },\n  ]\n\n  let trashColumn = boards.find((e) => e.name != \"DESCARTADOS\" || e.name != \"BACKLOG ANTIGO\")\n  let data = cards.filter((e) => e.idList != trashColumn.id)\n\n  data.forEach((e) => {\n    let labels = e.labels.filter((e) => [\"IMPLEMENTA\u00C7\u00C3O\", \"CORRE\u00C7\u00C3O\"].indexOf(e.name) <= -1)\n\n    if (factorSearch(e, \"IMPLEMENTA\u00C7\u00C3O\")) {\n      e = formatData(e, labels)\n      if (e.show) {\n         if (e.dueComplete) {\n           group[0].data.finish.push(e)\n         } else if (e.start) {\n           group[0].data.process.push(e)\n         }\n        \n      }\n    } else if (factorSearch(e, \"CORRE\u00C7\u00C3O\")) {\n      e = formatData(e, labels)\n\n      if (e.show) {\n        if (e.dueComplete) {\n          group[1].data.finish.push(e)\n        } else if (e.start) {\n          group[1].data.process.push(e)\n        }\n        \n      }\n    }\n  })\n\n  group[0].data.process = group[0].data.process?.sort((a, b) => {\n    return a.priorityOrder - b.priorityOrder\n  })\n  group[1].data.process = group[1].data.process?.sort((a, b) => {\n    return a.priorityOrder - b.priorityOrder\n  })\n  group[0].data.finish = group[0].data.finish?.sort((a, b) => {\n    return a.priorityOrder - b.priorityOrder\n  })\n  group[1].data.finish = group[1].data.finish?.sort((a, b) => {\n    return a.priorityOrder - b.priorityOrder\n  })\n\n  const currentDate = new Date()\n  const nextMonth = new Date(currentDate.setMonth(currentDate.getMonth() + 1))\n\n  const currentMontFormatted = new Intl.DateTimeFormat(\"pt-BR\", {\n    month: \"long\",\n  }).format(new Date())\n\n  const nextMonthFormatted = new Intl.DateTimeFormat(\"pt-BR\", {\n    month: \"long\",\n  }).format(nextMonth)\n\n  return { data: group, currentMontFormatted, nextMonthFormatted }\n}\n\nexport default function Index() {\n  let { data, currentMontFormatted, nextMonthFormatted } = useLoaderData()\n\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n        height: \"100%\",\n      }}\n    >\n      <LeftNavbar />\n      <Box\n        flexDirection=\"column\"\n        style={{\n          padding: \"30px\",\n          marginLeft: \"80px\",\n        }}\n      >\n        <Title\n          style={{\n            marginBottom: \"24px\",\n          }}\n          title={\n            <>\n              Backlog Desenvolvimento\n              <span style={{ color: \"#EBEBED\" }}> \u2022 </span>\n              <span\n                style={{\n                  color: \"#7F7EFF\",\n                  textTransform: \"uppercase\",\n                }}\n              >\n                {currentMontFormatted}/{nextMonthFormatted}\n              </span>\n            </>\n          }\n        ></Title>\n        <Box flexDirection=\"row\">\n          {data?.map((e) => {\n            return (\n              <ColumnCards\n                data={e}\n                key={Math.random()}\n                style={{\n                  marginRight: \"30px\",\n                  alignSelf: \"baseline\",\n                }}\n              />\n            )\n          })}\n        </Box>\n      </Box>\n    </div>\n  )\n}\n", "import { useEffect, useMemo, useRef, useState } from \"react\"\nimport BaseImage from \"../BaseKit/BaseImage/BaseImage\"\nimport BaseText from \"../BaseKit/BaseText/BaseText\"\nimport Box from \"../BaseKit/Box/Box\"\nimport Divider from \"../BaseKit/Divider/Divider\"\nimport Icon from \"../BaseKit/Icon/Icon\"\nimport ModalPortal from \"../Modal/ModalPortal\"\nimport { Gantt, ViewMode } from \"gantt-task-react\"\nimport sg from \"gantt-task-react/dist/index.css\"\nimport s from \"./styles.css\"\nimport { links as stylesModal } from \"../Modal/ModalPortal\"\nexport const links = [\n  { rel: \"stylesheet\", href: s },\n  {\n    rel: \"stylesheet\",\n    href: sg,\n  },\n  ...stylesModal,\n]\n\nexport const Card = ({ data }) => {\n  const [openGantt, setOpenGantt] = useState(false)\n  const currentDate = new Date()\n  const labels = useMemo(() => {\n    return data?.labels?.map((e, k) => {\n      let color = e.color.toLowerCase()\n      return (\n        <Box\n          className={\"typetask\"}\n          justifyContent=\"center\"\n          flexDirection=\"row\"\n          key={Math.random()}\n          style={{\n            backgroundColor: color == \"sky\" ? \"cornflowerblue\" : `${color}`,\n          }}\n        >\n          <BaseText className={\"typetask_inovao\"} type=\"span\" title={e.name}></BaseText>\n        </Box>\n      )\n    })\n  }, [])\n\n  return (\n    <Box className={\"card\"} flexDirection=\"row\">\n      <Box className={\"card_infocard\"} alignItems=\"center\" flexDirection=\"column\">\n        <Box className={\"card_header\"} flexDirection=\"column\">\n          <Box className={\"card_tags\"} flexDirection=\"row\" alignItems=\"center\" justifyContent=\"center\">\n            <Box flexDirection=\"row\" flex={1} alignItems=\"center\">\n              {labels}\n            </Box>\n            <Box flexDirection=\"row\">\n              {data?.members.map((e, k) => {\n                return (\n                  <span\n                    style={{\n                      width: \"18px\",\n                      height: \"18px\",\n                      borderRadius: \"100px\",\n                      marginRight: \"5px\",\n                      overflow: \"hidden\",\n                    }}\n                    key={Math.random()}\n                    data-tip={e.name}\n                  >\n                    <BaseImage src={e.avatar} width=\"18px\" height=\"18px\" />\n                  </span>\n                )\n              })}\n            </Box>\n          </Box>\n\n          <BaseText\n            className={\"card_reconstruoregistrocorreodeponto\"}\n            type=\"span\"\n            title={data?.name}\n          ></BaseText>\n        </Box>\n\n        <Box className={\"card_info\"} alignItems=\"center\" flexDirection=\"row\">\n          <Box className={\"card_deadline\"} alignItems=\"center\" flexDirection=\"row\">\n            <Icon name=\"icon-icon_calendar1\" />\n            <span data-tip={\"Previs\u00E3o\"}>\n              <BaseText className={\"card_\"} type=\"span\" title={data?.dateDeadLine}></BaseText>\n            </span>\n          </Box>\n\n          <Box\n            className={\"card_priority\"}\n            alignItems=\"center\"\n            flexDirection=\"row\"\n            onClick={() => {\n              setOpenGantt(true)\n            }}\n          >\n            <Icon name=\"icon-icon_alert\" />\n\n            <BaseText className={\"card_baixa\"} type=\"span\" title={\"Abrir Gantt\"}></BaseText>\n          </Box>\n          <Box className={\"card_priority\"} alignItems=\"center\" flexDirection=\"row\">\n            <Icon name=\"icon-icon_alert\" />\n\n            <BaseText\n              className={\"card_baixa\"}\n              type=\"span\"\n              title={data?.priority || \"N\u00E3o Informado\"}\n            ></BaseText>\n          </Box>\n\n          <a href={data?.url} className={\"card_trello\"} target=\"_blank\">\n            <Icon name=\"icon-icon_trello\" />\n\n            <BaseText className={\"card_cardtrello\"} type=\"span\" title={\"Card Trello\"}></BaseText>\n          </a>\n        </Box>\n      </Box>\n      <ModalPortal\n        styleInner={{ width: \"60vw\" }}\n        isOpen={openGantt}\n        onRequestClose={() => {\n          setOpenGantt(false)\n        }}\n        style={{\n          padding: \"0px\",\n        }}\n      >\n        <Gantt\n          locale=\"pt-BR\"\n          tasks={[\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\n              name: \"Novo monitaramento\",\n              id: \"ProjectSample\",\n              progress: 100,\n              type: \"project\",\n\n              hideChildren: false,\n            },\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 1),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2, 12, 28),\n              name: \"Escopagem\",\n              id: \"Task 0\",\n              progress: 45,\n              type: \"task\",\n              project: \"ProjectSample\",\n            },\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 2),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4, 0, 0),\n              name: \"Planejamento\",\n              id: \"Task 1\",\n              progress: 25,\n              dependencies: [\"Task 0\"],\n              type: \"task\",\n              project: \"ProjectSample\",\n            },\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 4),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8, 0, 0),\n              name: \"Desenvolvimento\",\n              id: \"Task 2\",\n              progress: 10,\n              dependencies: [\"Task 1\"],\n              type: \"task\",\n              project: \"ProjectSample\",\n            },\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 9, 0, 0),\n              name: \"Homologa\u00E7\u00E3o\",\n              id: \"Task 3\",\n              progress: 2,\n              dependencies: [\"Task 2\"],\n              type: \"task\",\n              project: \"ProjectSample\",\n            },\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 8),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 10),\n              name: \"Retifica\u00E7\u00F5es\",\n              id: \"Task 4\",\n              type: \"task\",\n              progress: 70,\n              dependencies: [\"Task 2\"],\n              project: \"ProjectSample\",\n            },\n            {\n              start: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\n              end: new Date(currentDate.getFullYear(), currentDate.getMonth(), 15),\n              name: \"Produ\u00E7\u00E3o\",\n              id: \"Task 6\",\n              progress: currentDate.getMonth(),\n              type: \"milestone\",\n              dependencies: [\"Task 4\"],\n              project: \"ProjectSample\",\n            },\n          ]}\n          viewMode={ViewMode.Day}\n          listCellWidth={\"\"}\n        />\n      </ModalPortal>\n    </Box>\n  )\n}\n\nexport const ColumnCards = ({ data, style }) => {\n  const dataFiltered = useMemo(() => {\n    let finish = []\n    let process = []\n    process = data?.data?.process?.map((e) => {\n      return <Card data={e} key={e.id}></Card>\n    })\n    finish = data?.data?.finish?.map((e) => {\n      return <Card data={e} key={e.id}></Card>\n    })\n\n    return { finish, process }\n  }, [data])\n  return (\n    <Box className={\"inovation\"} style={style} flexDirection=\"column\">\n      <Box className={\"inovation_headerlist\"} flexDirection=\"row\">\n        <Box\n          className={\"inovation_title\"}\n          style={{\n            width: \"100%\",\n          }}\n          flexDirection=\"row\"\n        >\n          <BaseText className={\"inovation_inovao\"} type=\"span\" title={data?.emoji}></BaseText>\n\n          <BaseText className={\"inovation_inovao\"} type=\"span\" title={data?.title}></BaseText>\n        </Box>\n\n        <Box className={\"inovation_number\"} flexDirection=\"row\">\n          <BaseText\n            className={\"inovation_total\"}\n            type=\"span\"\n            title={data?.data?.finish?.length + data?.data?.process?.length}\n          ></BaseText>\n        </Box>\n      </Box>\n      <Divider type=\"h\" spaccing=\"0px\" style={{ backgroundColor: \"#EBEBED\" }}></Divider>\n\n      <Box className={\"inovation_ctn\"}>\n        <Box className={\"inovation_inprocess\"} flexDirection=\"column\">\n          <BaseText className={\"inovation_emprocesso\"} type=\"span\" title={\"EM PROCESSO\"}></BaseText>\n          <div>{dataFiltered?.process}</div>\n        </Box>\n\n        <Divider type=\"h\" spaccing=\"0px\" style={{ backgroundColor: \"#EBEBED\" }}></Divider>\n\n        <Box className={\"inovation_completed\"} flexDirection=\"column\">\n          <BaseText className={\"inovation_concluidos\"} type=\"span\" title={\"CONCLUIDOS\"}></BaseText>\n          <div>{dataFiltered?.finish}</div>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n", "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BaseText = ({\n  title,\n  children,\n  style,\n  className,\n  onClick,\n  type,\n  aria,\n  target,\n  href,\n}) => {\n  const CustomTag = `${type}`;\n  const hrefProp = type == 'a' ? { href, target } : null;\n  return (\n    <CustomTag\n      className={`${className || ''}`}\n      style={style}\n      title={aria}\n      {...hrefProp}\n      onClick={() => {\n        if (onClick) onClick();\n      }}\n    >\n      {title || children}\n    </CustomTag>\n  );\n};\n\nBaseText.propTypes = {\n  title: PropTypes.any,\n  aria: PropTypes.string,\n  children: PropTypes.node,\n  type: PropTypes.string,\n  style: PropTypes.object,\n};\n\nexport default BaseText;\n", "import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Divider = ({ type, spaccing, variant, style, size = 1 }) => {\n\n  let dotted = {};\n\n  dotted =\n    variant == 'dotted'\n      ? {\n          backgroundimage: `-webkit-linear-gradient(right, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(255,255,255,0) 51%,rgba(255,255,255,0) 100%),\n                            -webkit-linear-gradient(bottom, rgba(128,128,128,1) 0%, rgba(128,128,128,0) 8%, rgba(128,128,128,0) 100%)`,\n          backgroundSize: '12px 24px',\n        }\n      : {};\n\n  return (\n    <div\n      style={{\n        margin: type == 'h' ? `${spaccing} 0px` : `0px ${spaccing}`,\n        minWidth: type == 'h' ? `100%` : `${size}px`,\n        minHeight: type == 'h' ? `${size}px` : `100%`,\n        ...dotted,\n        ...style,\n      }}\n    />\n  );\n};\n\nDivider.defaultProps = {\n  variant: 'solid',\n};\n\nDivider.propTypes = {\n  type: PropTypes.string,\n  spaccing: PropTypes.string,\n  variant: PropTypes.string,\n};\n\nexport default Divider;\n", "\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './Icon.css';\n\nconst Icon = ({ style, name, className=\"\", onClick }) => {\n  return (\n    <i\n      className={`icon ${name} ${className||''}`}\n      onClick={e => {\n        if (onClick) {\n          onClick(e);\n        }\n      }}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...style,\n      }}\n    />\n  );\n};\n\nIcon.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n};\n\nexport default Icon;\n", "import { default as React, useEffect, useRef } from \"react\"\nimport { animated, useSpring, useTransition } from \"react-spring\"\nimport { createUniversalPortal } from \"../utils/portal\"\nimport Box from \"../BaseKit/Box/Box\"\nimport s from \"./styles.css\"\nexport const links = [{ rel: \"stylesheet\", href: s }]\nconst Modal = ({\n  isOpen,\n  onRequestClose,\n  children,\n  style,\n  styleInner,\n  inline,\n  color,\n  title,\n  icon,\n  center,\n  styleBg,\n  header,\n}) => {\n  const content = useRef(null)\n\n  useEffect(() => {\n    if (isOpen) {\n      focusContent()\n    }\n  }, [isOpen])\n\n  const focusContent = () => {\n    content.current && content.current.focus()\n  }\n\n  const requestClose = (event) => {\n    onRequestClose && onRequestClose(event)\n  }\n\n  const transition = useTransition(isOpen, {\n    from: {\n      opacity: 0,\n      transform: center ? \"translateY(20px)\" : \"translate(0%, -34%)\",\n    },\n    enter: {\n      opacity: 1,\n      transform: center ? \"translateY(0px)\" : \"translate(0%, -50%)\",\n    },\n    leave: {\n      opacity: 0,\n      transform: center ? \"translateY(-20px)\" : \"translate(0%, -34%)\",\n    },\n  })\n  console.log(transition)\n  const opacity = useSpring({\n    opacity: isOpen ? 1 : 0,\n  })\n\n  return transition(\n    (props, item) =>\n      item && (\n        <div className={\"modalctn\"}>\n          <animated.div\n            onClick={requestClose}\n            className={\"offset\"}\n            style={{\n              ...opacity,\n              ...styleBg,\n            }}\n          />\n\n          <animated.div\n            className={\"ctn\"}\n            color={color}\n            style={{\n              ...style,\n              ...props,\n              ...opacity,\n            }}\n          >\n            <Box\n              flexDirection=\"column\"\n              color={color}\n              style={styleInner}\n              className={inline ? \"modalcontent\" : \"\"}\n            >\n              {children}\n            </Box>\n          </animated.div>\n        </div>\n      ),\n  )\n}\n\nconst ModalPortal = (props) => createUniversalPortal(<Modal {...props} />, \"body\")\n\nexport default ModalPortal\n", "import ReactDOM from \"react-dom\"\n\nexport function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement)\n}\n\nexport function createUniversalPortal(children, selector) {\n  if (!canUseDOM()) {\n    return null\n  }\n  return ReactDOM.createPortal(children, document.querySelector(selector))\n}\n", "export enum ViewMode {\n  QuarterDay = \"Quarter Day\",\n  HalfDay = \"Half Day\",\n  Day = \"Day\",\n  /** ISO-8601 week */\n  Week = \"Week\",\n  Month = \"Month\",\n}\nexport type TaskType = \"task\" | \"milestone\" | \"project\";\nexport interface Task {\n  id: string;\n  type: TaskType;\n  name: string;\n  start: Date;\n  end: Date;\n  /**\n   * From 0 to 100\n   */\n  progress: number;\n  styles?: {\n    backgroundColor?: string;\n    backgroundSelectedColor?: string;\n    progressColor?: string;\n    progressSelectedColor?: string;\n  };\n  isDisabled?: boolean;\n  project?: string;\n  dependencies?: string[];\n  hideChildren?: boolean;\n}\n\nexport interface EventOption {\n  /**\n   * Time step value for date changes.\n   */\n  timeStep?: number;\n  /**\n   * Invokes on bar select on unselect.\n   */\n  onSelect?: (task: Task, isSelected: boolean) => void;\n  /**\n   * Invokes on bar double click.\n   */\n  onDoubleClick?: (task: Task) => void;\n  /**\n   * Invokes on end and start time change. Chart undoes operation if method return false or error.\n   */\n  onDateChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on progress change. Chart undoes operation if method return false or error.\n   */\n  onProgressChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on delete selected task. Chart undoes operation if method return false or error.\n   */\n  onDelete?: (task: Task) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on expander on task list\n   */\n  onExpanderClick?: (task: Task) => void;\n}\n\nexport interface DisplayOption {\n  viewMode?: ViewMode;\n  /**\n   * Specifies the month name language. Able formats: ISO 639-2, Java Locale\n   */\n  locale?: string;\n  rtl?: boolean;\n}\n\nexport interface StylingOption {\n  headerHeight?: number;\n  columnWidth?: number;\n  listCellWidth?: string;\n  rowHeight?: number;\n  ganttHeight?: number;\n  barCornerRadius?: number;\n  handleWidth?: number;\n  fontFamily?: string;\n  fontSize?: string;\n  /**\n   * How many of row width can be taken by task.\n   * From 0 to 100\n   */\n  barFill?: number;\n  barProgressColor?: string;\n  barProgressSelectedColor?: string;\n  barBackgroundColor?: string;\n  barBackgroundSelectedColor?: string;\n  projectProgressColor?: string;\n  projectProgressSelectedColor?: string;\n  projectBackgroundColor?: string;\n  projectBackgroundSelectedColor?: string;\n  milestoneBackgroundColor?: string;\n  milestoneBackgroundSelectedColor?: string;\n  arrowColor?: string;\n  arrowIndent?: number;\n  todayColor?: string;\n  TooltipContent?: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n  TaskListHeader?: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable?: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    /**\n     * Sets selected task by id\n     */\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n}\n\nexport interface GanttProps extends EventOption, DisplayOption, StylingOption {\n  tasks: Task[];\n}\n", "import { Task, ViewMode } from \"../types/public-types\";\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\nimport DateTimeFormat = Intl.DateTimeFormat;\n\ntype DateHelperScales =\n  | \"year\"\n  | \"month\"\n  | \"day\"\n  | \"hour\"\n  | \"minute\"\n  | \"second\"\n  | \"millisecond\";\n\nconst intlDTCache = {};\nexport const getCachedDateTimeFormat = (\n  locString: string | string[],\n  opts: DateTimeFormatOptions = {}\n): DateTimeFormat => {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n};\n\n\nexport const addToDate = (\n  date: Date,\n  quantity: number,\n  scale: DateHelperScales\n) => {\n  const newDate = new Date(\n    date.getFullYear() + (scale === \"year\" ? quantity : 0),\n    date.getMonth() + (scale === \"month\" ? quantity : 0),\n    date.getDate() + (scale === \"day\" ? quantity : 0),\n    date.getHours() + (scale === \"hour\" ? quantity : 0),\n    date.getMinutes() + (scale === \"minute\" ? quantity : 0),\n    date.getSeconds() + (scale === \"second\" ? quantity : 0),\n    date.getMilliseconds() + (scale === \"millisecond\" ? quantity : 0)\n  );\n  return newDate;\n};\n\nexport const startOfDate = (date: Date, scale: DateHelperScales) => {\n  const scores = [\n    \"millisecond\",\n    \"second\",\n    \"minute\",\n    \"hour\",\n    \"day\",\n    \"month\",\n    \"year\",\n  ];\n\n  const shouldReset = (_scale: DateHelperScales) => {\n    const maxScore = scores.indexOf(scale);\n    return scores.indexOf(_scale) <= maxScore;\n  };\n  const newDate = new Date(\n    date.getFullYear(),\n    shouldReset(\"year\") ? 0 : date.getMonth(),\n    shouldReset(\"month\") ? 1 : date.getDate(),\n    shouldReset(\"day\") ? 0 : date.getHours(),\n    shouldReset(\"hour\") ? 0 : date.getMinutes(),\n    shouldReset(\"minute\") ? 0 : date.getSeconds(),\n    shouldReset(\"second\") ? 0 : date.getMilliseconds()\n  );\n  return newDate;\n};\n\nexport const ganttDateRange = (tasks: Task[], viewMode: ViewMode) => {\n  let newStartDate: Date = tasks[0].start;\n  let newEndDate: Date = tasks[0].start;\n  for (const task of tasks) {\n    if (task.start < newStartDate) {\n      newStartDate = task.start;\n    }\n    if (task.end > newEndDate) {\n      newEndDate = task.end;\n    }\n  }\n  switch (viewMode) {\n    case ViewMode.Month:\n      newStartDate = addToDate(newStartDate, -1, \"month\");\n      newStartDate = startOfDate(newStartDate, \"month\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Week:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(getMonday(newStartDate), -7, \"day\");\n      newEndDate = addToDate(newEndDate, 1.5, \"month\");\n      break;\n    case ViewMode.Day:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 19, \"day\");\n      break;\n    case ViewMode.QuarterDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 66, \"hour\"); // 24(1 day)*3 - 6\n      break;\n    case ViewMode.HalfDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1, \"day\");\n      newEndDate = addToDate(newEndDate, 108, \"hour\"); // 24(1 day)*5 - 12\n      break;\n  }\n  return [newStartDate, newEndDate];\n};\n\nexport const seedDates = (\n  startDate: Date,\n  endDate: Date,\n  viewMode: ViewMode\n) => {\n  let currentDate: Date = new Date(startDate);\n  const dates: Date[] = [currentDate];\n  while (currentDate < endDate) {\n    switch (viewMode) {\n      case ViewMode.Month:\n        currentDate = addToDate(currentDate, 1, \"month\");\n        break;\n      case ViewMode.Week:\n        currentDate = addToDate(currentDate, 7, \"day\");\n        break;\n      case ViewMode.Day:\n        currentDate = addToDate(currentDate, 1, \"day\");\n        break;\n      case ViewMode.HalfDay:\n        currentDate = addToDate(currentDate, 12, \"hour\");\n        break;\n      case ViewMode.QuarterDay:\n        currentDate = addToDate(currentDate, 6, \"hour\");\n        break;\n    }\n    dates.push(currentDate);\n  }\n  return dates;\n};\n\nexport const getLocaleMonth = (date: Date, locale: string) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    month: \"long\",\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\n/**\n * Returns monday of current week\n * @param date date for modify\n */\nconst getMonday = (date: Date) => {\n  const day = date.getDay();\n  const diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(date.setDate(diff));\n};\n\nexport const getWeekNumberISO8601 = (date: Date) => {\n  const tmpDate = new Date(date.valueOf());\n  const dayNumber = (tmpDate.getDay() + 6) % 7;\n  tmpDate.setDate(tmpDate.getDate() - dayNumber + 3);\n  const firstThursday = tmpDate.valueOf();\n  tmpDate.setMonth(0, 1);\n  if (tmpDate.getDay() !== 4) {\n    tmpDate.setMonth(0, 1 + ((4 - tmpDate.getDay() + 7) % 7));\n  }\n  const weekNumber = (\n    1 + Math.ceil((firstThursday - tmpDate.valueOf()) / 604800000)\n  ).toString();\n\n  if (weekNumber.length === 1) {\n    return `0${weekNumber}`;\n  } else {\n    return weekNumber;\n  }\n};\n\nexport const getDaysInMonth = (month: number, year: number) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n\n", "import React from \"react\";\nimport styles from \"./task-list-header.module.css\";\n\nexport const TaskListHeaderDefault: React.FC<{\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n}> = ({ headerHeight, fontFamily, fontSize, rowWidth }) => {\n  return (\n    <div\n      className={styles.ganttTable}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      <div\n        className={styles.ganttTable_Header}\n        style={{\n          height: headerHeight - 2,\n        }}\n      >\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;Name\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.2,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;From\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.25,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;To\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import React, { useMemo } from \"react\";\nimport styles from \"./task-list-table.module.css\";\nimport { Task } from \"../../types/public-types\";\n\nconst localeDateStringCache = {};\nconst toLocaleDateStringFactory = (locale: string) => (\n  date: Date,\n  dateTimeOptions: Intl.DateTimeFormatOptions\n) => {\n  const key = date.toString();\n  let lds = localeDateStringCache[key];\n  if (!lds) {\n    lds = date.toLocaleDateString(locale, dateTimeOptions);\n    localeDateStringCache[key] = lds;\n  }\n  return lds;\n};\nconst dateTimeOptions: Intl.DateTimeFormatOptions = {\n  weekday: \"short\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n};\n\nexport const TaskListTableDefault: React.FC<{\n  rowHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  locale: string;\n  tasks: Task[];\n  selectedTaskId: string;\n  setSelectedTask: (taskId: string) => void;\n  onExpanderClick: (task: Task) => void;\n}> = ({\n  rowHeight,\n  rowWidth,\n  tasks,\n  fontFamily,\n  fontSize,\n  locale,\n  onExpanderClick,\n}) => {\n  const toLocaleDateString = useMemo(() => toLocaleDateStringFactory(locale), [\n    locale,\n  ]);\n\n  return (\n    <div\n      className={styles.taskListWrapper}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      {tasks.map(t => {\n        let expanderSymbol = \"\";\n        if (t.hideChildren === false) {\n          expanderSymbol = \"\u25BC\";\n        } else if (t.hideChildren === true) {\n          expanderSymbol = \"\u25B6\";\n        }\n\n        return (\n          <div\n            className={styles.taskListTableRow}\n            style={{ height: rowHeight }}\n            key={`${t.id}row`}\n          >\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n              title={t.name}\n            >\n              <div className={styles.taskListNameWrapper}>\n                <div\n                  className={\n                    expanderSymbol\n                      ? styles.taskListExpander\n                      : styles.taskListEmptyExpander\n                  }\n                  onClick={() => onExpanderClick(t)}\n                >\n                  {expanderSymbol}\n                </div>\n                <div>{t.name}</div>\n              </div>\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.start, dateTimeOptions)}\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.end, dateTimeOptions)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n", "import React, { useRef, useEffect, useState } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport styles from \"./tooltip.module.css\";\n\nexport type TooltipProps = {\n  task: BarTask;\n  arrowIndent: number;\n  rtl: boolean;\n  svgContainerHeight: number;\n  svgContainerWidth: number;\n  svgWidth: number;\n  headerHeight: number;\n  taskListWidth: number;\n  scrollX: number;\n  scrollY: number;\n  rowHeight: number;\n  fontSize: string;\n  fontFamily: string;\n  TooltipContent: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n};\nexport const Tooltip: React.FC<TooltipProps> = ({\n  task,\n  rowHeight,\n  rtl,\n  svgContainerHeight,\n  svgContainerWidth,\n  scrollX,\n  scrollY,\n  arrowIndent,\n  fontSize,\n  fontFamily,\n  headerHeight,\n  taskListWidth,\n  TooltipContent,\n}) => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n  const [relatedY, setRelatedY] = useState(0);\n  const [relatedX, setRelatedX] = useState(0);\n  useEffect(() => {\n    if (tooltipRef.current) {\n      const tooltipHeight = tooltipRef.current.offsetHeight * 1.1;\n      const tooltipWidth = tooltipRef.current.offsetWidth * 1.1;\n\n      let newRelatedY = task.index * rowHeight - scrollY + headerHeight;\n      let newRelatedX: number;\n      if (rtl) {\n        newRelatedX = task.x1 - arrowIndent * 1.5 - tooltipWidth - scrollX;\n        if (newRelatedX < 0) {\n          newRelatedX = task.x2 + arrowIndent * 1.5 - scrollX;\n        }\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        if (tooltipLeftmostPoint > svgContainerWidth) {\n          newRelatedX = svgContainerWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      } else {\n        newRelatedX = task.x2 + arrowIndent * 1.5 + taskListWidth - scrollX;\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        const fullChartWidth = taskListWidth + svgContainerWidth;\n        if (tooltipLeftmostPoint > fullChartWidth) {\n          newRelatedX =\n            task.x1 +\n            taskListWidth -\n            arrowIndent * 1.5 -\n            scrollX -\n            tooltipWidth;\n        }\n        if (newRelatedX < taskListWidth) {\n          newRelatedX = svgContainerWidth + taskListWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      }\n\n      const tooltipLowerPoint = tooltipHeight + newRelatedY - scrollY;\n      if (tooltipLowerPoint > svgContainerHeight - scrollY) {\n        newRelatedY = svgContainerHeight - tooltipHeight;\n      }\n      setRelatedY(newRelatedY);\n      setRelatedX(newRelatedX);\n    }\n  }, [\n    tooltipRef.current,\n    task,\n    arrowIndent,\n    scrollX,\n    scrollY,\n    headerHeight,\n    taskListWidth,\n    rowHeight,\n    svgContainerHeight,\n    svgContainerWidth,\n  ]);\n\n  return (\n    <div\n      ref={tooltipRef}\n      className={\n        relatedX\n          ? styles.tooltipDetailsContainer\n          : styles.tooltipDetailsContainerHidden\n      }\n      style={{ left: relatedX, top: relatedY }}\n    >\n      <TooltipContent task={task} fontSize={fontSize} fontFamily={fontFamily} />\n    </div>\n  );\n};\n\nexport const StandardTooltipContent: React.FC<{\n  task: Task;\n  fontSize: string;\n  fontFamily: string;\n}> = ({ task, fontSize, fontFamily }) => {\n  const style = {\n    fontSize,\n    fontFamily,\n  };\n  return (\n    <div className={styles.tooltipDefaultContainer} style={style}>\n      <b style={{ fontSize: fontSize + 6 }}>{`${\n        task.name\n      }: ${task.start.getDate()}-${\n        task.start.getMonth() + 1\n      }-${task.start.getFullYear()} - ${task.end.getDate()}-${\n        task.end.getMonth() + 1\n      }-${task.end.getFullYear()}`}</b>\n      {task.end.getTime() - task.start.getTime() !== 0 && (\n        <p className={styles.tooltipDefaultContainerParagraph}>{`Duration: ${~~(\n          (task.end.getTime() - task.start.getTime()) /\n          (1000 * 60 * 60 * 24)\n        )} day(s)`}</p>\n      )}\n\n      <p className={styles.tooltipDefaultContainerParagraph}>\n        {!!task.progress && `Progress: ${task.progress} %`}\n      </p>\n    </div>\n  );\n};\n", "import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./vertical-scroll.module.css\";\n\nexport const VerticalScroll: React.FC<{\n  scroll: number;\n  ganttHeight: number;\n  ganttFullHeight: number;\n  headerHeight: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({\n  scroll,\n  ganttHeight,\n  ganttFullHeight,\n  headerHeight,\n  rtl,\n  onScroll,\n}) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      style={{\n        height: ganttHeight,\n        marginTop: headerHeight,\n        marginLeft: rtl ? \"\" : \"-17px\",\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ height: ganttFullHeight, width: 1 }} />\n    </div>\n  );\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Task } from \"../../types/public-types\";\n\nexport type TaskListProps = {\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  rowHeight: number;\n  ganttHeight: number;\n  scrollY: number;\n  locale: string;\n  tasks: Task[];\n  taskListRef: React.RefObject<HTMLDivElement>;\n  horizontalContainerClass?: string;\n  selectedTask: BarTask | undefined;\n  setSelectedTask: (task: string) => void;\n  onExpanderClick: (task: Task) => void;\n  TaskListHeader: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n};\n\nexport const TaskList: React.FC<TaskListProps> = ({\n  headerHeight,\n  fontFamily,\n  fontSize,\n  rowWidth,\n  rowHeight,\n  scrollY,\n  tasks,\n  selectedTask,\n  setSelectedTask,\n  onExpanderClick,\n  locale,\n  ganttHeight,\n  taskListRef,\n  horizontalContainerClass,\n  TaskListHeader,\n  TaskListTable,\n}) => {\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  const headerProps = {\n    headerHeight,\n    fontFamily,\n    fontSize,\n    rowWidth,\n  };\n  const selectedTaskId = selectedTask ? selectedTask.id : \"\";\n  const tableProps = {\n    rowHeight,\n    rowWidth,\n    fontFamily,\n    fontSize,\n    tasks,\n    locale,\n    selectedTaskId: selectedTaskId,\n    setSelectedTask,\n    onExpanderClick,\n  };\n\n  return (\n    <div ref={taskListRef}>\n      <TaskListHeader {...headerProps} />\n      <div\n        ref={horizontalContainerRef}\n        className={horizontalContainerClass}\n        style={ganttHeight ? { height: ganttHeight } : {}}\n      >\n        <TaskListTable {...tableProps} />\n      </div>\n    </div>\n  );\n};\n", "import React, { ReactChild } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { addToDate } from \"../../helpers/date-helper\";\nimport styles from \"./grid.module.css\";\n\nexport type GridBodyProps = {\n  tasks: Task[];\n  dates: Date[];\n  svgWidth: number;\n  rowHeight: number;\n  columnWidth: number;\n  todayColor: string;\n  rtl: boolean;\n};\nexport const GridBody: React.FC<GridBodyProps> = ({\n  tasks,\n  dates,\n  rowHeight,\n  svgWidth,\n  columnWidth,\n  todayColor,\n  rtl,\n}) => {\n  let y = 0;\n  const gridRows: ReactChild[] = [];\n  const rowLines: ReactChild[] = [\n    <line\n      key=\"RowLineFirst\"\n      x=\"0\"\n      y1={0}\n      x2={svgWidth}\n      y2={0}\n      className={styles.gridRowLine}\n    />,\n  ];\n  for (const task of tasks) {\n    gridRows.push(\n      <rect\n        key={\"Row\" + task.id}\n        x=\"0\"\n        y={y}\n        width={svgWidth}\n        height={rowHeight}\n        className={styles.gridRow}\n      />\n    );\n    rowLines.push(\n      <line\n        key={\"RowLine\" + task.id}\n        x=\"0\"\n        y1={y + rowHeight}\n        x2={svgWidth}\n        y2={y + rowHeight}\n        className={styles.gridRowLine}\n      />\n    );\n    y += rowHeight;\n  }\n\n  const now = new Date();\n  let tickX = 0;\n  const ticks: ReactChild[] = [];\n  let today: ReactChild = <rect />;\n  for (let i = 0; i < dates.length; i++) {\n    const date = dates[i];\n    ticks.push(\n      <line\n        key={date.getTime()}\n        x1={tickX}\n        y1={0}\n        x2={tickX}\n        y2={y}\n        className={styles.gridTick}\n      />\n    );\n    if (\n      (i + 1 !== dates.length &&\n        date.getTime() < now.getTime() &&\n        dates[i + 1].getTime() >= now.getTime()) ||\n      // if current date is last\n      (i !== 0 &&\n        i + 1 === dates.length &&\n        date.getTime() < now.getTime() &&\n        addToDate(\n          date,\n          date.getTime() - dates[i - 1].getTime(),\n          \"millisecond\"\n        ).getTime() >= now.getTime())\n    ) {\n      today = (\n        <rect\n          x={tickX}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    // rtl for today\n    if (\n      rtl &&\n      i + 1 !== dates.length &&\n      date.getTime() >= now.getTime() &&\n      dates[i + 1].getTime() < now.getTime()\n    ) {\n      today = (\n        <rect\n          x={tickX + columnWidth}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    tickX += columnWidth;\n  }\n  return (\n    <g className=\"gridBody\">\n      <g className=\"rows\">{gridRows}</g>\n      <g className=\"rowLines\">{rowLines}</g>\n      <g className=\"ticks\">{ticks}</g>\n      <g className=\"today\">{today}</g>\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { GridBody, GridBodyProps } from \"./grid-body\";\n\nexport type GridProps = GridBodyProps;\nexport const Grid: React.FC<GridProps> = props => {\n  return (\n    <g className=\"grid\">\n      <GridBody {...props} />\n    </g>\n  );\n};\n", "import React from \"react\";\nimport styles from \"./calendar.module.css\";\n\ntype TopPartOfCalendarProps = {\n  value: string;\n  x1Line: number;\n  y1Line: number;\n  y2Line: number;\n  xText: number;\n  yText: number;\n};\n\nexport const TopPartOfCalendar: React.FC<TopPartOfCalendarProps> = ({\n  value,\n  x1Line,\n  y1Line,\n  y2Line,\n  xText,\n  yText,\n}) => {\n  return (\n    <g className=\"calendarTop\">\n      <line\n        x1={x1Line}\n        y1={y1Line}\n        x2={x1Line}\n        y2={y2Line}\n        className={styles.calendarTopTick}\n        key={value + \"line\"}\n      />\n      <text\n        key={value + \"text\"}\n        y={yText}\n        x={xText}\n        className={styles.calendarTopText}\n      >\n        {value}\n      </text>\n    </g>\n  );\n};\n", "import React, { ReactChild } from \"react\";\nimport { ViewMode } from \"../../types/public-types\";\nimport { TopPartOfCalendar } from \"./top-part-of-calendar\";\nimport {\n  getCachedDateTimeFormat,\n  getDaysInMonth,\n  getLocaleMonth,\n  getWeekNumberISO8601,\n} from \"../../helpers/date-helper\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./calendar.module.css\";\n\nexport type CalendarProps = {\n  dateSetup: DateSetup;\n  locale: string;\n  viewMode: ViewMode;\n  rtl: boolean;\n  headerHeight: number;\n  columnWidth: number;\n  fontFamily: string;\n  fontSize: string;\n};\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  dateSetup,\n  locale,\n  viewMode,\n  rtl,\n  headerHeight,\n  columnWidth,\n  fontFamily,\n  fontSize,\n}) => {\n  const getCalendarValuesForMonth = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i];\n      const bottomValue = getLocaleMonth(date, locale);\n      bottomValues.push(\n        <text\n          key={bottomValue + date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString();\n        let xText: number;\n        if (rtl) {\n          xText = (6 + i + date.getMonth() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getMonth()) * columnWidth;\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForWeek = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    let weeksCount: number = 1;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = dates.length - 1; i >= 0; i--) {\n      const date = dates[i];\n      let topValue = \"\";\n      if (i === 0 || date.getMonth() !== dates[i - 1].getMonth()) {\n        // top\n        topValue = `${getLocaleMonth(date, locale)}, ${date.getFullYear()}`;\n      }\n      // bottom\n      const bottomValue = `W${getWeekNumberISO8601(date)}`;\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n\n      if (topValue) {\n        // if last day is new month\n        if (i !== dates.length - 1) {\n          topValues.push(\n            <TopPartOfCalendar\n              key={topValue}\n              value={topValue}\n              x1Line={columnWidth * i + weeksCount * columnWidth}\n              y1Line={0}\n              y2Line={topDefaultHeight}\n              xText={columnWidth * i + columnWidth * weeksCount * 0.5}\n              yText={topDefaultHeight * 0.9}\n            />\n          );\n        }\n        weeksCount = 0;\n      }\n      weeksCount++;\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForDay = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = date.getDate().toString();\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i + 1 !== dates.length &&\n        date.getMonth() !== dates[i + 1].getMonth()\n      ) {\n        const topValue = getLocaleMonth(date, locale);\n\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * (i + 1)}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={\n              columnWidth * (i + 1) -\n              getDaysInMonth(date.getMonth(), date.getFullYear()) *\n                columnWidth *\n                0.5\n            }\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForOther = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const ticks = viewMode === ViewMode.HalfDay ? 2 : 4;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date);\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (i === 0 || date.getDate() !== dates[i - 1].getDate()) {\n        const topValue = `${date.getDate()} ${getLocaleMonth(date, locale)}`;\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i + ticks * columnWidth}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * i + ticks * columnWidth * 0.5}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  let topValues: ReactChild[] = [];\n  let bottomValues: ReactChild[] = [];\n  switch (dateSetup.viewMode) {\n    case ViewMode.Month:\n      [topValues, bottomValues] = getCalendarValuesForMonth();\n      break;\n    case ViewMode.Week:\n      [topValues, bottomValues] = getCalendarValuesForWeek();\n      break;\n    case ViewMode.Day:\n      [topValues, bottomValues] = getCalendarValuesForDay();\n      break;\n    default:\n      [topValues, bottomValues] = getCalendarValuesForOther();\n      break;\n  }\n  return (\n    <g className=\"calendar\" fontSize={fontSize} fontFamily={fontFamily}>\n      <rect\n        x={0}\n        y={0}\n        width={columnWidth * dateSetup.dates.length}\n        height={headerHeight}\n        className={styles.calendarHeader}\n      />\n      {bottomValues} {topValues}\n    </g>\n  );\n};\n", "// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n", "import React from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\n\ntype ArrowProps = {\n  taskFrom: BarTask;\n  taskTo: BarTask;\n  rowHeight: number;\n  taskHeight: number;\n  arrowIndent: number;\n  rtl: boolean;\n};\nexport const Arrow: React.FC<ArrowProps> = ({\n  taskFrom,\n  taskTo,\n  rowHeight,\n  taskHeight,\n  arrowIndent,\n  rtl,\n}) => {\n  let path: string;\n  let trianglePoints: string;\n  if (rtl) {\n    [path, trianglePoints] = drownPathAndTriangleRTL(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  } else {\n    [path, trianglePoints] = drownPathAndTriangle(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  }\n\n  return (\n    <g className=\"arrow\">\n      <path strokeWidth=\"1.5\" d={path} fill=\"none\" />\n      <polygon points={trianglePoints} />\n    </g>\n  );\n};\n\nconst drownPathAndTriangle = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x2 + arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x1 ? \"\" : `H ${taskTo.x1 - arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x1\n      ? arrowIndent\n      : taskTo.x1 - taskFrom.x2 - arrowIndent;\n\n  const path = `M ${taskFrom.x2} ${taskFrom.y + taskHeight / 2} \n  h ${arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x1},${taskToEndPosition} \n  ${taskTo.x1 - 5},${taskToEndPosition - 5} \n  ${taskTo.x1 - 5},${taskToEndPosition + 5}`;\n  return [path, trianglePoints];\n};\n\nconst drownPathAndTriangleRTL = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x1 - arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x2 ? \"\" : `H ${taskTo.x2 + arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x2\n      ? -arrowIndent\n      : taskTo.x2 - taskFrom.x1 + arrowIndent;\n\n  const path = `M ${taskFrom.x1} ${taskFrom.y + taskHeight / 2} \n  h ${-arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x2},${taskToEndPosition} \n  ${taskTo.x2 + 5},${taskToEndPosition + 5} \n  ${taskTo.x2 + 5},${taskToEndPosition - 5}`;\n  return [path, trianglePoints];\n};\n", "import { Task } from \"../types/public-types\";\nimport { BarTask, TaskTypeInternal } from \"../types/bar-task\";\nimport { BarMoveAction } from \"../types/gantt-task-actions\";\n\nexport const convertToBarTasks = (\n  tasks: Task[],\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n) => {\n  const dateDelta =\n    dates[1].getTime() -\n    dates[0].getTime() -\n    dates[1].getTimezoneOffset() * 60 * 1000 +\n    dates[0].getTimezoneOffset() * 60 * 1000;\n  let barTasks = tasks.map((t, i) => {\n    return convertToBarTask(\n      t,\n      i,\n      dates,\n      dateDelta,\n      columnWidth,\n      rowHeight,\n      taskHeight,\n      barCornerRadius,\n      handleWidth,\n      rtl,\n      barProgressColor,\n      barProgressSelectedColor,\n      barBackgroundColor,\n      barBackgroundSelectedColor,\n      projectProgressColor,\n      projectProgressSelectedColor,\n      projectBackgroundColor,\n      projectBackgroundSelectedColor,\n      milestoneBackgroundColor,\n      milestoneBackgroundSelectedColor\n    );\n  });\n\n  // set dependencies\n  barTasks = barTasks.map(task => {\n    const dependencies = task.dependencies || [];\n    for (let j = 0; j < dependencies.length; j++) {\n      const dependence = barTasks.findIndex(\n        value => value.id === dependencies[j]\n      );\n      if (dependence !== -1) barTasks[dependence].barChildren.push(task);\n    }\n    return task;\n  });\n\n  return barTasks;\n};\n\nconst convertToBarTask = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  let barTask: BarTask;\n  switch (task.type) {\n    case \"milestone\":\n      barTask = convertToMilestone(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      );\n      break;\n    case \"project\":\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor\n      );\n      break;\n    default:\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        dateDelta,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor\n      );\n      break;\n  }\n  return barTask;\n};\n\nconst convertToBar = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string\n): BarTask => {\n  let x1: number;\n  let x2: number;\n  if (rtl) {\n    x2 = taskXCoordinateRTL(task.start, dates, dateDelta, columnWidth);\n    x1 = taskXCoordinateRTL(task.end, dates, dateDelta, columnWidth);\n  } else {\n    x1 = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n    x2 = taskXCoordinate(task.end, dates, dateDelta, columnWidth);\n  }\n  let typeInternal: TaskTypeInternal = task.type;\n  if (typeInternal === \"task\" && x2 - x1 < handleWidth * 2) {\n    typeInternal = \"smalltask\";\n    x2 = x1 + handleWidth * 2;\n  }\n\n  const [progressWidth, progressX] = progressWithByParams(\n    x1,\n    x2,\n    task.progress,\n    rtl\n  );\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n  const hideChildren = task.type === \"project\" ? task.hideChildren : undefined;\n\n  const styles = {\n    backgroundColor: barBackgroundColor,\n    backgroundSelectedColor: barBackgroundSelectedColor,\n    progressColor: barProgressColor,\n    progressSelectedColor: barProgressSelectedColor,\n    ...task.styles,\n  };\n  return {\n    ...task,\n    typeInternal,\n    x1,\n    x2,\n    y,\n    index,\n    progressX,\n    progressWidth,\n    barCornerRadius,\n    handleWidth,\n    hideChildren,\n    height: taskHeight,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst convertToMilestone = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  const x = taskXCoordinate(task.start, dates, dateDelta, columnWidth);\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n\n  const x1 = x - taskHeight * 0.5;\n  const x2 = x + taskHeight * 0.5;\n\n  const rotatedHeight = taskHeight / 1.414;\n  const styles = {\n    backgroundColor: milestoneBackgroundColor,\n    backgroundSelectedColor: milestoneBackgroundSelectedColor,\n    progressColor: \"\",\n    progressSelectedColor: \"\",\n    ...task.styles,\n  };\n  return {\n    ...task,\n    end: task.start,\n    x1,\n    x2,\n    y,\n    index,\n    progressX: 0,\n    progressWidth: 0,\n    barCornerRadius,\n    handleWidth,\n    typeInternal: task.type,\n    progress: 0,\n    height: rotatedHeight,\n    hideChildren: undefined,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst taskXCoordinate = (\n  xDate: Date,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number\n) => {\n  const index = ~~(\n    (xDate.getTime() -\n      dates[0].getTime() +\n      xDate.getTimezoneOffset() -\n      dates[0].getTimezoneOffset()) /\n    dateDelta\n  );\n  const x = Math.round(\n    (index +\n      (xDate.getTime() -\n        dates[index].getTime() -\n        xDate.getTimezoneOffset() * 60 * 1000 +\n        dates[index].getTimezoneOffset() * 60 * 1000) /\n        dateDelta) *\n      columnWidth\n  );\n  return x;\n};\nconst taskXCoordinateRTL = (\n  xDate: Date,\n  dates: Date[],\n  dateDelta: number,\n  columnWidth: number\n) => {\n  let x = taskXCoordinate(xDate, dates, dateDelta, columnWidth);\n  x += columnWidth;\n  return x;\n};\nconst taskYCoordinate = (\n  index: number,\n  rowHeight: number,\n  taskHeight: number\n) => {\n  const y = index * rowHeight + (rowHeight - taskHeight) / 2;\n  return y;\n};\n\nexport const progressWithByParams = (\n  taskX1: number,\n  taskX2: number,\n  progress: number,\n  rtl: boolean\n) => {\n  const progressWidth = (taskX2 - taskX1) * progress * 0.01;\n  let progressX: number;\n  if (rtl) {\n    progressX = taskX2 - progressWidth;\n  } else {\n    progressX = taskX1;\n  }\n  return [progressWidth, progressX];\n};\n\nexport const progressByProgressWidth = (\n  progressWidth: number,\n  barTask: BarTask\n) => {\n  const barWidth = barTask.x2 - barTask.x1;\n  const progressPercent = Math.round((progressWidth * 100) / barWidth);\n  if (progressPercent >= 100) return 100;\n  else if (progressPercent <= 0) return 0;\n  else return progressPercent;\n};\n\nconst progressByX = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 100;\n  else if (x <= task.x1) return 0;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((x - task.x1) * 100) / barWidth);\n    return progressPercent;\n  }\n};\nconst progressByXRTL = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 0;\n  else if (x <= task.x1) return 100;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((task.x2 - x) * 100) / barWidth);\n    return progressPercent;\n  }\n};\n\nexport const getProgressPoint = (\n  progressX: number,\n  taskY: number,\n  taskHeight: number\n) => {\n  const point = [\n    progressX - 5,\n    taskY + taskHeight,\n    progressX + 5,\n    taskY + taskHeight,\n    progressX,\n    taskY + taskHeight - 8.66,\n  ];\n  return point.join(\",\");\n};\n\nconst startByX = (x: number, xStep: number, task: BarTask) => {\n  if (x >= task.x2 - task.handleWidth * 2) {\n    x = task.x2 - task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x1 + additionalXValue;\n  return newX;\n};\n\nconst endByX = (x: number, xStep: number, task: BarTask) => {\n  if (x <= task.x1 + task.handleWidth * 2) {\n    x = task.x1 + task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x2) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x2 + additionalXValue;\n  return newX;\n};\n\nconst moveByX = (x: number, xStep: number, task: BarTask) => {\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX1 = task.x1 + additionalXValue;\n  const newX2 = newX1 + task.x2 - task.x1;\n  return [newX1, newX2];\n};\n\nconst dateByX = (\n  x: number,\n  taskX: number,\n  taskDate: Date,\n  xStep: number,\n  timeStep: number\n) => {\n  let newDate = new Date(((x - taskX) / xStep) * timeStep + taskDate.getTime());\n  newDate = new Date(\n    newDate.getTime() +\n      (newDate.getTimezoneOffset() - taskDate.getTimezoneOffset()) * 60000\n  );\n  return newDate;\n};\n\n/**\n * Method handles event in real time(mousemove) and on finish(mouseup)\n */\nexport const handleTaskBySVGMouseEvent = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  let result: { isChanged: boolean; changedTask: BarTask };\n  switch (selectedTask.type) {\n    case \"milestone\":\n      result = handleTaskBySVGMouseEventForMilestone(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta\n      );\n      break;\n    default:\n      result = handleTaskBySVGMouseEventForBar(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      break;\n  }\n  return result;\n};\n\nconst handleTaskBySVGMouseEventForBar = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"progress\":\n      if (rtl) {\n        changedTask.progress = progressByXRTL(svgX, selectedTask);\n      } else {\n        changedTask.progress = progressByX(svgX, selectedTask);\n      }\n      isChanged = changedTask.progress !== selectedTask.progress;\n      if (isChanged) {\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    case \"start\": {\n      const newX1 = startByX(svgX, xStep, selectedTask);\n      changedTask.x1 = newX1;\n      isChanged = changedTask.x1 !== selectedTask.x1;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.end = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.start = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"end\": {\n      const newX2 = endByX(svgX, xStep, selectedTask);\n      changedTask.x2 = newX2;\n      isChanged = changedTask.x2 !== selectedTask.x2;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.start = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.end = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = dateByX(\n          newMoveX2,\n          selectedTask.x2,\n          selectedTask.end,\n          xStep,\n          timeStep\n        );\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n\nconst handleTaskBySVGMouseEventForMilestone = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = changedTask.start;\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n", "import { BarTask } from \"../types/bar-task\";\nimport { Task } from \"../types/public-types\";\n\nexport function isKeyboardEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.KeyboardEvent {\n  return (event as React.KeyboardEvent).key !== undefined;\n}\n\nexport function isMouseEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.MouseEvent {\n  return (event as React.MouseEvent).clientX !== undefined;\n}\n\nexport function isBarTask(task: Task | BarTask): task is BarTask {\n  return (task as BarTask).x1 !== undefined;\n}\n\nexport function removeHiddenTasks(tasks: Task[]) {\n  const groupedTasks = tasks.filter(\n    t => t.hideChildren && t.type === \"project\"\n  );\n  if (groupedTasks.length > 0) {\n    for (let i = 0; groupedTasks.length > i; i++) {\n      const groupedTask = groupedTasks[i];\n      const children = getChildren(tasks, groupedTask);\n      tasks = tasks.filter(t => children.indexOf(t) === -1);\n    }\n  }\n  return tasks;\n}\n\nfunction getChildren(taskList: Task[], task: Task) {\n  let tasks: Task[] = [];\n  if (task.type !== \"project\") {\n    tasks = taskList.filter(\n      t => t.dependencies && t.dependencies.indexOf(task.id) !== -1\n    );\n  } else {\n    tasks = taskList.filter(t => t.project && t.project === task.id);\n  }\n  const taskChildren = tasks.reduce(\n    (children: Task[], t) =>\n      children.concat(children, getChildren(taskList, t)),\n    []\n  );\n  tasks = tasks.concat(tasks, taskChildren);\n  return tasks;\n}\n", "import React from \"react\";\nimport style from \"./bar.module.css\";\n\ntype BarDisplayProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isSelected: boolean;\n  /* progress start point */\n  progressX: number;\n  progressWidth: number;\n  barCornerRadius: number;\n  styles: {\n    backgroundColor: string;\n    backgroundSelectedColor: string;\n    progressColor: string;\n    progressSelectedColor: string;\n  };\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarDisplay: React.FC<BarDisplayProps> = ({\n  x,\n  y,\n  width,\n  height,\n  isSelected,\n  progressX,\n  progressWidth,\n  barCornerRadius,\n  styles,\n  onMouseDown,\n}) => {\n  const getProcessColor = () => {\n    return isSelected ? styles.progressSelectedColor : styles.progressColor;\n  };\n\n  const getBarColor = () => {\n    return isSelected ? styles.backgroundSelectedColor : styles.backgroundColor;\n  };\n\n  return (\n    <g onMouseDown={onMouseDown}>\n      <rect\n        x={x}\n        width={width}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getBarColor()}\n        className={style.barBackground}\n      />\n      <rect\n        x={progressX}\n        width={progressWidth}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getProcessColor()}\n      />\n    </g>\n  );\n};\n", "import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarDateHandleProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  barCornerRadius: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n};\nexport const BarDateHandle: React.FC<BarDateHandleProps> = ({\n  x,\n  y,\n  width,\n  height,\n  barCornerRadius,\n  onMouseDown,\n}) => {\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      className={styles.barHandle}\n      ry={barCornerRadius}\n      rx={barCornerRadius}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n", "import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarProgressHandleProps = {\n  progressPoint: string;\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarProgressHandle: React.FC<BarProgressHandleProps> = ({\n  progressPoint,\n  onMouseDown,\n}) => {\n  return (\n    <polygon\n      className={styles.barHandle}\n      points={progressPoint}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n", "import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarDateHandle } from \"./bar-date-handle\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const Bar: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  rtl,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    +!rtl * task.progressWidth + task.progressX,\n    task.y,\n    task.height\n  );\n  const handleHeight = task.height - 2;\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isDateChangeable && (\n          <g>\n            {/* left */}\n            <BarDateHandle\n              x={task.x1 + 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"start\", task, e);\n              }}\n            />\n            {/* right */}\n            <BarDateHandle\n              x={task.x2 - task.handleWidth - 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"end\", task, e);\n              }}\n            />\n          </g>\n        )}\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const BarSmall: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    task.progressWidth + task.x1,\n    task.y,\n    task.height\n  );\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./milestone.module.css\";\n\nexport const Milestone: React.FC<TaskItemProps> = ({\n  task,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const transform = `rotate(45 ${task.x1 + task.height * 0.356} \n    ${task.y + task.height * 0.85})`;\n  const getBarColor = () => {\n    return isSelected\n      ? task.styles.backgroundSelectedColor\n      : task.styles.backgroundColor;\n  };\n\n  return (\n    <g tabIndex={0} className={styles.milestoneWrapper}>\n      <rect\n        fill={getBarColor()}\n        x={task.x1}\n        width={task.height}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        transform={transform}\n        className={styles.milestoneBackground}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./project.module.css\";\n\nexport const Project: React.FC<TaskItemProps> = ({ task, isSelected }) => {\n  const barColor = isSelected\n    ? task.styles.backgroundSelectedColor\n    : task.styles.backgroundColor;\n  const processColor = isSelected\n    ? task.styles.progressSelectedColor\n    : task.styles.progressColor;\n  const projectWith = task.x2 - task.x1;\n\n  const projectLeftTriangle = [\n    task.x1,\n    task.y + task.height / 2 - 1,\n    task.x1,\n    task.y + task.height,\n    task.x1 + 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n  const projectRightTriangle = [\n    task.x2,\n    task.y + task.height / 2 - 1,\n    task.x2,\n    task.y + task.height,\n    task.x2 - 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n\n  return (\n    <g tabIndex={0} className={styles.projectWrapper}>\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectBackground}\n      />\n      <rect\n        x={task.progressX}\n        width={task.progressWidth}\n        y={task.y}\n        height={task.height}\n        ry={task.barCornerRadius}\n        rx={task.barCornerRadius}\n        fill={processColor}\n      />\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height / 2}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectTop}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectLeftTriangle}\n        fill={barColor}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectRightTriangle}\n        fill={barColor}\n      />\n    </g>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { GanttContentMoveAction } from \"../../types/gantt-task-actions\";\nimport { Bar } from \"./bar/bar\";\nimport { BarSmall } from \"./bar/bar-small\";\nimport { Milestone } from \"./milestone/milestone\";\nimport { Project } from \"./project/project\";\nimport style from \"./task-list.module.css\";\n\nexport type TaskItemProps = {\n  task: BarTask;\n  arrowIndent: number;\n  taskHeight: number;\n  isProgressChangeable: boolean;\n  isDateChangeable: boolean;\n  isDelete: boolean;\n  isSelected: boolean;\n  rtl: boolean;\n  onEventStart: (\n    action: GanttContentMoveAction,\n    selectedTask: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => any;\n};\n\nexport const TaskItem: React.FC<TaskItemProps> = props => {\n  const {\n    task,\n    arrowIndent,\n    isDelete,\n    taskHeight,\n    isSelected,\n    rtl,\n    onEventStart,\n  } = {\n    ...props,\n  };\n  const textRef = useRef<SVGTextElement>(null);\n  const [taskItem, setTaskItem] = useState<JSX.Element>(<div />);\n  const [isTextInside, setIsTextInside] = useState(true);\n\n  useEffect(() => {\n    switch (task.typeInternal) {\n      case \"milestone\":\n        setTaskItem(<Milestone {...props} />);\n        break;\n      case \"project\":\n        setTaskItem(<Project {...props} />);\n        break;\n      case \"smalltask\":\n        setTaskItem(<BarSmall {...props} />);\n        break;\n      default:\n        setTaskItem(<Bar {...props} />);\n        break;\n    }\n  }, [task, isSelected]);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTextInside(textRef.current.getBBox().width < task.x2 - task.x1);\n    }\n  }, [textRef, task]);\n\n  const getX = () => {\n    const width = task.x2 - task.x1;\n    const hasChild = task.barChildren.length > 0;\n    if (isTextInside) {\n      return task.x1 + width * 0.5;\n    }\n    if (rtl && textRef.current) {\n      return (\n        task.x1 -\n        textRef.current.getBBox().width -\n        arrowIndent * +hasChild -\n        arrowIndent * 0.2\n      );\n    } else {\n      return task.x1 + width + arrowIndent * +hasChild + arrowIndent * 0.2;\n    }\n  };\n\n  return (\n    <g\n      onKeyDown={e => {\n        switch (e.key) {\n          case \"Delete\": {\n            if (isDelete) onEventStart(\"delete\", task, e);\n            break;\n          }\n        }\n        e.stopPropagation();\n      }}\n      onMouseEnter={e => {\n        onEventStart(\"mouseenter\", task, e);\n      }}\n      onMouseLeave={e => {\n        onEventStart(\"mouseleave\", task, e);\n      }}\n      onDoubleClick={e => {\n        onEventStart(\"dblclick\", task, e);\n      }}\n      onFocus={() => {\n        onEventStart(\"select\", task);\n      }}\n    >\n      {taskItem}\n      <text\n        x={getX()}\n        y={task.y + taskHeight * 0.5}\n        className={\n          isTextInside\n            ? style.barLabel\n            : style.barLabel && style.barLabelOutside\n        }\n        ref={textRef}\n      >\n        {task.name}\n      </text>\n    </g>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { EventOption } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Arrow } from \"../other/arrow\";\nimport { handleTaskBySVGMouseEvent } from \"../../helpers/bar-helper\";\nimport { isKeyboardEvent } from \"../../helpers/other-helper\";\nimport { TaskItem } from \"../task-item/task-item\";\nimport {\n  BarMoveAction,\n  GanttContentMoveAction,\n  GanttEvent,\n} from \"../../types/gantt-task-actions\";\n\nexport type TaskGanttContentProps = {\n  tasks: BarTask[];\n  dates: Date[];\n  ganttEvent: GanttEvent;\n  selectedTask: BarTask | undefined;\n  rowHeight: number;\n  columnWidth: number;\n  timeStep: number;\n  svg?: React.RefObject<SVGSVGElement>;\n  svgWidth: number;\n  taskHeight: number;\n  arrowColor: string;\n  arrowIndent: number;\n  fontSize: string;\n  fontFamily: string;\n  rtl: boolean;\n  setGanttEvent: (value: GanttEvent) => void;\n  setFailedTask: (value: BarTask | null) => void;\n  setSelectedTask: (taskId: string) => void;\n} & EventOption;\n\nexport const TaskGanttContent: React.FC<TaskGanttContentProps> = ({\n  tasks,\n  dates,\n  ganttEvent,\n  selectedTask,\n  rowHeight,\n  columnWidth,\n  timeStep,\n  svg,\n  taskHeight,\n  arrowColor,\n  arrowIndent,\n  fontFamily,\n  fontSize,\n  rtl,\n  setGanttEvent,\n  setFailedTask,\n  setSelectedTask,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onDelete,\n}) => {\n  const point = svg?.current?.createSVGPoint();\n  const [xStep, setXStep] = useState(0);\n  const [initEventX1Delta, setInitEventX1Delta] = useState(0);\n  const [isMoving, setIsMoving] = useState(false);\n\n  // create xStep\n  useEffect(() => {\n    const dateDelta =\n      dates[1].getTime() -\n      dates[0].getTime() -\n      dates[1].getTimezoneOffset() * 60 * 1000 +\n      dates[0].getTimezoneOffset() * 60 * 1000;\n    const newXStep = (timeStep * columnWidth) / dateDelta;\n    setXStep(newXStep);\n  }, [columnWidth, dates, timeStep]);\n\n  useEffect(() => {\n    const handleMouseMove = async (event: MouseEvent) => {\n      if (!ganttEvent.changedTask || !point || !svg?.current) return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n\n      const { isChanged, changedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        ganttEvent.action as BarMoveAction,\n        ganttEvent.changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      if (isChanged) {\n        setGanttEvent({ action: ganttEvent.action, changedTask });\n      }\n    };\n\n    const handleMouseUp = async (event: MouseEvent) => {\n      const { action, originalSelectedTask, changedTask } = ganttEvent;\n      if (!changedTask || !point || !svg?.current || !originalSelectedTask)\n        return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n      const { changedTask: newChangedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        action as BarMoveAction,\n        changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n\n      const isNotLikeOriginal =\n        originalSelectedTask.start !== newChangedTask.start ||\n        originalSelectedTask.end !== newChangedTask.end ||\n        originalSelectedTask.progress !== newChangedTask.progress;\n\n      // remove listeners\n      svg.current.removeEventListener(\"mousemove\", handleMouseMove);\n      svg.current.removeEventListener(\"mouseup\", handleMouseUp);\n      setGanttEvent({ action: \"\" });\n      setIsMoving(false);\n\n      // custom operation start\n      let operationSuccess = true;\n      if (\n        (action === \"move\" || action === \"end\" || action === \"start\") &&\n        onDateChange &&\n        isNotLikeOriginal\n      ) {\n        try {\n          const result = await onDateChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      } else if (onProgressChange && isNotLikeOriginal) {\n        try {\n          const result = await onProgressChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      }\n\n      // If operation is failed - return old state\n      if (!operationSuccess) {\n        setFailedTask(originalSelectedTask);\n      }\n    };\n\n    if (\n      !isMoving &&\n      (ganttEvent.action === \"move\" ||\n        ganttEvent.action === \"end\" ||\n        ganttEvent.action === \"start\" ||\n        ganttEvent.action === \"progress\") &&\n      svg?.current\n    ) {\n      svg.current.addEventListener(\"mousemove\", handleMouseMove);\n      svg.current.addEventListener(\"mouseup\", handleMouseUp);\n      setIsMoving(true);\n    }\n  }, [\n    ganttEvent,\n    xStep,\n    initEventX1Delta,\n    onProgressChange,\n    timeStep,\n    onDateChange,\n    svg,\n    isMoving,\n  ]);\n\n  /**\n   * Method is Start point of task change\n   */\n  const handleBarEventStart = async (\n    action: GanttContentMoveAction,\n    task: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    if (!event) {\n      if (action === \"select\") {\n        setSelectedTask(task.id);\n      }\n    }\n    // Keyboard events\n    else if (isKeyboardEvent(event)) {\n      if (action === \"delete\") {\n        if (onDelete) {\n          try {\n            const result = await onDelete(task);\n            if (result !== undefined && result) {\n              setGanttEvent({ action, changedTask: task });\n            }\n          } catch (error) {\n            console.error(\"Error on Delete. \" + error);\n          }\n        }\n      }\n    }\n    // Mouse Events\n    else if (action === \"mouseenter\") {\n      if (!ganttEvent.action) {\n        setGanttEvent({\n          action,\n          changedTask: task,\n          originalSelectedTask: task,\n        });\n      }\n    } else if (action === \"mouseleave\") {\n      if (ganttEvent.action === \"mouseenter\") {\n        setGanttEvent({ action: \"\" });\n      }\n    } else if (action === \"dblclick\") {\n      !!onDoubleClick && onDoubleClick(task);\n    }\n    // Change task event start\n    else if (action === \"move\") {\n      if (!svg?.current || !point) return;\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg.current.getScreenCTM()?.inverse()\n      );\n      setInitEventX1Delta(cursor.x - task.x1);\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    } else {\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    }\n  };\n\n  return (\n    <g className=\"content\">\n      <g className=\"arrows\" fill={arrowColor} stroke={arrowColor}>\n        {tasks.map(task => {\n          return task.barChildren.map(child => {\n            return (\n              <Arrow\n                key={`Arrow from ${task.id} to ${tasks[child.index].id}`}\n                taskFrom={task}\n                taskTo={tasks[child.index]}\n                rowHeight={rowHeight}\n                taskHeight={taskHeight}\n                arrowIndent={arrowIndent}\n                rtl={rtl}\n              />\n            );\n          });\n        })}\n      </g>\n      <g className=\"bar\" fontFamily={fontFamily} fontSize={fontSize}>\n        {tasks.map(task => {\n          return (\n            <TaskItem\n              task={task}\n              arrowIndent={arrowIndent}\n              taskHeight={taskHeight}\n              isProgressChangeable={!!onProgressChange && !task.isDisabled}\n              isDateChangeable={!!onDateChange && !task.isDisabled}\n              isDelete={!task.isDisabled}\n              onEventStart={handleBarEventStart}\n              key={task.id}\n              isSelected={!!selectedTask && task.id === selectedTask.id}\n              rtl={rtl}\n            />\n          );\n        })}\n      </g>\n    </g>\n  );\n};\n", "import React, { useRef, useEffect } from \"react\";\nimport { GridProps, Grid } from \"../grid/grid\";\nimport { CalendarProps, Calendar } from \"../calendar/calendar\";\nimport { TaskGanttContentProps, TaskGanttContent } from \"./task-gantt-content\";\nimport styles from \"./gantt.module.css\";\n\nexport type TaskGanttProps = {\n  gridProps: GridProps;\n  calendarProps: CalendarProps;\n  barProps: TaskGanttContentProps;\n  ganttHeight: number;\n  scrollY: number;\n  scrollX: number;\n};\nexport const TaskGantt: React.FC<TaskGanttProps> = ({\n  gridProps,\n  calendarProps,\n  barProps,\n  ganttHeight,\n  scrollY,\n  scrollX,\n}) => {\n  const ganttSVGRef = useRef<SVGSVGElement>(null);\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  const verticalGanttContainerRef = useRef<HTMLDivElement>(null);\n  const newBarProps = { ...barProps, svg: ganttSVGRef };\n\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  useEffect(() => {\n    if (verticalGanttContainerRef.current) {\n      verticalGanttContainerRef.current.scrollLeft = scrollX;\n    }\n  }, [scrollX]);\n\n  return (\n    <div\n      className={styles.ganttVerticalContainer}\n      ref={verticalGanttContainerRef}\n      dir=\"ltr\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={gridProps.svgWidth}\n        height={calendarProps.headerHeight}\n        fontFamily={barProps.fontFamily}\n      >\n        <Calendar {...calendarProps} />\n      </svg>\n      <div\n        ref={horizontalContainerRef}\n        className={styles.horizontalContainer}\n        style={\n          ganttHeight\n            ? { height: ganttHeight, width: gridProps.svgWidth }\n            : { width: gridProps.svgWidth }\n        }\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={gridProps.svgWidth}\n          height={barProps.rowHeight * barProps.tasks.length}\n          fontFamily={barProps.fontFamily}\n          ref={ganttSVGRef}\n        >\n          <Grid {...gridProps} />\n          <TaskGanttContent {...newBarProps} />\n        </svg>\n      </div>\n    </div>\n  );\n};\n", "import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./horizontal-scroll.module.css\";\n\nexport const HorizontalScroll: React.FC<{\n  scroll: number;\n  svgWidth: number;\n  taskListWidth: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({ scroll, svgWidth, taskListWidth, rtl, onScroll }) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      dir=\"ltr\"\n      style={{\n        margin: rtl\n          ? `0px ${taskListWidth}px 0px 0px`\n          : `0px 0px 0px ${taskListWidth}px`,\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ width: svgWidth, height: 1 }} />\n    </div>\n  );\n};\n", "import React, { useState, SyntheticEvent, useRef, useEffect } from \"react\";\nimport { ViewMode, GanttProps, Task } from \"../../types/public-types\";\nimport { GridProps } from \"../grid/grid\";\nimport { ganttDateRange, seedDates } from \"../../helpers/date-helper\";\nimport { CalendarProps } from \"../calendar/calendar\";\nimport { TaskGanttContentProps } from \"./task-gantt-content\";\nimport { TaskListHeaderDefault } from \"../task-list/task-list-header\";\nimport { TaskListTableDefault } from \"../task-list/task-list-table\";\nimport { StandardTooltipContent, Tooltip } from \"../other/tooltip\";\nimport { VerticalScroll } from \"../other/vertical-scroll\";\nimport { TaskListProps, TaskList } from \"../task-list/task-list\";\nimport { TaskGantt } from \"./task-gantt\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { convertToBarTasks } from \"../../helpers/bar-helper\";\nimport { GanttEvent } from \"../../types/gantt-task-actions\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./gantt.module.css\";\nimport { HorizontalScroll } from \"../other/horizontal-scroll\";\nimport { removeHiddenTasks } from \"../../helpers/other-helper\";\n\nexport const Gantt: React.FunctionComponent<GanttProps> = ({\n  tasks,\n  headerHeight = 50,\n  columnWidth = 60,\n  listCellWidth = \"155px\",\n  rowHeight = 50,\n  ganttHeight = 0,\n  viewMode = ViewMode.Day,\n  locale = \"en-GB\",\n  barFill = 60,\n  barCornerRadius = 3,\n  barProgressColor = \"#a3a3ff\",\n  barProgressSelectedColor = \"#8282f5\",\n  barBackgroundColor = \"#b8c2cc\",\n  barBackgroundSelectedColor = \"#aeb8c2\",\n  projectProgressColor = \"#7db59a\",\n  projectProgressSelectedColor = \"#59a985\",\n  projectBackgroundColor = \"#fac465\",\n  projectBackgroundSelectedColor = \"#f7bb53\",\n  milestoneBackgroundColor = \"#f1c453\",\n  milestoneBackgroundSelectedColor = \"#f29e4c\",\n  rtl = false,\n  handleWidth = 8,\n  timeStep = 300000,\n  arrowColor = \"grey\",\n  fontFamily = \"Arial, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue\",\n  fontSize = \"14px\",\n  arrowIndent = 20,\n  todayColor = \"rgba(252, 248, 227, 0.5)\",\n  TooltipContent = StandardTooltipContent,\n  TaskListHeader = TaskListHeaderDefault,\n  TaskListTable = TaskListTableDefault,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onDelete,\n  onSelect,\n  onExpanderClick,\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const taskListRef = useRef<HTMLDivElement>(null);\n  const [dateSetup, setDateSetup] = useState<DateSetup>(() => {\n    const [startDate, endDate] = ganttDateRange(tasks, viewMode);\n    return { viewMode, dates: seedDates(startDate, endDate, viewMode) };\n  });\n\n  const [taskHeight, setTaskHeight] = useState((rowHeight * barFill) / 100);\n  const [taskListWidth, setTaskListWidth] = useState(0);\n  const [svgContainerWidth, setSvgContainerWidth] = useState(0);\n  const [svgContainerHeight, setSvgContainerHeight] = useState(ganttHeight);\n  const [barTasks, setBarTasks] = useState<BarTask[]>([]);\n  const [ganttEvent, setGanttEvent] = useState<GanttEvent>({\n    action: \"\",\n  });\n\n  const [selectedTask, setSelectedTask] = useState<BarTask>();\n  const [failedTask, setFailedTask] = useState<BarTask | null>(null);\n\n  const svgWidth = dateSetup.dates.length * columnWidth;\n  const ganttFullHeight = barTasks.length * rowHeight;\n\n  const [scrollY, setScrollY] = useState(0);\n  const [scrollX, setScrollX] = useState(-1);\n  const [ignoreScrollEvent, setIgnoreScrollEvent] = useState(false);\n\n  // task change events\n  useEffect(() => {\n    let filteredTasks: Task[];\n    if (onExpanderClick) {\n      filteredTasks = removeHiddenTasks(tasks);\n    } else {\n      filteredTasks = tasks;\n    }\n    const [startDate, endDate] = ganttDateRange(filteredTasks, viewMode);\n    let newDates = seedDates(startDate, endDate, viewMode);\n    if (rtl) {\n      newDates = newDates.reverse();\n      if (scrollX === -1) {\n        setScrollX(newDates.length * columnWidth);\n      }\n    }\n    setDateSetup({ dates: newDates, viewMode });\n    setBarTasks(\n      convertToBarTasks(\n        filteredTasks,\n        newDates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      )\n    );\n  }, [\n    tasks,\n    viewMode,\n    rowHeight,\n    barCornerRadius,\n    columnWidth,\n    taskHeight,\n    handleWidth,\n    barProgressColor,\n    barProgressSelectedColor,\n    barBackgroundColor,\n    barBackgroundSelectedColor,\n    projectProgressColor,\n    projectProgressSelectedColor,\n    projectBackgroundColor,\n    projectBackgroundSelectedColor,\n    milestoneBackgroundColor,\n    milestoneBackgroundSelectedColor,\n    rtl,\n    scrollX,\n    onExpanderClick,\n  ]);\n\n  useEffect(() => {\n    const { changedTask, action } = ganttEvent;\n    if (changedTask) {\n      if (action === \"delete\") {\n        setGanttEvent({ action: \"\" });\n        setBarTasks(barTasks.filter(t => t.id !== changedTask.id));\n      } else if (\n        action === \"move\" ||\n        action === \"end\" ||\n        action === \"start\" ||\n        action === \"progress\"\n      ) {\n        const prevStateTask = barTasks.find(t => t.id === changedTask.id);\n        if (\n          prevStateTask &&\n          (prevStateTask.start.getTime() !== changedTask.start.getTime() ||\n            prevStateTask.end.getTime() !== changedTask.end.getTime() ||\n            prevStateTask.progress !== changedTask.progress)\n        ) {\n          // actions for change\n          const newTaskList = barTasks.map(t =>\n            t.id === changedTask.id ? changedTask : t\n          );\n          setBarTasks(newTaskList);\n        }\n      }\n    }\n  }, [ganttEvent, barTasks]);\n\n  useEffect(() => {\n    if (failedTask) {\n      setBarTasks(barTasks.map(t => (t.id !== failedTask.id ? t : failedTask)));\n      setFailedTask(null);\n    }\n  }, [failedTask, barTasks]);\n\n  useEffect(() => {\n    const newTaskHeight = (rowHeight * barFill) / 100;\n    if (newTaskHeight !== taskHeight) {\n      setTaskHeight(newTaskHeight);\n    }\n  }, [rowHeight, barFill, taskHeight]);\n\n  useEffect(() => {\n    if (!listCellWidth) {\n      setTaskListWidth(0);\n    }\n    if (taskListRef.current) {\n      setTaskListWidth(taskListRef.current.offsetWidth);\n    }\n  }, [taskListRef, listCellWidth]);\n\n  useEffect(() => {\n    if (wrapperRef.current) {\n      setSvgContainerWidth(wrapperRef.current.offsetWidth - taskListWidth);\n    }\n  }, [wrapperRef, taskListWidth]);\n\n  useEffect(() => {\n    if (ganttHeight) {\n      setSvgContainerHeight(ganttHeight + headerHeight);\n    } else {\n      setSvgContainerHeight(tasks.length * rowHeight + headerHeight);\n    }\n  }, [ganttHeight, tasks]);\n\n  // scroll events\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > svgWidth) {\n          newScrollX = svgWidth;\n        }\n        setScrollX(newScrollX);\n        event.preventDefault();\n      } else if (ganttHeight) {\n        let newScrollY = scrollY + event.deltaY;\n        if (newScrollY < 0) {\n          newScrollY = 0;\n        } else if (newScrollY > ganttFullHeight - ganttHeight) {\n          newScrollY = ganttFullHeight - ganttHeight;\n        }\n        if (newScrollY !== scrollY) {\n          setScrollY(newScrollY);\n          event.preventDefault();\n        }\n      }\n\n      setIgnoreScrollEvent(true);\n    };\n\n    // subscribe if scroll is necessary\n    if (wrapperRef.current) {\n      wrapperRef.current.addEventListener(\"wheel\", handleWheel, {\n        passive: false,\n      });\n    }\n    return () => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, [wrapperRef.current, scrollY, scrollX, ganttHeight, svgWidth, rtl]);\n\n  const handleScrollY = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollY !== event.currentTarget.scrollTop && !ignoreScrollEvent) {\n      setScrollY(event.currentTarget.scrollTop);\n    }\n    setIgnoreScrollEvent(false);\n  };\n\n  const handleScrollX = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollX !== event.currentTarget.scrollLeft && !ignoreScrollEvent) {\n      setScrollX(event.currentTarget.scrollLeft);\n    }\n    setIgnoreScrollEvent(false);\n  };\n\n  /**\n   * Handles arrow keys events and transform it to new scroll\n   */\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    let newScrollY = scrollY;\n    let newScrollX = scrollX;\n    let isX = true;\n    switch (event.key) {\n      case \"Down\": // IE/Edge specific value\n      case \"ArrowDown\":\n        newScrollY += rowHeight;\n        isX = false;\n        break;\n      case \"Up\": // IE/Edge specific value\n      case \"ArrowUp\":\n        newScrollY -= rowHeight;\n        isX = false;\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        newScrollX -= columnWidth;\n        break;\n      case \"Right\": // IE/Edge specific value\n      case \"ArrowRight\":\n        newScrollX += columnWidth;\n        break;\n    }\n    if (isX) {\n      if (newScrollX < 0) {\n        newScrollX = 0;\n      } else if (newScrollX > svgWidth) {\n        newScrollX = svgWidth;\n      }\n      setScrollX(newScrollX);\n    } else {\n      if (newScrollY < 0) {\n        newScrollY = 0;\n      } else if (newScrollY > ganttFullHeight - ganttHeight) {\n        newScrollY = ganttFullHeight - ganttHeight;\n      }\n      setScrollY(newScrollY);\n    }\n    setIgnoreScrollEvent(true);\n  };\n\n  /**\n   * Task select event\n   */\n  const handleSelectedTask = (taskId: string) => {\n    const newSelectedTask = barTasks.find(t => t.id === taskId);\n    const oldSelectedTask = barTasks.find(\n      t => !!selectedTask && t.id === selectedTask.id\n    );\n    if (onSelect) {\n      if (oldSelectedTask) {\n        onSelect(oldSelectedTask, false);\n      }\n      if (newSelectedTask) {\n        onSelect(newSelectedTask, true);\n      }\n    }\n    setSelectedTask(newSelectedTask);\n  };\n  const handleExpanderClick = (task: Task) => {\n    if (onExpanderClick && task.hideChildren !== undefined) {\n      onExpanderClick({ ...task, hideChildren: !task.hideChildren });\n    }\n  };\n  const gridProps: GridProps = {\n    columnWidth,\n    svgWidth,\n    tasks: tasks,\n    rowHeight,\n    dates: dateSetup.dates,\n    todayColor,\n    rtl,\n  };\n  const calendarProps: CalendarProps = {\n    dateSetup,\n    locale,\n    viewMode,\n    headerHeight,\n    columnWidth,\n    fontFamily,\n    fontSize,\n    rtl,\n  };\n  const barProps: TaskGanttContentProps = {\n    tasks: barTasks,\n    dates: dateSetup.dates,\n    ganttEvent,\n    selectedTask,\n    rowHeight,\n    taskHeight,\n    columnWidth,\n    arrowColor,\n    timeStep,\n    fontFamily,\n    fontSize,\n    arrowIndent,\n    svgWidth,\n    rtl,\n    setGanttEvent,\n    setFailedTask,\n    setSelectedTask: handleSelectedTask,\n    onDateChange,\n    onProgressChange,\n    onDoubleClick,\n    onDelete,\n  };\n\n  const tableProps: TaskListProps = {\n    rowHeight,\n    rowWidth: listCellWidth,\n    fontFamily,\n    fontSize,\n    tasks: barTasks,\n    locale,\n    headerHeight,\n    scrollY,\n    ganttHeight,\n    horizontalContainerClass: styles.horizontalContainer,\n    selectedTask,\n    taskListRef,\n    setSelectedTask: handleSelectedTask,\n    onExpanderClick: handleExpanderClick,\n    TaskListHeader,\n    TaskListTable,\n  };\n  return (\n    <div>\n      <div\n        className={styles.wrapper}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        ref={wrapperRef}\n      >\n        {listCellWidth && <TaskList {...tableProps} />}\n        <TaskGantt\n          gridProps={gridProps}\n          calendarProps={calendarProps}\n          barProps={barProps}\n          ganttHeight={ganttHeight}\n          scrollY={scrollY}\n          scrollX={scrollX}\n        />\n        {ganttEvent.changedTask && (\n          <Tooltip\n            arrowIndent={arrowIndent}\n            rowHeight={rowHeight}\n            svgContainerHeight={svgContainerHeight}\n            svgContainerWidth={svgContainerWidth}\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            scrollX={scrollX}\n            scrollY={scrollY}\n            task={ganttEvent.changedTask}\n            headerHeight={headerHeight}\n            taskListWidth={taskListWidth}\n            TooltipContent={TooltipContent}\n            rtl={rtl}\n            svgWidth={svgWidth}\n          />\n        )}\n        <VerticalScroll\n          ganttFullHeight={ganttFullHeight}\n          ganttHeight={ganttHeight}\n          headerHeight={headerHeight}\n          scroll={scrollY}\n          onScroll={handleScrollY}\n          rtl={rtl}\n        />\n      </div>\n      <HorizontalScroll\n        svgWidth={svgWidth}\n        taskListWidth={taskListWidth}\n        scroll={scrollX}\n        rtl={rtl}\n        onScroll={handleScrollX}\n      />\n    </div>\n  );\n};\n", "import logo from \"../../../assets/images/logo.svg\";\nimport BaseImage from \"../../BaseKit/BaseImage/BaseImage\";\nimport Box from \"../../BaseKit/Box/Box\";\nimport Divider from \"../../BaseKit/Divider/Divider\";\nimport { LinkNavigation, links as LinkNavigationStyles } from \"../LinkNavigation/LinkNavigation\";\nimport s from \"./styles.css\";\nexport const links = [\n  { rel: \"stylesheet\", href: s },\n  \n  ...LinkNavigationStyles,\n];\n\nexport const LeftNavbar = ({ props }) => {\n  return (\n    <Box\n      className={\"leftnavbar\"}\n\n      flexDirection=\"row\"\n      position=\"fixed\"\n    >\n      <Box\n        className={\"leftnavbar_ctn\"}\n        flex=\"1\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <Box\n          className={\"leftnavbar_ctn_nav\"}\n          flex=\"1\"\n          flexDirection=\"column\"\n        > \n\n          <BaseImage width=\"30px\" height=\"30px\" src={logo} style={{\n            minWidth:\"30px\",minHeight:\"30px\"}}/>\n          <Box\n            className={\"leftnavbar_ctn_links\"}\n            flex=\"1\"    \n              flexDirection=\"column\"\n          >\n            <LinkNavigation icon=\"icon-icon_code\"/>\n          </Box>\n        </Box>\n\n        {/* // <Icon  className={\"leftnavbar_icon_logout\"} /> */}\n      </Box>\n\n      <Divider\n        type=\"v\"\n        spaccing=\"0px\"\n        style={{ backgroundColor: \"#EBEBED\" }}\n      ></Divider>\n    </Box>\n  );\n};\n\nexport default LeftNavbar;", "import { Link } from \"remix\";\nimport Box from \"~/components/BaseKit/Box/Box\"\nimport Icon from \"~/components/BaseKit/Icon/Icon\"\nimport s from \"./styles.css\";\n\nexport const links = [{ rel: \"stylesheet\", href: s }];\n\nexport const LinkNavigation=({icon})=>{\n\n            \n\n            \n return (\n   <Link className={\"link_navbar\"} to=\"/\">\n     <Icon name={icon} />\n   </Link>\n );\n            \n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;AAAA,oBAAqD;;;ACArD;AAAA,mBAAkB;AAClB,wBAAsB;AAEtB,IAAM,WAAW,CAAC;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MACI;AACJ,QAAM,YAAY,GAAG;AACrB,QAAM,WAAW,QAAQ,MAAM,EAAE,MAAM,WAAW;AAClD,SACE,mDAAC,WAAD;AAAA,IACE,WAAW,GAAG,aAAa;AAAA,IAC3B,OAAO;AAAA,IACP,OAAO;AAAA,OACH;AAAA,IACJ,SAAS,MAAM;AACb,UAAI;AAAS;AAAA;AAAA,KAGd,SAAS;AAAA;AAKhB,SAAS,YAAY;AAAA,EACnB,OAAO,0BAAU;AAAA,EACjB,MAAM,0BAAU;AAAA,EAChB,UAAU,0BAAU;AAAA,EACpB,MAAM,0BAAU;AAAA,EAChB,OAAO,0BAAU;AAAA;AAGnB,IAAO,mBAAQ;;;ACvCf;AAAA,oBAAkB;AAClB,yBAAsB;AAGtB,IAAM,UAAU,CAAC,EAAE,MAAM,UAAU,SAAS,eAAO,OAAO,QAAQ;AAEhE,MAAI,SAAS;AAEb,WACE,WAAW,WACP;AAAA,IACE,iBAAiB;AAAA;AAAA,IAEjB,gBAAgB;AAAA,MAElB;AAEN,SACE,oDAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,QAAQ,QAAQ,MAAM,GAAG,iBAAiB,OAAO;AAAA,MACjD,UAAU,QAAQ,MAAM,SAAS,GAAG;AAAA,MACpC,WAAW,QAAQ,MAAM,GAAG,WAAW;AAAA,SACpC;AAAA,SACA;AAAA;AAAA;AAAA;AAMX,QAAQ,eAAe;AAAA,EACrB,SAAS;AAAA;AAGX,QAAQ,YAAY;AAAA,EAClB,MAAM,2BAAU;AAAA,EAChB,UAAU,2BAAU;AAAA,EACpB,SAAS,2BAAU;AAAA;AAGrB,IAAO,kBAAQ;;;ACxCf;AACA,yBAAsB;AACtB,oBAAkB;AAGlB,IAAM,OAAO,CAAC,EAAE,eAAO,MAAM,YAAU,IAAI,cAAc;AACvD,SACE,oDAAC,KAAD;AAAA,IACE,WAAW,QAAQ,QAAQ,aAAW;AAAA,IACtC,SAAS,OAAK;AACZ,UAAI,SAAS;AACX,gBAAQ;AAAA;AAAA;AAAA,IAGZ,OAAO;AAAA,MACL,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,gBAAgB;AAAA,SACb;AAAA;AAAA;AAAA;AAMX,KAAK,YAAY;AAAA,EACf,MAAM,2BAAU;AAAA,EAChB,WAAW,2BAAU;AAAA,EACrB,OAAO,2BAAU;AAAA;AAGnB,IAAO,eAAQ;;;AC9Bf;AAAA,oBAAoD;;;ACApD;AAAA,uBAAqB;AAEd,qBAAqB;AAC1B,SAAO,CAAC,CAAE,QAAO,WAAW,eAAe,OAAO,YAAY,OAAO,SAAS;AAAA;AAGzE,+BAA+B,UAAU,UAAU;AACxD,MAAI,CAAC,aAAa;AAChB,WAAO;AAAA;AAET,SAAO,yBAAS,aAAa,UAAU,SAAS,cAAc;AAAA;;;;;;ADLzD,IAAM,SAAQ,CAAC,EAAE,KAAK,cAAc,MAAM;AACjD,IAAM,QAAQ,CAAC;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MACI;AACJ,QAAM,UAAU,0BAAO;AAEvB,+BAAU,MAAM;AACd,QAAI,QAAQ;AACV;AAAA;AAAA,KAED,CAAC;AAEJ,QAAM,eAAe,MAAM;AACzB,YAAQ,WAAW,QAAQ,QAAQ;AAAA;AAGrC,QAAM,eAAe,CAAC,UAAU;AAC9B,sBAAkB,eAAe;AAAA;AAGnC,QAAM,aAAa,cAAc,QAAQ;AAAA,IACvC,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,WAAW,SAAS,qBAAqB;AAAA;AAAA,IAE3C,OAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,SAAS,oBAAoB;AAAA;AAAA,IAE1C,OAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW,SAAS,sBAAsB;AAAA;AAAA;AAG9C,UAAQ,IAAI;AACZ,QAAM,UAAU,UAAU;AAAA,IACxB,SAAS,SAAS,IAAI;AAAA;AAGxB,SAAO,WACL,CAAC,OAAO,SACN,QACE,oDAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oDAAC,SAAS,KAAV;AAAA,IACE,SAAS;AAAA,IACT,WAAW;AAAA,IACX,OAAO;AAAA,SACF;AAAA,SACA;AAAA;AAAA,MAIP,oDAAC,SAAS,KAAV;AAAA,IACE,WAAW;AAAA,IACX;AAAA,IACA,OAAO;AAAA,SACF;AAAA,SACA;AAAA,SACA;AAAA;AAAA,KAGL,oDAAC,aAAD;AAAA,IACE,eAAc;AAAA,IACd;AAAA,IACA,OAAO;AAAA,IACP,WAAW,SAAS,iBAAiB;AAAA,KAEpC;AAAA;AAQf,IAAM,cAAc,CAAC,UAAU,sBAAsB,oDAAC,OAAD;AAAA,KAAW;AAAA,IAAW;AAE3E,IAAO,sBAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE7FH;AAAZ,AAAA,UAAY,WAAA;AACV,YAAA,gBAAA;AACA,YAAA,aAAA;AACA,YAAA,SAAA;AAEA,YAAA,UAAA;AACA,YAAA,WAAA;GANU,YAAA,YAAQ;ACapB,IAAM,cAAc;AACb,IAAM,0BAA0B,kCACrC,WACA,MAFqC;MAErC,SAAA,QAAA;AAAA,WAA8B;;AAE9B,MAAM,MAAM,KAAK,UAAU,CAAC,WAAW;AACvC,MAAI,MAAM,YAAY;AACtB,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,KAAK,eAAe,WAAW;AACzC,gBAAY,OAAO;;AAErB,SAAO;;AAIF,IAAM,YAAY,oBACvB,MACA,UACA,OAHuB;AAKvB,MAAM,UAAU,IAAI,KAClB,KAAK,gBAAiB,WAAU,SAAS,WAAW,IACpD,KAAK,aAAc,WAAU,UAAU,WAAW,IAClD,KAAK,YAAa,WAAU,QAAQ,WAAW,IAC/C,KAAK,aAAc,WAAU,SAAS,WAAW,IACjD,KAAK,eAAgB,WAAU,WAAW,WAAW,IACrD,KAAK,eAAgB,WAAU,WAAW,WAAW,IACrD,KAAK,oBAAqB,WAAU,gBAAgB,WAAW;AAEjE,SAAO;;AAGF,IAAM,cAAc,sBAAC,MAAY,OAAb;AACzB,MAAM,SAAS,CACb,eACA,UACA,UACA,QACA,OACA,SACA;AAGF,MAAM,cAAc,sBAAC,QAAD;AAClB,QAAM,WAAW,OAAO,QAAQ;AAChC,WAAO,OAAO,QAAQ,WAAW;;AAEnC,MAAM,UAAU,IAAI,KAClB,KAAK,eACL,YAAY,UAAU,IAAI,KAAK,YAC/B,YAAY,WAAW,IAAI,KAAK,WAChC,YAAY,SAAS,IAAI,KAAK,YAC9B,YAAY,UAAU,IAAI,KAAK,cAC/B,YAAY,YAAY,IAAI,KAAK,cACjC,YAAY,YAAY,IAAI,KAAK;AAEnC,SAAO;;AAGF,IAAM,iBAAiB,yBAAC,OAAe,UAAhB;AAC5B,MAAI,eAAqB,MAAM,GAAG;AAClC,MAAI,aAAmB,MAAM,GAAG;AAChC,WAAA,YAAA,gCAAmB,QAAnB,OAAA,CAAA,SAAA,aAAA,QAA0B;AAAA,QAAf,OAAe,MAAA;AACxB,QAAI,KAAK,QAAQ,cAAc;AAC7B,qBAAe,KAAK;;AAEtB,QAAI,KAAK,MAAM,YAAY;AACzB,mBAAa,KAAK;;;AAGtB,UAAQ;SACD,SAAS;AACZ,qBAAe,UAAU,cAAc,IAAI;AAC3C,qBAAe,YAAY,cAAc;AACzC,mBAAa,UAAU,YAAY,GAAG;AACtC,mBAAa,YAAY,YAAY;AACrC;SACG,SAAS;AACZ,qBAAe,YAAY,cAAc;AACzC,mBAAa,YAAY,YAAY;AACrC,qBAAe,UAAU,UAAU,eAAe,IAAI;AACtD,mBAAa,UAAU,YAAY,KAAK;AACxC;SACG,SAAS;AACZ,qBAAe,YAAY,cAAc;AACzC,mBAAa,YAAY,YAAY;AACrC,qBAAe,UAAU,cAAc,IAAI;AAC3C,mBAAa,UAAU,YAAY,IAAI;AACvC;SACG,SAAS;AACZ,qBAAe,YAAY,cAAc;AACzC,mBAAa,YAAY,YAAY;AACrC,qBAAe,UAAU,cAAc,IAAI;AAC3C,mBAAa,UAAU,YAAY,IAAI;AACvC;SACG,SAAS;AACZ,qBAAe,YAAY,cAAc;AACzC,mBAAa,YAAY,YAAY;AACrC,qBAAe,UAAU,cAAc,IAAI;AAC3C,mBAAa,UAAU,YAAY,KAAK;AACxC;;AAEJ,SAAO,CAAC,cAAc;;AAGjB,IAAM,YAAY,oBACvB,WACA,SACA,UAHuB;AAKvB,MAAI,cAAoB,IAAI,KAAK;AACjC,MAAM,QAAgB,CAAC;AACvB,SAAO,cAAc,SAAS;AAC5B,YAAQ;WACD,SAAS;AACZ,sBAAc,UAAU,aAAa,GAAG;AACxC;WACG,SAAS;AACZ,sBAAc,UAAU,aAAa,GAAG;AACxC;WACG,SAAS;AACZ,sBAAc,UAAU,aAAa,GAAG;AACxC;WACG,SAAS;AACZ,sBAAc,UAAU,aAAa,IAAI;AACzC;WACG,SAAS;AACZ,sBAAc,UAAU,aAAa,GAAG;AACxC;;AAEJ,UAAM,KAAK;;AAEb,SAAO;;AAGF,IAAM,iBAAiB,yBAAC,MAAY,QAAb;AAC5B,MAAI,cAAc,wBAAwB,QAAQ;IAChD,OAAO;KACN,OAAO;AACV,gBAAc,YAAY,QACxB,YAAY,IACZ,YAAY,GAAG;AAEjB,SAAO;;AAOT,IAAM,YAAY,oBAAC,MAAD;AAChB,MAAM,MAAM,KAAK;AACjB,MAAM,OAAO,KAAK,YAAY,MAAO,SAAQ,IAAI,KAAK;AACtD,SAAO,IAAI,KAAK,KAAK,QAAQ;;AAGxB,IAAM,uBAAuB,+BAAC,MAAD;AAClC,MAAM,UAAU,IAAI,KAAK,KAAK;AAC9B,MAAM,YAAa,SAAQ,WAAW,KAAK;AAC3C,UAAQ,QAAQ,QAAQ,YAAY,YAAY;AAChD,MAAM,gBAAgB,QAAQ;AAC9B,UAAQ,SAAS,GAAG;AACpB,MAAI,QAAQ,aAAa,GAAG;AAC1B,YAAQ,SAAS,GAAG,IAAM,KAAI,QAAQ,WAAW,KAAK;;AAExD,MAAM,aACJ,KAAI,KAAK,KAAM,iBAAgB,QAAQ,aAAa,SACpD;AAEF,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAA,MAAW;SACN;AACL,WAAO;;;AAIJ,IAAM,iBAAiB,yBAAC,OAAe,MAAhB;AAC5B,SAAO,IAAI,KAAK,MAAM,QAAQ,GAAG,GAAG;;;AC3L/B,IAAM,wBAKR,gCAAA,MAAA;MAAG,eAAA,KAAA,cAAc,aAAA,KAAA,YAAY,WAAA,KAAA,UAAU,WAAA,KAAA;AAC1C,SACE,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL;MACA;;KAGF,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL,QAAQ,eAAe;;KAGzB,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL,UAAU;;KAHd,aAQA,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL,QAAQ,eAAe;MACvB,WAAW,eAAe;;MAG9B,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL,UAAU;;KAHd,aAQA,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL,QAAQ,eAAe;MACvB,WAAW,eAAe;;MAG9B,sBAAA,cAAA,OAAA;IACE,WAAW,OAAO;IAClB,OAAO;MACL,UAAU;;KAHd;;;ACjDR,IAAM,wBAAwB;AAC9B,IAAM,4BAA4B,oCAAC,QAAD;AAAA,SAAoB,SACpD,MACA,kBAFoD;AAIpD,QAAM,MAAM,KAAK;AACjB,QAAI,MAAM,sBAAsB;AAChC,QAAI,CAAC,KAAK;AACR,YAAM,KAAK,mBAAmB,QAAQ;AACtC,4BAAsB,OAAO;;AAE/B,WAAO;;;AAET,IAAM,kBAA8C;EAClD,SAAS;EACT,MAAM;EACN,OAAO;EACP,KAAK;;AAGA,IAAM,uBAUR,+BAAA,MAAA;MACH,YAAA,KAAA,WACA,WAAA,KAAA,UACA,QAAA,KAAA,OACA,aAAA,KAAA,YACA,WAAA,KAAA,UACA,SAAA,KAAA,QACA,kBAAA,KAAA;AAEA,MAAM,qBAAqB,2BAAQ,WAAA;AAAA,WAAM,0BAA0B;KAAS,CAC1E;AAGF,SACE,sBAAA,cAAA,OAAA;IACE,WAAW,SAAO;IAClB,OAAO;MACL;MACA;;KAGD,MAAM,IAAI,SAAA,GAAC;AACV,QAAI,iBAAiB;AACrB,QAAI,EAAE,iBAAiB,OAAO;AAC5B,uBAAiB;eACR,EAAE,iBAAiB,MAAM;AAClC,uBAAiB;;AAGnB,WACE,sBAAA,cAAA,OAAA;MACE,WAAW,SAAO;MAClB,OAAO;QAAE,QAAQ;;MACjB,KAAQ,EAAE,KAAP;OAEH,sBAAA,cAAA,OAAA;MACE,WAAW,SAAO;MAClB,OAAO;QACL,UAAU;QACV,UAAU;;MAEZ,OAAO,EAAE;OAET,sBAAA,cAAA,OAAA;MAAK,WAAW,SAAO;OACrB,sBAAA,cAAA,OAAA;MACE,WACE,iBACI,SAAO,mBACP,SAAO;MAEb,SAAS,mBAAA;AAAA,eAAM,gBAAgB;;OAE9B,iBAEH,sBAAA,cAAA,OAAA,MAAM,EAAE,SAGZ,sBAAA,cAAA,OAAA;MACE,WAAW,SAAO;MAClB,OAAO;QACL,UAAU;QACV,UAAU;;OAJd,QAOS,mBAAmB,EAAE,OAAO,mBAErC,sBAAA,cAAA,OAAA;MACE,WAAW,SAAO;MAClB,OAAO;QACL,UAAU;QACV,UAAU;;OAJd,QAOS,mBAAmB,EAAE,KAAK;;;;AClFxC,IAAM,UAAkC,kBAAA,MAAA;MAC7C,OAAA,KAAA,MACA,YAAA,KAAA,WACA,MAAA,KAAA,KACA,qBAAA,KAAA,oBACA,oBAAA,KAAA,mBACA,UAAA,KAAA,SACA,UAAA,KAAA,SACA,cAAA,KAAA,aACA,WAAA,KAAA,UACA,aAAA,KAAA,YACA,eAAA,KAAA,cACA,gBAAA,KAAA,eACA,iBAAA,KAAA;AAEA,MAAM,aAAa,0BAA8B;AACjD,MAAA,YAAgC,4BAAS,IAAlC,WAAP,UAAA,IAAiB,cAAjB,UAAA;AACA,MAAA,aAAgC,4BAAS,IAAlC,WAAP,WAAA,IAAiB,cAAjB,WAAA;AACA,+BAAU,WAAA;AACR,QAAI,WAAW,SAAS;AACtB,UAAM,gBAAgB,WAAW,QAAQ,eAAe;AACxD,UAAM,eAAe,WAAW,QAAQ,cAAc;AAEtD,UAAI,cAAc,KAAK,QAAQ,YAAY,UAAU;AACrD,UAAI;AACJ,UAAI,KAAK;AACP,sBAAc,KAAK,KAAK,cAAc,MAAM,eAAe;AAC3D,YAAI,cAAc,GAAG;AACnB,wBAAc,KAAK,KAAK,cAAc,MAAM;;AAE9C,YAAM,uBAAuB,eAAe;AAC5C,YAAI,uBAAuB,mBAAmB;AAC5C,wBAAc,oBAAoB;AAClC,yBAAe;;aAEZ;AACL,sBAAc,KAAK,KAAK,cAAc,MAAM,gBAAgB;AAC5D,YAAM,wBAAuB,eAAe;AAC5C,YAAM,iBAAiB,gBAAgB;AACvC,YAAI,wBAAuB,gBAAgB;AACzC,wBACE,KAAK,KACL,gBACA,cAAc,MACd,UACA;;AAEJ,YAAI,cAAc,eAAe;AAC/B,wBAAc,oBAAoB,gBAAgB;AAClD,yBAAe;;;AAInB,UAAM,oBAAoB,gBAAgB,cAAc;AACxD,UAAI,oBAAoB,qBAAqB,SAAS;AACpD,sBAAc,qBAAqB;;AAErC,kBAAY;AACZ,kBAAY;;KAEb,CACD,WAAW,SACX,MACA,aACA,SACA,SACA,cACA,eACA,WACA,oBACA;AAGF,SACE,sBAAA,cAAA,OAAA;IACE,KAAK;IACL,WACE,WACI,SAAO,0BACP,SAAO;IAEb,OAAO;MAAE,MAAM;MAAU,KAAK;;KAE9B,sBAAA,cAAC,gBAAD;IAAgB;IAAY;IAAoB;;;AAK/C,IAAM,yBAIR,iCAAA,OAAA;MAAG,OAAA,MAAA,MAAM,WAAA,MAAA,UAAU,aAAA,MAAA;AACtB,MAAM,SAAQ;IACZ;IACA;;AAEF,SACE,sBAAA,cAAA,OAAA;IAAK,WAAW,SAAO;IAAyB,OAAO;KACrD,sBAAA,cAAA,KAAA;IAAG,OAAO;MAAE,UAAU,WAAW;;KAC/B,KAAK,OADP,OAEK,KAAK,MAAM,YAFhB,MAGE,MAAK,MAAM,aAAa,KAH1B,MAII,KAAK,MAAM,gBAJf,QAIkC,KAAK,IAAI,YAJ3C,MAKE,MAAK,IAAI,aAAa,KALxB,MAMI,KAAK,IAAI,gBACZ,KAAK,IAAI,YAAY,KAAK,MAAM,cAAc,KAC7C,sBAAA,cAAA,KAAA;IAAG,WAAW,SAAO;KAArB,eAAqE,CAAC,CACnE,OAAK,IAAI,YAAY,KAAK,MAAM,aAChC,OAAO,KAAK,KAAK,OAFpB,YAMF,sBAAA,cAAA,KAAA;IAAG,WAAW,SAAO;KAClB,CAAC,CAAC,KAAK,YAAP,eAAgC,KAAK,WAArC;;;ACxIF,IAAM,iBAOR,yBAAA,MAAA;MACH,SAAA,KAAA,QACA,cAAA,KAAA,aACA,kBAAA,KAAA,iBACA,eAAA,KAAA,cACA,MAAA,KAAA,KACA,WAAA,KAAA;AAEA,MAAM,YAAY,0BAAuB;AAEzC,+BAAU,WAAA;AACR,QAAI,UAAU,SAAS;AACrB,gBAAU,QAAQ,YAAY;;KAE/B,CAAC;AAEJ,SACE,sBAAA,cAAA,OAAA;IACE,OAAO;MACL,QAAQ;MACR,WAAW;MACX,YAAY,MAAM,KAAK;;IAEzB,WAAW,SAAO;IAClB;IACA,KAAK;KAEL,sBAAA,cAAA,OAAA;IAAK,OAAO;MAAE,QAAQ;MAAiB,OAAO;;;;ACC7C,IAAM,WAAoC,mBAAA,MAAA;MAC/C,eAAA,KAAA,cACA,aAAA,KAAA,YACA,WAAA,KAAA,UACA,WAAA,KAAA,UACA,YAAA,KAAA,WACA,UAAA,KAAA,SACA,QAAA,KAAA,OACA,eAAA,KAAA,cACA,kBAAA,KAAA,iBACA,kBAAA,KAAA,iBACA,SAAA,KAAA,QACA,cAAA,KAAA,aACA,cAAA,KAAA,aACA,2BAAA,KAAA,0BACA,iBAAA,KAAA,gBACA,gBAAA,KAAA;AAEA,MAAM,yBAAyB,0BAAuB;AACtD,+BAAU,WAAA;AACR,QAAI,uBAAuB,SAAS;AAClC,6BAAuB,QAAQ,YAAY;;KAE5C,CAAC;AAEJ,MAAM,cAAc;IAClB;IACA;IACA;IACA;;AAEF,MAAM,iBAAiB,eAAe,aAAa,KAAK;AACxD,MAAM,aAAa;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAGF,SACE,sBAAA,cAAA,OAAA;IAAK,KAAK;KACR,sBAAA,cAAC,gBAAD,OAAA,OAAA,IAAoB,eACpB,sBAAA,cAAA,OAAA;IACE,KAAK;IACL,WAAW;IACX,OAAO,cAAc;MAAE,QAAQ;QAAgB;KAE/C,sBAAA,cAAC,eAAD,OAAA,OAAA,IAAmB;;;AC5EpB,IAAM,WAAoC,mBAAA,MAAA;MAC/C,QAAA,KAAA,OACA,QAAA,KAAA,OACA,YAAA,KAAA,WACA,WAAA,KAAA,UACA,cAAA,KAAA,aACA,aAAA,KAAA,YACA,MAAA,KAAA;AAEA,MAAI,IAAI;AACR,MAAM,WAAyB;AAC/B,MAAM,WAAyB,CAC7B,sBAAA,cAAA,QAAA;IACE,KAAI;IACJ,GAAE;IACF,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,WAAW,SAAO;;AAGtB,WAAA,YAAA,gCAAmB,QAAnB,OAAA,CAAA,SAAA,aAAA,QAA0B;AAAA,QAAf,OAAe,MAAA;AACxB,aAAS,KACP,sBAAA,cAAA,QAAA;MACE,KAAK,QAAQ,KAAK;MAClB,GAAE;MACF;MACA,OAAO;MACP,QAAQ;MACR,WAAW,SAAO;;AAGtB,aAAS,KACP,sBAAA,cAAA,QAAA;MACE,KAAK,YAAY,KAAK;MACtB,GAAE;MACF,IAAI,IAAI;MACR,IAAI;MACJ,IAAI,IAAI;MACR,WAAW,SAAO;;AAGtB,SAAK;;AAGP,MAAM,MAAM,IAAI;AAChB,MAAI,QAAQ;AACZ,MAAM,QAAsB;AAC5B,MAAI,QAAoB,sBAAA,cAAA,QAAA;AACxB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAM,OAAO,MAAM;AACnB,UAAM,KACJ,sBAAA,cAAA,QAAA;MACE,KAAK,KAAK;MACV,IAAI;MACJ,IAAI;MACJ,IAAI;MACJ,IAAI;MACJ,WAAW,SAAO;;AAGtB,QACG,IAAI,MAAM,MAAM,UACf,KAAK,YAAY,IAAI,aACrB,MAAM,IAAI,GAAG,aAAa,IAAI,aAE/B,MAAM,KACL,IAAI,MAAM,MAAM,UAChB,KAAK,YAAY,IAAI,aACrB,UACE,MACA,KAAK,YAAY,MAAM,IAAI,GAAG,WAC9B,eACA,aAAa,IAAI,WACrB;AACA,cACE,sBAAA,cAAA,QAAA;QACE,GAAG;QACH,GAAG;QACH,OAAO;QACP,QAAQ;QACR,MAAM;;;AAKZ,QACE,OACA,IAAI,MAAM,MAAM,UAChB,KAAK,aAAa,IAAI,aACtB,MAAM,IAAI,GAAG,YAAY,IAAI,WAC7B;AACA,cACE,sBAAA,cAAA,QAAA;QACE,GAAG,QAAQ;QACX,GAAG;QACH,OAAO;QACP,QAAQ;QACR,MAAM;;;AAIZ,aAAS;;AAEX,SACE,sBAAA,cAAA,KAAA;IAAG,WAAU;KACX,sBAAA,cAAA,KAAA;IAAG,WAAU;KAAQ,WACrB,sBAAA,cAAA,KAAA;IAAG,WAAU;KAAY,WACzB,sBAAA,cAAA,KAAA;IAAG,WAAU;KAAS,QACtB,sBAAA,cAAA,KAAA;IAAG,WAAU;KAAS;;ACvHrB,IAAM,OAA4B,eAAA,OAAK;AAC5C,SACE,sBAAA,cAAA,KAAA;IAAG,WAAU;KACX,sBAAA,cAAC,UAAD,OAAA,OAAA,IAAc;;;ACKb,IAAM,oBAAsD,4BAAA,MAAA;MACjE,QAAA,KAAA,OACA,SAAA,KAAA,QACA,SAAA,KAAA,QACA,SAAA,KAAA,QACA,QAAA,KAAA,OACA,QAAA,KAAA;AAEA,SACE,sBAAA,cAAA,KAAA;IAAG,WAAU;KACX,sBAAA,cAAA,QAAA;IACE,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,WAAW,SAAO;IAClB,KAAK,QAAQ;MAEf,sBAAA,cAAA,QAAA;IACE,KAAK,QAAQ;IACb,GAAG;IACH,GAAG;IACH,WAAW,SAAO;KAEjB;;ACbF,IAAM,WAAoC,mBAAA,MAAA;MAC/C,YAAA,KAAA,WACA,SAAA,KAAA,QACA,WAAA,KAAA,UACA,MAAA,KAAA,KACA,eAAA,KAAA,cACA,cAAA,KAAA,aACA,aAAA,KAAA,YACA,WAAA,KAAA;AAEA,MAAM,4BAA4B,sCAAA;AAChC,QAAM,aAA0B;AAChC,QAAM,gBAA6B;AACnC,QAAM,mBAAmB,eAAe;AACxC,aAAS,IAAI,GAAG,IAAI,UAAU,MAAM,QAAQ,KAAK;AAC/C,UAAM,OAAO,UAAU,MAAM;AAC7B,UAAM,cAAc,eAAe,MAAM;AACzC,oBAAa,KACX,sBAAA,cAAA,QAAA;QACE,KAAK,cAAc,KAAK;QACxB,GAAG,eAAe;QAClB,GAAG,cAAc,IAAI,cAAc;QACnC,WAAW,SAAO;SAEjB;AAGL,UACE,MAAM,KACN,KAAK,kBAAkB,UAAU,MAAM,IAAI,GAAG,eAC9C;AACA,YAAM,WAAW,KAAK,cAAc;AACpC,YAAI,QAAa;AACjB,YAAI,KAAK;AACP,kBAAS,KAAI,IAAI,KAAK,aAAa,KAAK;eACnC;AACL,kBAAS,KAAI,IAAI,KAAK,cAAc;;AAEtC,mBAAU,KACR,sBAAA,cAAC,mBAAD;UACE,KAAK;UACL,OAAO;UACP,QAAQ,cAAc;UACtB,QAAQ;UACR,QAAQ;UACR;UACA,OAAO,mBAAmB;;;;AAKlC,WAAO,CAAC,YAAW;;AAGrB,MAAM,2BAA2B,qCAAA;AAC/B,QAAM,aAA0B;AAChC,QAAM,gBAA6B;AACnC,QAAI,aAAqB;AACzB,QAAM,mBAAmB,eAAe;AACxC,QAAM,QAAQ,UAAU;AACxB,aAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,UAAM,OAAO,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,MAAM,KAAK,KAAK,eAAe,MAAM,IAAI,GAAG,YAAY;AAE1D,mBAAc,eAAe,MAAM,UAA3B,OAAuC,KAAK;;AAGtD,UAAM,cAAW,MAAO,qBAAqB;AAE7C,oBAAa,KACX,sBAAA,cAAA,QAAA;QACE,KAAK,KAAK;QACV,GAAG,eAAe;QAClB,GAAG,cAAe,KAAI,CAAC;QACvB,WAAW,SAAO;SAEjB;AAIL,UAAI,UAAU;AAEZ,YAAI,MAAM,MAAM,SAAS,GAAG;AAC1B,qBAAU,KACR,sBAAA,cAAC,mBAAD;YACE,KAAK;YACL,OAAO;YACP,QAAQ,cAAc,IAAI,aAAa;YACvC,QAAQ;YACR,QAAQ;YACR,OAAO,cAAc,IAAI,cAAc,aAAa;YACpD,OAAO,mBAAmB;;;AAIhC,qBAAa;;AAEf;;AAEF,WAAO,CAAC,YAAW;;AAGrB,MAAM,0BAA0B,oCAAA;AAC9B,QAAM,aAA0B;AAChC,QAAM,gBAA6B;AACnC,QAAM,mBAAmB,eAAe;AACxC,QAAM,QAAQ,UAAU;AACxB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM;AACnB,UAAM,cAAc,KAAK,UAAU;AAEnC,oBAAa,KACX,sBAAA,cAAA,QAAA;QACE,KAAK,KAAK;QACV,GAAG,eAAe;QAClB,GAAG,cAAc,IAAI,cAAc;QACnC,WAAW,SAAO;SAEjB;AAGL,UACE,IAAI,MAAM,MAAM,UAChB,KAAK,eAAe,MAAM,IAAI,GAAG,YACjC;AACA,YAAM,WAAW,eAAe,MAAM;AAEtC,mBAAU,KACR,sBAAA,cAAC,mBAAD;UACE,KAAK,WAAW,KAAK;UACrB,OAAO;UACP,QAAQ,cAAe,KAAI;UAC3B,QAAQ;UACR,QAAQ;UACR,OACE,cAAe,KAAI,KACnB,eAAe,KAAK,YAAY,KAAK,iBACnC,cACA;UAEJ,OAAO,mBAAmB;;;;AAKlC,WAAO,CAAC,YAAW;;AAGrB,MAAM,4BAA4B,sCAAA;AAChC,QAAM,aAA0B;AAChC,QAAM,gBAA6B;AACnC,QAAM,QAAQ,aAAa,SAAS,UAAU,IAAI;AAClD,QAAM,mBAAmB,eAAe;AACxC,QAAM,QAAQ,UAAU;AACxB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM;AACnB,UAAM,cAAc,wBAAwB,QAAQ;QAClD,MAAM;SACL,OAAO;AAEV,oBAAa,KACX,sBAAA,cAAA,QAAA;QACE,KAAK,KAAK;QACV,GAAG,eAAe;QAClB,GAAG,cAAe,KAAI,CAAC;QACvB,WAAW,SAAO;QAClB;SAEC;AAGL,UAAI,MAAM,KAAK,KAAK,cAAc,MAAM,IAAI,GAAG,WAAW;AACxD,YAAM,WAAc,KAAK,YAAX,MAAwB,eAAe,MAAM;AAC3D,mBAAU,KACR,sBAAA,cAAC,mBAAD;UACE,KAAK,WAAW,KAAK;UACrB,OAAO;UACP,QAAQ,cAAc,IAAI,QAAQ;UAClC,QAAQ;UACR,QAAQ;UACR,OAAO,cAAc,IAAI,QAAQ,cAAc;UAC/C,OAAO,mBAAmB;;;;AAMlC,WAAO,CAAC,YAAW;;AAGrB,MAAI,YAA0B;AAC9B,MAAI,eAA6B;AACjC,UAAQ,UAAU;SACX,SAAS;AAAd,UAAA,wBAC8B;AAA3B,kBADH,sBAAA;AACc,qBADd,sBAAA;AAEE;SACG,SAAS;AAAd,UAAA,yBAC8B;AAA3B,kBADH,uBAAA;AACc,qBADd,uBAAA;AAEE;SACG,SAAS;AAAd,UAAA,yBAC8B;AAA3B,kBADH,uBAAA;AACc,qBADd,uBAAA;AAEE;;AACF,UAAA,yBAC8B;AAA3B,kBADH,uBAAA;AACc,qBADd,uBAAA;AAEE;;AAEJ,SACE,sBAAA,cAAA,KAAA;IAAG,WAAU;IAAW;IAAoB;KAC1C,sBAAA,cAAA,QAAA;IACE,GAAG;IACH,GAAG;IACH,OAAO,cAAc,UAAU,MAAM;IACrC,QAAQ;IACR,WAAW,SAAO;MAEnB,cARH,KAQkB;;AC3Ef,IAAM,kBAAgC,OAAO,WAAW,cAAe,OAAO,YAAa,QAAO,WAAW,OAAO,sBAAuB;AA6D3I,IAAM,uBAAqC,OAAO,WAAW,cAAe,OAAO,iBAAkB,QAAO,gBAAgB,OAAO,2BAA4B;AAiV/J,gBAAgB,MAAM,SAAS;AACrC,MAAI;AACH,QAAI,SAAS;WACN,GAAN;AACD,WAAO,QAAQ;;AAEhB,MAAI,UAAU,OAAO,MAAM;AAC1B,WAAO,OAAO,KAAK,QAAQ;;AAE5B,SAAO;;AChjBD,IAAM,QAA8B,gBAAA,MAAA;MACzC,WAAA,KAAA,UACA,SAAA,KAAA,QACA,YAAA,KAAA,WACA,aAAA,KAAA,YACA,cAAA,KAAA,aACA,MAAA,KAAA;AAEA,MAAI;AACJ,MAAI;AACJ,MAAI,KAAK;AAAA,QAAA,wBACkB,wBACvB,UACA,QACA,WACA,YACA;AALD,WADM,sBAAA;AACA,qBADA,sBAAA;SAQF;AAAA,QAAA,yBACoB,qBACvB,UACA,QACA,WACA,YACA;AALD,WADI,uBAAA;AACE,qBADF,uBAAA;;AAUP,SACE,sBAAA,cAAA,KAAA;IAAG,WAAU;KACX,sBAAA,cAAA,QAAA;IAAM,aAAY;IAAM,GAAG;IAAM,MAAK;MACtC,sBAAA,cAAA,WAAA;IAAS,QAAQ;;;AAKvB,IAAM,uBAAuB,+BAC3B,UACA,QACA,WACA,YACA,aAL2B;AAO3B,MAAM,eAAe,SAAS,QAAQ,OAAO,QAAQ,KAAK;AAC1D,MAAM,oBAAoB,OAAO,IAAI,aAAa;AAClD,MAAM,sBAAsB,SAAS,KAAK,cAAc;AACxD,MAAM,gCACJ,sBAAsB,OAAO,KAAK,KAAlC,OAA4C,QAAO,KAAK;AAC1D,MAAM,8BACJ,sBAAsB,OAAO,KACzB,cACA,OAAO,KAAK,SAAS,KAAK;AAEhC,MAAM,OAAI,OAAQ,SAAS,KAAjB,MAAuB,UAAS,IAAI,aAAa,KAAjD,YACN,cADM,YAEL,eAAe,YAAa,IAFvB,UAGR,gCAHQ,WAIN,oBAJM,YAKN;AAEJ,MAAM,iBAAoB,OAAO,KAAb,MAAmB,oBAAnB,UAClB,QAAO,KAAK,KADM,MACD,qBAAoB,KADnB,UAElB,QAAO,KAAK,KAFM,MAED,qBAAoB;AACvC,SAAO,CAAC,MAAM;;AAGhB,IAAM,0BAA0B,kCAC9B,UACA,QACA,WACA,YACA,aAL8B;AAO9B,MAAM,eAAe,SAAS,QAAQ,OAAO,QAAQ,KAAK;AAC1D,MAAM,oBAAoB,OAAO,IAAI,aAAa;AAClD,MAAM,sBAAsB,SAAS,KAAK,cAAc;AACxD,MAAM,gCACJ,sBAAsB,OAAO,KAAK,KAAlC,OAA4C,QAAO,KAAK;AAC1D,MAAM,8BACJ,sBAAsB,OAAO,KACzB,CAAC,cACD,OAAO,KAAK,SAAS,KAAK;AAEhC,MAAM,OAAI,OAAQ,SAAS,KAAjB,MAAuB,UAAS,IAAI,aAAa,KAAjD,YACN,CAAC,cADK,YAEL,eAAe,YAAa,IAFvB,UAGR,gCAHQ,WAIN,oBAJM,YAKN;AAEJ,MAAM,iBAAoB,OAAO,KAAb,MAAmB,oBAAnB,UAClB,QAAO,KAAK,KADM,MACD,qBAAoB,KADnB,UAElB,QAAO,KAAK,KAFM,MAED,qBAAoB;AACvC,SAAO,CAAC,MAAM;;ACpGT,IAAM,oBAAoB,4BAC/B,OACA,OACA,aACA,WACA,YACA,iBACA,aACA,KACA,kBACA,0BACA,oBACA,4BACA,sBACA,8BACA,wBACA,gCACA,0BACA,kCAlB+B;AAoB/B,MAAM,YACJ,MAAM,GAAG,YACT,MAAM,GAAG,YACT,MAAM,GAAG,sBAAsB,KAAK,MACpC,MAAM,GAAG,sBAAsB,KAAK;AACtC,MAAI,WAAW,MAAM,IAAI,SAAC,GAAG,GAAJ;AACvB,WAAO,iBACL,GACA,GACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,KACA,kBACA,0BACA,oBACA,4BACA,sBACA,8BACA,wBACA,gCACA,0BACA;;AAKJ,aAAW,SAAS,IAAI,SAAA,MAAI;AAC1B,QAAM,eAAe,KAAK,gBAAgB;gCACjC,IAAA;AACP,UAAM,aAAa,SAAS,UAC1B,SAAA,OAAK;AAAA,eAAI,MAAM,OAAO,aAAa;;AAErC,UAAI,eAAe;AAAI,iBAAS,YAAY,YAAY,KAAK;;AAJ/D,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAAA,YAArC;;AAMT,WAAO;;AAGT,SAAO;;AAGT,IAAM,mBAAmB,2BACvB,MACA,OACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,KACA,kBACA,0BACA,oBACA,4BACA,sBACA,8BACA,wBACA,gCACA,0BACA,kCApBuB;AAsBvB,MAAI;AACJ,UAAQ,KAAK;SACN;AACH,gBAAU,mBACR,MACA,OACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,0BACA;AAEF;SACG;AACH,gBAAU,aACR,MACA,OACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,KACA,sBACA,8BACA,wBACA;AAEF;;AAEA,gBAAU,aACR,MACA,OACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,KACA,kBACA,0BACA,oBACA;AAEF;;AAEJ,SAAO;;AAGT,IAAM,eAAe,uBACnB,MACA,OACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,KACA,kBACA,0BACA,oBACA,4BAdmB;AAgBnB,MAAI;AACJ,MAAI;AACJ,MAAI,KAAK;AACP,SAAK,mBAAmB,KAAK,OAAO,OAAO,WAAW;AACtD,SAAK,mBAAmB,KAAK,KAAK,OAAO,WAAW;SAC/C;AACL,SAAK,gBAAgB,KAAK,OAAO,OAAO,WAAW;AACnD,SAAK,gBAAgB,KAAK,KAAK,OAAO,WAAW;;AAEnD,MAAI,eAAiC,KAAK;AAC1C,MAAI,iBAAiB,UAAU,KAAK,KAAK,cAAc,GAAG;AACxD,mBAAe;AACf,SAAK,KAAK,cAAc;;AAG1B,MAAA,wBAAmC,qBACjC,IACA,IACA,KAAK,UACL,MAJK,gBAAP,sBAAA,IAAsB,YAAtB,sBAAA;AAMA,MAAM,IAAI,gBAAgB,OAAO,WAAW;AAC5C,MAAM,eAAe,KAAK,SAAS,YAAY,KAAK,eAAe;AAEnE,MAAM,UAAM,SAAA;IACV,iBAAiB;IACjB,yBAAyB;IACzB,eAAe;IACf,uBAAuB;KACpB,KAAK;AAEV,SAAA,SAAA,IACK,MADL;IAEE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ;IACR,aAAa;IACb,QAAA;;;AAIJ,IAAM,qBAAqB,6BACzB,MACA,OACA,OACA,WACA,aACA,WACA,YACA,iBACA,aACA,0BACA,kCAXyB;AAazB,MAAM,IAAI,gBAAgB,KAAK,OAAO,OAAO,WAAW;AACxD,MAAM,IAAI,gBAAgB,OAAO,WAAW;AAE5C,MAAM,KAAK,IAAI,aAAa;AAC5B,MAAM,KAAK,IAAI,aAAa;AAE5B,MAAM,gBAAgB,aAAa;AACnC,MAAM,UAAM,SAAA;IACV,iBAAiB;IACjB,yBAAyB;IACzB,eAAe;IACf,uBAAuB;KACpB,KAAK;AAEV,SAAA,SAAA,IACK,MADL;IAEE,KAAK,KAAK;IACV;IACA;IACA;IACA;IACA,WAAW;IACX,eAAe;IACf;IACA;IACA,cAAc,KAAK;IACnB,UAAU;IACV,QAAQ;IACR,cAAc;IACd,aAAa;IACb,QAAA;;;AAIJ,IAAM,kBAAkB,0BACtB,OACA,OACA,WACA,aAJsB;AAMtB,MAAM,QAAQ,CAAC,CACZ,QAAM,YACL,MAAM,GAAG,YACT,MAAM,sBACN,MAAM,GAAG,uBACX;AAEF,MAAM,IAAI,KAAK,MACZ,SACE,OAAM,YACL,MAAM,OAAO,YACb,MAAM,sBAAsB,KAAK,MACjC,MAAM,OAAO,sBAAsB,KAAK,OACxC,aACF;AAEJ,SAAO;;AAET,IAAM,qBAAqB,6BACzB,OACA,OACA,WACA,aAJyB;AAMzB,MAAI,IAAI,gBAAgB,OAAO,OAAO,WAAW;AACjD,OAAK;AACL,SAAO;;AAET,IAAM,kBAAkB,0BACtB,OACA,WACA,YAHsB;AAKtB,MAAM,IAAI,QAAQ,YAAa,aAAY,cAAc;AACzD,SAAO;;AAGF,IAAM,uBAAuB,+BAClC,QACA,QACA,UACA,KAJkC;AAMlC,MAAM,gBAAiB,UAAS,UAAU,WAAW;AACrD,MAAI;AACJ,MAAI,KAAK;AACP,gBAAY,SAAS;SAChB;AACL,gBAAY;;AAEd,SAAO,CAAC,eAAe;;AAczB,IAAM,cAAc,sBAAC,GAAW,MAAZ;AAClB,MAAI,KAAK,KAAK;AAAI,WAAO;WAChB,KAAK,KAAK;AAAI,WAAO;OACzB;AACH,QAAM,WAAW,KAAK,KAAK,KAAK;AAChC,QAAM,kBAAkB,KAAK,MAAQ,KAAI,KAAK,MAAM,MAAO;AAC3D,WAAO;;;AAGX,IAAM,iBAAiB,yBAAC,GAAW,MAAZ;AACrB,MAAI,KAAK,KAAK;AAAI,WAAO;WAChB,KAAK,KAAK;AAAI,WAAO;OACzB;AACH,QAAM,WAAW,KAAK,KAAK,KAAK;AAChC,QAAM,kBAAkB,KAAK,MAAQ,MAAK,KAAK,KAAK,MAAO;AAC3D,WAAO;;;AAIJ,IAAM,mBAAmB,2BAC9B,WACA,OACA,YAH8B;AAK9B,MAAM,QAAQ,CACZ,YAAY,GACZ,QAAQ,YACR,YAAY,GACZ,QAAQ,YACR,WACA,QAAQ,aAAa;AAEvB,SAAO,MAAM,KAAK;;AAGpB,IAAM,WAAW,mBAAC,GAAW,OAAe,MAA3B;AACf,MAAI,KAAK,KAAK,KAAK,KAAK,cAAc,GAAG;AACvC,QAAI,KAAK,KAAK,KAAK,cAAc;;AAEnC,MAAM,QAAQ,KAAK,MAAO,KAAI,KAAK,MAAM;AACzC,MAAM,mBAAmB,QAAQ;AACjC,MAAM,OAAO,KAAK,KAAK;AACvB,SAAO;;AAGT,IAAM,SAAS,iBAAC,GAAW,OAAe,MAA3B;AACb,MAAI,KAAK,KAAK,KAAK,KAAK,cAAc,GAAG;AACvC,QAAI,KAAK,KAAK,KAAK,cAAc;;AAEnC,MAAM,QAAQ,KAAK,MAAO,KAAI,KAAK,MAAM;AACzC,MAAM,mBAAmB,QAAQ;AACjC,MAAM,OAAO,KAAK,KAAK;AACvB,SAAO;;AAGT,IAAM,UAAU,kBAAC,GAAW,OAAe,MAA3B;AACd,MAAM,QAAQ,KAAK,MAAO,KAAI,KAAK,MAAM;AACzC,MAAM,mBAAmB,QAAQ;AACjC,MAAM,QAAQ,KAAK,KAAK;AACxB,MAAM,QAAQ,QAAQ,KAAK,KAAK,KAAK;AACrC,SAAO,CAAC,OAAO;;AAGjB,IAAM,UAAU,kBACd,GACA,OACA,UACA,OACA,UALc;AAOd,MAAI,UAAU,IAAI,KAAO,KAAI,SAAS,QAAS,WAAW,SAAS;AACnE,YAAU,IAAI,KACZ,QAAQ,YACL,SAAQ,sBAAsB,SAAS,uBAAuB;AAEnE,SAAO;;AAMF,IAAM,4BAA4B,oCACvC,MACA,QACA,cACA,OACA,UACA,kBACA,KAPuC;AASvC,MAAI;AACJ,UAAQ,aAAa;SACd;AACH,eAAS,sCACP,MACA,QACA,cACA,OACA,UACA;AAEF;;AAEA,eAAS,gCACP,MACA,QACA,cACA,OACA,UACA,kBACA;AAEF;;AAEJ,SAAO;;AAGT,IAAM,kCAAkC,0CACtC,MACA,QACA,cACA,OACA,UACA,kBACA,KAPsC;AAStC,MAAM,cAAW,SAAA,IAAiB;AAClC,MAAI,YAAY;AAChB,UAAQ;SACD;AACH,UAAI,KAAK;AACP,oBAAY,WAAW,eAAe,MAAM;aACvC;AACL,oBAAY,WAAW,YAAY,MAAM;;AAE3C,kBAAY,YAAY,aAAa,aAAa;AAClD,UAAI,WAAW;AACb,YAAA,yBAAmC,qBACjC,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,MAJK,gBAAP,uBAAA,IAAsB,YAAtB,uBAAA;AAMA,oBAAY,gBAAgB;AAC5B,oBAAY,YAAY;;AAE1B;SACG,SAAS;AACZ,UAAM,QAAQ,SAAS,MAAM,OAAO;AACpC,kBAAY,KAAK;AACjB,kBAAY,YAAY,OAAO,aAAa;AAC5C,UAAI,WAAW;AACb,YAAI,KAAK;AACP,sBAAY,MAAM,QAChB,OACA,aAAa,IACb,aAAa,KACb,OACA;eAEG;AACL,sBAAY,QAAQ,QAClB,OACA,aAAa,IACb,aAAa,OACb,OACA;;AAGJ,YAAA,yBAAmC,qBACjC,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,MAJK,iBAAP,uBAAA,IAAsB,aAAtB,uBAAA;AAMA,oBAAY,gBAAgB;AAC5B,oBAAY,YAAY;;AAE1B;;SAEG,OAAO;AACV,UAAM,QAAQ,OAAO,MAAM,OAAO;AAClC,kBAAY,KAAK;AACjB,kBAAY,YAAY,OAAO,aAAa;AAC5C,UAAI,WAAW;AACb,YAAI,KAAK;AACP,sBAAY,QAAQ,QAClB,OACA,aAAa,IACb,aAAa,OACb,OACA;eAEG;AACL,sBAAY,MAAM,QAChB,OACA,aAAa,IACb,aAAa,KACb,OACA;;AAGJ,YAAA,yBAAmC,qBACjC,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,MAJK,kBAAP,uBAAA,IAAsB,cAAtB,uBAAA;AAMA,oBAAY,gBAAgB;AAC5B,oBAAY,YAAY;;AAE1B;;SAEG,QAAQ;AACX,UAAA,WAA+B,QAC7B,OAAO,kBACP,OACA,eAHK,YAAP,SAAA,IAAkB,YAAlB,SAAA;AAKA,kBAAY,cAAc,aAAa;AACvC,UAAI,WAAW;AACb,oBAAY,QAAQ,QAClB,WACA,aAAa,IACb,aAAa,OACb,OACA;AAEF,oBAAY,MAAM,QAChB,WACA,aAAa,IACb,aAAa,KACb,OACA;AAEF,oBAAY,KAAK;AACjB,oBAAY,KAAK;AACjB,YAAA,yBAAmC,qBACjC,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,MAJK,kBAAP,uBAAA,IAAsB,cAAtB,uBAAA;AAMA,oBAAY,gBAAgB;AAC5B,oBAAY,YAAY;;AAE1B;;;AAGJ,SAAO;IAAE;IAAW;;;AAGtB,IAAM,wCAAwC,gDAC5C,MACA,QACA,cACA,OACA,UACA,kBAN4C;AAQ5C,MAAM,cAAW,SAAA,IAAiB;AAClC,MAAI,YAAY;AAChB,UAAQ;SACD,QAAQ;AACX,UAAA,YAA+B,QAC7B,OAAO,kBACP,OACA,eAHK,YAAP,UAAA,IAAkB,YAAlB,UAAA;AAKA,kBAAY,cAAc,aAAa;AACvC,UAAI,WAAW;AACb,oBAAY,QAAQ,QAClB,WACA,aAAa,IACb,aAAa,OACb,OACA;AAEF,oBAAY,MAAM,YAAY;AAC9B,oBAAY,KAAK;AACjB,oBAAY,KAAK;;AAEnB;;;AAGJ,SAAO;IAAE;IAAW;;;yBCnmBpB,OAAA;AAEA,SAAQ,MAA8B,QAAQ;;AAGhD,2BAUkC,OAAA;AAChC,MAAM,eAAe,MAAM,OACzB,SAAA,GAAC;AAAA,WAAI,EAAE,gBAAgB,EAAE,SAAS;;AAEpC,MAAI,aAAa,SAAS,GAAG;AAAA,QAAA,QAAA,gBAClB,IADkB;AAEzB,UAAM,cAAc,aAAa;AACjC,UAAM,WAAW,YAAY,OAAO;AACpC,cAAQ,MAAM,OAAO,SAAA,GAAC;AAAA,eAAI,SAAS,QAAQ,OAAO;;;AAHpD,aAAS,IAAI,GAAG,aAAa,SAAS,GAAG,KAAK;AAAA,YAArC;;;AAMX,SAAO;;AAGT,qBAAqB,UAAkB,MAAvC;AACE,MAAI,QAAgB;AACpB,MAAI,KAAK,SAAS,WAAW;AAC3B,YAAQ,SAAS,OACf,SAAA,GAAC;AAAA,aAAI,EAAE,gBAAgB,EAAE,aAAa,QAAQ,KAAK,QAAQ;;SAExD;AACL,YAAQ,SAAS,OAAO,SAAA,GAAC;AAAA,aAAI,EAAE,WAAW,EAAE,YAAY,KAAK;;;AAE/D,MAAM,eAAe,MAAM,OACzB,SAAC,UAAkB,GAAnB;AAAA,WACE,SAAS,OAAO,UAAU,YAAY,UAAU;KAClD;AAEF,UAAQ,MAAM,OAAO,OAAO;AAC5B,SAAO;;;AC3BF,IAAM,aAAwC,qBAAA,MAAA;MACnD,IAAA,KAAA,GACA,IAAA,KAAA,GACA,QAAA,KAAA,OACA,SAAA,KAAA,QACA,aAAA,KAAA,YACA,YAAA,KAAA,WACA,gBAAA,KAAA,eACA,kBAAA,KAAA,iBACA,UAAA,KAAA,QACA,cAAA,KAAA;AAEA,MAAM,kBAAkB,4BAAA;AACtB,WAAO,aAAa,QAAO,wBAAwB,QAAO;;AAG5D,MAAM,cAAc,wBAAA;AAClB,WAAO,aAAa,QAAO,0BAA0B,QAAO;;AAG9D,SACE,sBAAA,cAAA,KAAA;IAAG;KACD,sBAAA,cAAA,QAAA;IACE;IACA;IACA;IACA;IACA,IAAI;IACJ,IAAI;IACJ,MAAM;IACN,WAAW,SAAM;MAEnB,sBAAA,cAAA,QAAA;IACE,GAAG;IACH,OAAO;IACP;IACA;IACA,IAAI;IACJ,IAAI;IACJ,MAAM;;;ACjDP,IAAM,gBAA8C,wBAAA,MAAA;MACzD,IAAA,KAAA,GACA,IAAA,KAAA,GACA,QAAA,KAAA,OACA,SAAA,KAAA,QACA,kBAAA,KAAA,iBACA,cAAA,KAAA;AAEA,SACE,sBAAA,cAAA,QAAA;IACE;IACA;IACA;IACA;IACA,WAAW,SAAO;IAClB,IAAI;IACJ,IAAI;IACJ;;;ACrBC,IAAM,oBAAsD,4BAAA,MAAA;MACjE,gBAAA,KAAA,eACA,cAAA,KAAA;AAEA,SACE,sBAAA,cAAA,WAAA;IACE,WAAW,SAAO;IAClB,QAAQ;IACR;;;ACPC,IAAM,MAA+B,cAAA,MAAA;MAC1C,OAAA,KAAA,MACA,uBAAA,KAAA,sBACA,mBAAA,KAAA,kBACA,MAAA,KAAA,KACA,eAAA,KAAA,cACA,aAAA,KAAA;AAEA,MAAM,gBAAgB,iBACpB,CAAC,CAAC,MAAM,KAAK,gBAAgB,KAAK,WAClC,KAAK,GACL,KAAK;AAEP,MAAM,eAAe,KAAK,SAAS;AACnC,SACE,sBAAA,cAAA,KAAA;IAAG,WAAW,SAAO;IAAY,UAAU;KACzC,sBAAA,cAAC,YAAD;IACE,GAAG,KAAK;IACR,GAAG,KAAK;IACR,OAAO,KAAK,KAAK,KAAK;IACtB,QAAQ,KAAK;IACb,WAAW,KAAK;IAChB,eAAe,KAAK;IACpB,iBAAiB,KAAK;IACtB,QAAQ,KAAK;IACb;IACA,aAAa,qBAAA,GAAC;AACZ,0BAAoB,aAAa,QAAQ,MAAM;;MAGnD,sBAAA,cAAA,KAAA;IAAG,WAAU;KACV,oBACC,sBAAA,cAAA,KAAA,MAEE,sBAAA,cAAC,eAAD;IACE,GAAG,KAAK,KAAK;IACb,GAAG,KAAK,IAAI;IACZ,OAAO,KAAK;IACZ,QAAQ;IACR,iBAAiB,KAAK;IACtB,aAAa,qBAAA,GAAC;AACZ,mBAAa,SAAS,MAAM;;MAIhC,sBAAA,cAAC,eAAD;IACE,GAAG,KAAK,KAAK,KAAK,cAAc;IAChC,GAAG,KAAK,IAAI;IACZ,OAAO,KAAK;IACZ,QAAQ;IACR,iBAAiB,KAAK;IACtB,aAAa,qBAAA,GAAC;AACZ,mBAAa,OAAO,MAAM;;OAKjC,wBACC,sBAAA,cAAC,mBAAD;IACE;IACA,aAAa,qBAAA,GAAC;AACZ,mBAAa,YAAY,MAAM;;;;AC9DtC,IAAM,WAAoC,mBAAA,MAAA;MAC/C,OAAA,KAAA,MACA,uBAAA,KAAA,sBACA,mBAAA,KAAA,kBACA,eAAA,KAAA,cACA,aAAA,KAAA;AAEA,MAAM,gBAAgB,iBACpB,KAAK,gBAAgB,KAAK,IAC1B,KAAK,GACL,KAAK;AAEP,SACE,sBAAA,cAAA,KAAA;IAAG,WAAW,SAAO;IAAY,UAAU;KACzC,sBAAA,cAAC,YAAD;IACE,GAAG,KAAK;IACR,GAAG,KAAK;IACR,OAAO,KAAK,KAAK,KAAK;IACtB,QAAQ,KAAK;IACb,WAAW,KAAK;IAChB,eAAe,KAAK;IACpB,iBAAiB,KAAK;IACtB,QAAQ,KAAK;IACb;IACA,aAAa,qBAAA,GAAC;AACZ,0BAAoB,aAAa,QAAQ,MAAM;;MAGnD,sBAAA,cAAA,KAAA;IAAG,WAAU;KACV,wBACC,sBAAA,cAAC,mBAAD;IACE;IACA,aAAa,qBAAA,GAAC;AACZ,mBAAa,YAAY,MAAM;;;;;ACpCtC,IAAM,YAAqC,oBAAA,MAAA;MAChD,OAAA,KAAA,MACA,mBAAA,KAAA,kBACA,eAAA,KAAA,cACA,aAAA,KAAA;AAEA,MAAM,YAAS,eAAgB,MAAK,KAAK,KAAK,SAAS,SAAxC,YACX,MAAK,IAAI,KAAK,SAAS,QADZ;AAEf,MAAM,cAAc,wBAAA;AAClB,WAAO,aACH,KAAK,OAAO,0BACZ,KAAK,OAAO;;AAGlB,SACE,sBAAA,cAAA,KAAA;IAAG,UAAU;IAAG,WAAW,SAAO;KAChC,sBAAA,cAAA,QAAA;IACE,MAAM;IACN,GAAG,KAAK;IACR,OAAO,KAAK;IACZ,GAAG,KAAK;IACR,QAAQ,KAAK;IACb,IAAI,KAAK;IACT,IAAI,KAAK;IACT;IACA,WAAW,SAAO;IAClB,aAAa,qBAAA,GAAC;AACZ,0BAAoB,aAAa,QAAQ,MAAM;;;;;AC3BlD,IAAM,UAAmC,kBAAA,MAAA;MAAG,OAAA,KAAA,MAAM,aAAA,KAAA;AACvD,MAAM,WAAW,aACb,KAAK,OAAO,0BACZ,KAAK,OAAO;AAChB,MAAM,eAAe,aACjB,KAAK,OAAO,wBACZ,KAAK,OAAO;AAChB,MAAM,cAAc,KAAK,KAAK,KAAK;AAEnC,MAAM,sBAAsB,CAC1B,KAAK,IACL,KAAK,IAAI,KAAK,SAAS,IAAI,GAC3B,KAAK,IACL,KAAK,IAAI,KAAK,QACd,KAAK,KAAK,IACV,KAAK,IAAI,KAAK,SAAS,IAAI,GAC3B,KAAK;AACP,MAAM,uBAAuB,CAC3B,KAAK,IACL,KAAK,IAAI,KAAK,SAAS,IAAI,GAC3B,KAAK,IACL,KAAK,IAAI,KAAK,QACd,KAAK,KAAK,IACV,KAAK,IAAI,KAAK,SAAS,IAAI,GAC3B,KAAK;AAEP,SACE,sBAAA,cAAA,KAAA;IAAG,UAAU;IAAG,WAAW,SAAO;KAChC,sBAAA,cAAA,QAAA;IACE,MAAM;IACN,GAAG,KAAK;IACR,OAAO;IACP,GAAG,KAAK;IACR,QAAQ,KAAK;IACb,IAAI,KAAK;IACT,IAAI,KAAK;IACT,WAAW,SAAO;MAEpB,sBAAA,cAAA,QAAA;IACE,GAAG,KAAK;IACR,OAAO,KAAK;IACZ,GAAG,KAAK;IACR,QAAQ,KAAK;IACb,IAAI,KAAK;IACT,IAAI,KAAK;IACT,MAAM;MAER,sBAAA,cAAA,QAAA;IACE,MAAM;IACN,GAAG,KAAK;IACR,OAAO;IACP,GAAG,KAAK;IACR,QAAQ,KAAK,SAAS;IACtB,IAAI,KAAK;IACT,IAAI,KAAK;IACT,WAAW,SAAO;MAEpB,sBAAA,cAAA,WAAA;IACE,WAAW,SAAO;IAClB,QAAQ;IACR,MAAM;MAER,sBAAA,cAAA,WAAA;IACE,WAAW,SAAO;IAClB,QAAQ;IACR,MAAM;;;;AC5CP,IAAM,WAAoC,mBAAA,OAAK;AACpD,MAAA,SAAA,SAAA,IASK,QARH,OADF,OACE,MACA,cAFF,OAEE,aACA,WAHF,OAGE,UACA,aAJF,OAIE,YACA,aALF,OAKE,YACA,MANF,OAME,KACA,eAPF,OAOE;AAIF,MAAM,UAAU,0BAAuB;AACvC,MAAA,YAAgC,4BAAsB,sBAAA,cAAA,OAAA,QAA/C,WAAP,UAAA,IAAiB,cAAjB,UAAA;AACA,MAAA,aAAwC,4BAAS,OAA1C,eAAP,WAAA,IAAqB,kBAArB,WAAA;AAEA,+BAAU,WAAA;AACR,YAAQ,KAAK;WACN;AACH,oBAAY,sBAAA,cAAC,WAAD,OAAA,OAAA,IAAe;AAC3B;WACG;AACH,oBAAY,sBAAA,cAAC,SAAD,OAAA,OAAA,IAAa;AACzB;WACG;AACH,oBAAY,sBAAA,cAAC,UAAD,OAAA,OAAA,IAAc;AAC1B;;AAEA,oBAAY,sBAAA,cAAC,KAAD,OAAA,OAAA,IAAS;AACrB;;KAEH,CAAC,MAAM;AAEV,+BAAU,WAAA;AACR,QAAI,QAAQ,SAAS;AACnB,sBAAgB,QAAQ,QAAQ,UAAU,QAAQ,KAAK,KAAK,KAAK;;KAElE,CAAC,SAAS;AAEb,MAAM,OAAO,iBAAA;AACX,QAAM,QAAQ,KAAK,KAAK,KAAK;AAC7B,QAAM,WAAW,KAAK,YAAY,SAAS;AAC3C,QAAI,cAAc;AAChB,aAAO,KAAK,KAAK,QAAQ;;AAE3B,QAAI,OAAO,QAAQ,SAAS;AAC1B,aACE,KAAK,KACL,QAAQ,QAAQ,UAAU,QAC1B,cAAc,CAAC,WACf,cAAc;WAEX;AACL,aAAO,KAAK,KAAK,QAAQ,cAAc,CAAC,WAAW,cAAc;;;AAIrE,SACE,sBAAA,cAAA,KAAA;IACE,WAAW,mBAAA,GAAC;AACV,cAAQ,EAAE;aACH,UAAU;AACb,cAAI;AAAU,yBAAa,UAAU,MAAM;AAC3C;;;AAGJ,QAAE;;IAEJ,cAAc,sBAAA,GAAC;AACb,mBAAa,cAAc,MAAM;;IAEnC,cAAc,sBAAA,GAAC;AACb,mBAAa,cAAc,MAAM;;IAEnC,eAAe,uBAAA,GAAC;AACd,mBAAa,YAAY,MAAM;;IAEjC,SAAS,mBAAA;AACP,mBAAa,UAAU;;KAGxB,UACD,sBAAA,cAAA,QAAA;IACE,GAAG;IACH,GAAG,KAAK,IAAI,aAAa;IACzB,WACE,eACI,MAAM,WACY,MAAM;IAE9B,KAAK;KAEJ,KAAK;;ACnFP,IAAM,mBAAoD,2BAAA,MAAA;;MAC/D,QAAA,KAAA,OACA,QAAA,KAAA,OACA,aAAA,KAAA,YACA,eAAA,KAAA,cACA,YAAA,KAAA,WACA,cAAA,KAAA,aACA,WAAA,KAAA,UACA,MAAA,KAAA,KACA,aAAA,KAAA,YACA,aAAA,KAAA,YACA,cAAA,KAAA,aACA,aAAA,KAAA,YACA,WAAA,KAAA,UACA,MAAA,KAAA,KACA,gBAAA,KAAA,eACA,gBAAA,KAAA,eACA,kBAAA,KAAA,iBACA,eAAA,KAAA,cACA,mBAAA,KAAA,kBACA,gBAAA,KAAA,eACA,WAAA,KAAA;AAEA,MAAM,QAAQ,QAAH,QAAG,QAAH,SAAA,SAAA,gBAAG,IAAK,aAAR,QAAA,iBAAA,SAAA,SAAG,aAAc;AAC5B,MAAA,YAA0B,4BAAS,IAA5B,QAAP,UAAA,IAAc,WAAd,UAAA;AACA,MAAA,aAAgD,4BAAS,IAAlD,mBAAP,WAAA,IAAyB,sBAAzB,WAAA;AACA,MAAA,aAAgC,4BAAS,QAAlC,WAAP,WAAA,IAAiB,cAAjB,WAAA;AAGA,+BAAU,WAAA;AACR,QAAM,YACJ,MAAM,GAAG,YACT,MAAM,GAAG,YACT,MAAM,GAAG,sBAAsB,KAAK,MACpC,MAAM,GAAG,sBAAsB,KAAK;AACtC,QAAM,WAAY,WAAW,cAAe;AAC5C,aAAS;KACR,CAAC,aAAa,OAAO;AAExB,+BAAU,WAAA;AACR,QAAM,kBAAe,0BAAU,OAAV;AAAA,UAAA;;AACnB,YAAI,CAAC,WAAW,eAAe,CAAC,SAAS,CAAC,SAAD,QAAC,QAAD,UAAC,IAAK;AAAS,iBAAA,QAAA;AACxD,cAAM;AAEN,cAAM,IAAI,MAAM;AAChB,YAAM,SAAS,MAAM,gBACnB,QADa,QACb,QADa,SAAA,SAAA,yBACb,IAAK,QAAQ,oBADA,QAAA,0BAAA,SAAA,SACb,sBAA6B;AAG/B,YAAA,wBAAmC,0BACjC,OAAO,GACP,WAAW,QACX,WAAW,aACX,OACA,UACA,kBACA,MAPM,YAAR,sBAAQ,WAAW,cAAnB,sBAAmB;AASnB,YAAI,WAAW;AACb,wBAAc;YAAE,QAAQ,WAAW;YAAQ;;;;eAnB1B,GAAA;AAAA,eAAA,QAAA,OAAA;;;AAuBrB,QAAM,gBAAa,wBAAU,OAAV;AAAA,UAAA;;;cAgEb,CAAC,kBAAA;AACH,0BAAc;;;AAhEhB,YAAQ,SAA8C,WAA9C,QAAQ,uBAAsC,WAAtC,sBAAsB,cAAgB,WAAhB;AACtC,YAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAD,QAAC,QAAD,UAAC,IAAK,YAAW,CAAC;AAC9C,iBAAA,QAAA;AACF,cAAM;AAEN,cAAM,IAAI,MAAM;AAChB,YAAM,SAAS,MAAM,gBACnB,QADa,QACb,QADa,SAAA,SAAA,0BACb,IAAK,QAAQ,oBADA,QAAA,2BAAA,SAAA,SACb,uBAA6B;AAE/B,YAAA,yBAAwC,0BACtC,OAAO,GACP,QACA,aACA,OACA,UACA,kBACA,MAPmB,iBAArB,uBAAQ;AAUR,YAAM,oBACJ,qBAAqB,UAAU,eAAe,SAC9C,qBAAqB,QAAQ,eAAe,OAC5C,qBAAqB,aAAa,eAAe;AAGnD,YAAI,QAAQ,oBAAoB,aAAa;AAC7C,YAAI,QAAQ,oBAAoB,WAAW;AAC3C,sBAAc;UAAE,QAAQ;;AACxB,oBAAY;AAGZ,YAAI,mBAAmB;;cAEpB,YAAW,UAAU,WAAW,SAAS,WAAW,YACrD,gBACA,mBAAA;2CAEI;AAAA,qBAAA,QAAA,QACmB,aACnB,gBACA,eAAe,cAHf,KAAA,SACI,QADJ;AAAA,oBAKE,WAAW,QALb;AAMA,qCAAmB;;;eAEtB,WAAe;AACd,iCAAmB;;;;;;;kBAEZ,oBAAoB,mBAAA;gDACzB;AAAA,yBAAA,QAAA,QACmB,iBACnB,gBACA,eAAe,cAHf,KAAA,SACI,QADJ;AAAA,wBAKE,WAAW,QALb;AAMA,yCAAmB;;;mBAEtB,WAAe;AACd,qCAAmB;;;;;;;;;;;;;eA3DN,GAAA;AAAA,eAAA,QAAA,OAAA;;;AAqEnB,QACE,CAAC,YACA,YAAW,WAAW,UACrB,WAAW,WAAW,SACtB,WAAW,WAAW,WACtB,WAAW,WAAW,eACxB,QALA,QAKA,QALA,UAKA,IAAK,SACL;AACA,UAAI,QAAQ,iBAAiB,aAAa;AAC1C,UAAI,QAAQ,iBAAiB,WAAW;AACxC,kBAAY;;KAEb,CACD,YACA,OACA,kBACA,kBACA,UACA,cACA,KACA;AAMF,MAAM,sBAAmB,8BACvB,QACA,MACA,OAHuB;AAAA,QAAA;;YAKnB,CAAC,OAAA;cACC,WAAW,UAAA;AACb,4BAAgB,KAAK;;;;gBAIhB,gBAAgB,QAAD;;oBAClB,WAAW,UAAA;;wBACT,UAAA;sDACE;AAAA,+BAAA,QAAA,QACmB,SAAS,OAD5B,KAAA,SACI,QADJ;AAAA,8BAEE,WAAW,UAAa,QAF1B;AAGA,0CAAc;8BAAE;8BAAQ,aAAa;;;;yBAExC,SAAQ,OAAO;AACd,gCAAQ,MAAM,sBAAsB;;;;;;;;;;;;;;;uBAMnC,WAAW,cAAc;AAChC,kBAAI,CAAC,WAAW,QAAQ;AACtB,8BAAc;kBACZ;kBACA,aAAa;kBACb,sBAAsB;;;uBAGjB,WAAW,cAAc;AAClC,kBAAI,WAAW,WAAW,cAAc;AACtC,8BAAc;kBAAE,QAAQ;;;uBAEjB,WAAW,YAAY;AAChC,eAAC,CAAC,iBAAiB,cAAc;uBAG1B,WAAW,QAAQ;AAAA,kBAAA;AAC1B,kBAAI,CAAC,SAAD,QAAC,QAAD,UAAC,IAAK,YAAW,CAAC;AAAO;AAC7B,oBAAM,IAAI,MAAM;AAChB,kBAAM,SAAS,MAAM,gBAAN,0BACb,IAAI,QAAQ,oBADC,QAAA,2BAAA,SAAA,SACb,uBAA4B;AAE9B,kCAAoB,OAAO,IAAI,KAAK;AACpC,4BAAc;gBACZ;gBACA,aAAa;gBACb,sBAAsB;;mBAEnB;AACL,4BAAc;gBACZ;gBACA,aAAa;gBACb,sBAAsB;;;;;aA1DH,GAAA;AAAA,aAAA,QAAA,OAAA;;;AA+DzB,SACE,sBAAA,cAAA,KAAA;IAAG,WAAU;KACX,sBAAA,cAAA,KAAA;IAAG,WAAU;IAAS,MAAM;IAAY,QAAQ;KAC7C,MAAM,IAAI,SAAA,MAAI;AACb,WAAO,KAAK,YAAY,IAAI,SAAA,OAAK;AAC/B,aACE,sBAAA,cAAC,OAAD;QACE,KAAG,gBAAgB,KAAK,KAArB,SAA8B,MAAM,MAAM,OAAO;QACpD,UAAU;QACV,QAAQ,MAAM,MAAM;QACpB;QACA;QACA;QACA;;;OAMV,sBAAA,cAAA,KAAA;IAAG,WAAU;IAAM;IAAwB;KACxC,MAAM,IAAI,SAAA,MAAI;AACb,WACE,sBAAA,cAAC,UAAD;MACE;MACA;MACA;MACA,sBAAsB,CAAC,CAAC,oBAAoB,CAAC,KAAK;MAClD,kBAAkB,CAAC,CAAC,gBAAgB,CAAC,KAAK;MAC1C,UAAU,CAAC,KAAK;MAChB,cAAc;MACd,KAAK,KAAK;MACV,YAAY,CAAC,CAAC,gBAAgB,KAAK,OAAO,aAAa;MACvD;;;;;ACjRP,IAAM,YAAsC,oBAAA,MAAA;MACjD,YAAA,KAAA,WACA,gBAAA,KAAA,eACA,WAAA,KAAA,UACA,cAAA,KAAA,aACA,UAAA,KAAA,SACA,UAAA,KAAA;AAEA,MAAM,cAAc,0BAAsB;AAC1C,MAAM,yBAAyB,0BAAuB;AACtD,MAAM,4BAA4B,0BAAuB;AACzD,MAAM,cAAW,SAAA,IAAQ,UAAR;IAAkB,KAAK;;AAExC,+BAAU,WAAA;AACR,QAAI,uBAAuB,SAAS;AAClC,6BAAuB,QAAQ,YAAY;;KAE5C,CAAC;AAEJ,+BAAU,WAAA;AACR,QAAI,0BAA0B,SAAS;AACrC,gCAA0B,QAAQ,aAAa;;KAEhD,CAAC;AAEJ,SACE,sBAAA,cAAA,OAAA;IACE,WAAW,SAAO;IAClB,KAAK;IACL,KAAI;KAEJ,sBAAA,cAAA,OAAA;IACE,OAAM;IACN,OAAO,UAAU;IACjB,QAAQ,cAAc;IACtB,YAAY,SAAS;KAErB,sBAAA,cAAC,UAAD,OAAA,OAAA,IAAc,kBAEhB,sBAAA,cAAA,OAAA;IACE,KAAK;IACL,WAAW,SAAO;IAClB,OACE,cACI;MAAE,QAAQ;MAAa,OAAO,UAAU;QACxC;MAAE,OAAO,UAAU;;KAGzB,sBAAA,cAAA,OAAA;IACE,OAAM;IACN,OAAO,UAAU;IACjB,QAAQ,SAAS,YAAY,SAAS,MAAM;IAC5C,YAAY,SAAS;IACrB,KAAK;KAEL,sBAAA,cAAC,MAAD,OAAA,OAAA,IAAU,aACV,sBAAA,cAAC,kBAAD,OAAA,OAAA,IAAsB;;;ACnEzB,IAAM,mBAMR,2BAAA,MAAA;MAAG,SAAA,KAAA,QAAQ,WAAA,KAAA,UAAU,gBAAA,KAAA,eAAe,MAAA,KAAA,KAAK,WAAA,KAAA;AAC5C,MAAM,YAAY,0BAAuB;AAEzC,+BAAU,WAAA;AACR,QAAI,UAAU,SAAS;AACrB,gBAAU,QAAQ,aAAa;;KAEhC,CAAC;AAEJ,SACE,sBAAA,cAAA,OAAA;IACE,KAAI;IACJ,OAAO;MACL,QAAQ,MAAG,SACA,gBADA,eAAA,iBAEQ,gBAFR;;IAIb,WAAW,SAAO;IAClB;IACA,KAAK;KAEL,sBAAA,cAAA,OAAA;IAAK,OAAO;MAAE,OAAO;MAAU,QAAQ;;;;ICVhC,QAA6C,gBAAA,MAAA;MACxD,QAAA,KAAA,gCACA,cAAA,eAAA,sBAAA,SAAe,KAAA,2CACf,aAAA,cAAA,qBAAA,SAAc,KAAA,4CACd,eAAA,gBAAA,uBAAA,SAAgB,UAAA,0CAChB,WAAA,YAAA,mBAAA,SAAY,KAAA,wCACZ,aAAA,cAAA,qBAAA,SAAc,IAAA,uCACd,UAAA,WAAA,kBAAA,SAAW,SAAS,MAAA,kCACpB,QAAA,SAAA,gBAAA,SAAS,UAAA,iCACT,SAAA,UAAA,iBAAA,SAAU,KAAA,0CACV,iBAAA,kBAAA,yBAAA,SAAkB,IAAA,mDAClB,kBAAA,mBAAA,0BAAA,SAAmB,YAAA,oDACnB,0BAAA,2BAAA,0BAAA,SAA2B,YAAA,oDAC3B,oBAAA,qBAAA,0BAAA,SAAqB,YAAA,oDACrB,4BAAA,6BAAA,0BAAA,SAA6B,YAAA,oDAC7B,sBAAA,uBAAA,0BAAA,SAAuB,YAAA,oDACvB,8BAAA,+BAAA,0BAAA,SAA+B,YAAA,oDAC/B,wBAAA,yBAAA,0BAAA,SAAyB,YAAA,qDACzB,gCAAA,iCAAA,2BAAA,SAAiC,YAAA,qDACjC,0BAAA,2BAAA,0BAAA,SAA2B,YAAA,qDAC3B,kCAAA,mCAAA,2BAAA,SAAmC,YAAA,wCACnC,KAAA,MAAA,aAAA,SAAM,QAAA,kCACN,aAAA,cAAA,qBAAA,SAAc,IAAA,uCACd,UAAA,WAAA,kBAAA,SAAW,MAAA,sCACX,YAAA,aAAA,oBAAA,SAAa,SAAA,wCACb,YAAA,aAAA,oBAAA,SAAa,oFAAA,sCACb,UAAA,WAAA,kBAAA,SAAW,SAAA,uCACX,aAAA,cAAA,qBAAA,SAAc,KAAA,yCACd,YAAA,aAAA,oBAAA,SAAa,6BAAA,4CACb,gBAAA,iBAAA,wBAAA,SAAiB,yBAAA,gDACjB,gBAAA,iBAAA,wBAAA,SAAiB,wBAAA,+CACjB,eAAA,gBAAA,uBAAA,SAAgB,uBAAA,oBAChB,eAAA,KAAA,cACA,mBAAA,KAAA,kBACA,gBAAA,KAAA,eACA,WAAA,KAAA,UACA,WAAA,KAAA,UACA,kBAAA,KAAA;AAEA,MAAM,aAAa,0BAAuB;AAC1C,MAAM,cAAc,0BAAuB;AAC3C,MAAA,YAAkC,4BAAoB,WAAA;AACpD,QAAA,kBAA6B,eAAe,OAAO,WAA5C,YAAP,gBAAA,IAAkB,UAAlB,gBAAA;AACA,WAAO;MAAE;MAAU,OAAO,UAAU,WAAW,SAAS;;MAFnD,YAAP,UAAA,IAAkB,eAAlB,UAAA;AAKA,MAAA,aAAoC,4BAAU,YAAY,UAAW,MAA9D,aAAP,WAAA,IAAmB,gBAAnB,WAAA;AACA,MAAA,aAA0C,4BAAS,IAA5C,gBAAP,WAAA,IAAsB,mBAAtB,WAAA;AACA,MAAA,aAAkD,4BAAS,IAApD,oBAAP,WAAA,IAA0B,uBAA1B,WAAA;AACA,MAAA,aAAoD,4BAAS,cAAtD,qBAAP,WAAA,IAA2B,wBAA3B,WAAA;AACA,MAAA,aAAgC,4BAAoB,KAA7C,WAAP,WAAA,IAAiB,cAAjB,WAAA;AACA,MAAA,aAAoC,4BAAqB;IACvD,QAAQ;MADH,aAAP,WAAA,IAAmB,gBAAnB,WAAA;AAIA,MAAA,aAAwC,+BAAjC,eAAP,WAAA,IAAqB,kBAArB,WAAA;AACA,MAAA,aAAoC,4BAAyB,OAAtD,aAAP,WAAA,IAAmB,gBAAnB,WAAA;AAEA,MAAM,WAAW,UAAU,MAAM,SAAS;AAC1C,MAAM,kBAAkB,SAAS,SAAS;AAE1C,MAAA,cAA8B,4BAAS,IAAhC,UAAP,YAAA,IAAgB,aAAhB,YAAA;AACA,MAAA,cAA8B,4BAAS,KAAhC,UAAP,YAAA,IAAgB,aAAhB,YAAA;AACA,MAAA,cAAkD,4BAAS,QAApD,oBAAP,YAAA,IAA0B,uBAA1B,YAAA;AAGA,+BAAU,WAAA;AACR,QAAI;AACJ,QAAI,iBAAiB;AACnB,sBAAgB,kBAAkB;WAC7B;AACL,sBAAgB;;AAElB,QAAA,mBAA6B,eAAe,eAAe,WAApD,YAAP,iBAAA,IAAkB,UAAlB,iBAAA;AACA,QAAI,WAAW,UAAU,WAAW,SAAS;AAC7C,QAAI,KAAK;AACP,iBAAW,SAAS;AACpB,UAAI,YAAY,IAAI;AAClB,mBAAW,SAAS,SAAS;;;AAGjC,iBAAa;MAAE,OAAO;MAAU;;AAChC,gBACE,kBACE,eACA,UACA,aACA,WACA,YACA,iBACA,aACA,KACA,kBACA,0BACA,oBACA,4BACA,sBACA,8BACA,wBACA,gCACA,0BACA;KAGH,CACD,OACA,UACA,WACA,iBACA,aACA,YACA,aACA,kBACA,0BACA,oBACA,4BACA,sBACA,8BACA,wBACA,gCACA,0BACA,kCACA,KACA,SACA;AAGF,+BAAU,WAAA;AACR,QAAQ,cAAwB,WAAxB,aAAa,SAAW,WAAX;AACrB,QAAI,aAAa;AACf,UAAI,WAAW,UAAU;AACvB,sBAAc;UAAE,QAAQ;;AACxB,oBAAY,SAAS,OAAO,SAAA,GAAC;AAAA,iBAAI,EAAE,OAAO,YAAY;;iBAEtD,WAAW,UACX,WAAW,SACX,WAAW,WACX,WAAW,YACX;AACA,YAAM,gBAAgB,SAAS,KAAK,SAAA,GAAC;AAAA,iBAAI,EAAE,OAAO,YAAY;;AAC9D,YACE,iBACC,eAAc,MAAM,cAAc,YAAY,MAAM,aACnD,cAAc,IAAI,cAAc,YAAY,IAAI,aAChD,cAAc,aAAa,YAAY,WACzC;AAEA,cAAM,cAAc,SAAS,IAAI,SAAA,GAAC;AAAA,mBAChC,EAAE,OAAO,YAAY,KAAK,cAAc;;AAE1C,sBAAY;;;;KAIjB,CAAC,YAAY;AAEhB,+BAAU,WAAA;AACR,QAAI,YAAY;AACd,kBAAY,SAAS,IAAI,SAAA,GAAC;AAAA,eAAK,EAAE,OAAO,WAAW,KAAK,IAAI;;AAC5D,oBAAc;;KAEf,CAAC,YAAY;AAEhB,+BAAU,WAAA;AACR,QAAM,gBAAiB,YAAY,UAAW;AAC9C,QAAI,kBAAkB,YAAY;AAChC,oBAAc;;KAEf,CAAC,WAAW,SAAS;AAExB,+BAAU,WAAA;AACR,QAAI,CAAC,eAAe;AAClB,uBAAiB;;AAEnB,QAAI,YAAY,SAAS;AACvB,uBAAiB,YAAY,QAAQ;;KAEtC,CAAC,aAAa;AAEjB,+BAAU,WAAA;AACR,QAAI,WAAW,SAAS;AACtB,2BAAqB,WAAW,QAAQ,cAAc;;KAEvD,CAAC,YAAY;AAEhB,+BAAU,WAAA;AACR,QAAI,aAAa;AACf,4BAAsB,cAAc;WAC/B;AACL,4BAAsB,MAAM,SAAS,YAAY;;KAElD,CAAC,aAAa;AAGjB,+BAAU,WAAA;AACR,QAAM,cAAc,sBAAC,OAAD;AAClB,UAAI,MAAM,YAAY,MAAM,QAAQ;AAClC,YAAM,aAAa,MAAM,SAAS,MAAM,SAAS,MAAM;AACvD,YAAI,aAAa,UAAU;AAC3B,YAAI,aAAa,GAAG;AAClB,uBAAa;mBACJ,aAAa,UAAU;AAChC,uBAAa;;AAEf,mBAAW;AACX,cAAM;iBACG,aAAa;AACtB,YAAI,aAAa,UAAU,MAAM;AACjC,YAAI,aAAa,GAAG;AAClB,uBAAa;mBACJ,aAAa,kBAAkB,aAAa;AACrD,uBAAa,kBAAkB;;AAEjC,YAAI,eAAe,SAAS;AAC1B,qBAAW;AACX,gBAAM;;;AAIV,2BAAqB;;AAIvB,QAAI,WAAW,SAAS;AACtB,iBAAW,QAAQ,iBAAiB,SAAS,aAAa;QACxD,SAAS;;;AAGb,WAAO,WAAA;AACL,UAAI,WAAW,SAAS;AACtB,mBAAW,QAAQ,oBAAoB,SAAS;;;KAGnD,CAAC,WAAW,SAAS,SAAS,SAAS,aAAa,UAAU;AAEjE,MAAM,gBAAgB,wBAAC,OAAD;AACpB,QAAI,YAAY,MAAM,cAAc,aAAa,CAAC,mBAAmB;AACnE,iBAAW,MAAM,cAAc;;AAEjC,yBAAqB;;AAGvB,MAAM,gBAAgB,wBAAC,OAAD;AACpB,QAAI,YAAY,MAAM,cAAc,cAAc,CAAC,mBAAmB;AACpE,iBAAW,MAAM,cAAc;;AAEjC,yBAAqB;;AAMvB,MAAM,gBAAgB,wBAAC,OAAD;AACpB,UAAM;AACN,QAAI,aAAa;AACjB,QAAI,aAAa;AACjB,QAAI,MAAM;AACV,YAAQ,MAAM;WACP;WACA;AACH,sBAAc;AACd,cAAM;AACN;WACG;WACA;AACH,sBAAc;AACd,cAAM;AACN;WACG;WACA;AACH,sBAAc;AACd;WACG;WACA;AACH,sBAAc;AACd;;AAEJ,QAAI,KAAK;AACP,UAAI,aAAa,GAAG;AAClB,qBAAa;iBACJ,aAAa,UAAU;AAChC,qBAAa;;AAEf,iBAAW;WACN;AACL,UAAI,aAAa,GAAG;AAClB,qBAAa;iBACJ,aAAa,kBAAkB,aAAa;AACrD,qBAAa,kBAAkB;;AAEjC,iBAAW;;AAEb,yBAAqB;;AAMvB,MAAM,qBAAqB,6BAAC,QAAD;AACzB,QAAM,kBAAkB,SAAS,KAAK,SAAA,GAAC;AAAA,aAAI,EAAE,OAAO;;AACpD,QAAM,kBAAkB,SAAS,KAC/B,SAAA,GAAC;AAAA,aAAI,CAAC,CAAC,gBAAgB,EAAE,OAAO,aAAa;;AAE/C,QAAI,UAAU;AACZ,UAAI,iBAAiB;AACnB,iBAAS,iBAAiB;;AAE5B,UAAI,iBAAiB;AACnB,iBAAS,iBAAiB;;;AAG9B,oBAAgB;;AAElB,MAAM,sBAAsB,8BAAC,MAAD;AAC1B,QAAI,mBAAmB,KAAK,iBAAiB,QAAW;AACtD,sBAAe,SAAA,IAAM,MAAN;QAAY,cAAc,CAAC,KAAK;;;;AAGnD,MAAM,YAAuB;IAC3B;IACA;IACA;IACA;IACA,OAAO,UAAU;IACjB;IACA;;AAEF,MAAM,gBAA+B;IACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAEF,MAAM,WAAkC;IACtC,OAAO;IACP,OAAO,UAAU;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,iBAAiB;IACjB;IACA;IACA;IACA;;AAGF,MAAM,aAA4B;IAChC;IACA,UAAU;IACV;IACA;IACA,OAAO;IACP;IACA;IACA;IACA;IACA,0BAA0B,SAAO;IACjC;IACA;IACA,iBAAiB;IACjB,iBAAiB;IACjB;IACA;;AAEF,SACE,sBAAA,cAAA,OAAA,MACE,sBAAA,cAAA,OAAA;IACE,WAAW,SAAO;IAClB,WAAW;IACX,UAAU;IACV,KAAK;KAEJ,iBAAiB,sBAAA,cAAC,UAAD,OAAA,OAAA,IAAc,cAChC,sBAAA,cAAC,WAAD;IACE;IACA;IACA;IACA;IACA;IACA;MAED,WAAW,eACV,sBAAA,cAAC,SAAD;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,WAAW;IACjB;IACA;IACA;IACA;IACA;MAGJ,sBAAA,cAAC,gBAAD;IACE;IACA;IACA;IACA,QAAQ;IACR,UAAU;IACV;OAGJ,sBAAA,cAAC,kBAAD;IACE;IACA;IACA,QAAQ;IACR;IACA,UAAU;;;;;;;;;;;AhCrbX,IAAM,SAAQ;AAAA,EACnB,EAAE,KAAK,cAAc,MAAM;AAAA,EAC3B;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA;AAAA,EAER,GAAG;AAAA;AAGE,IAAM,OAAO,CAAC,EAAE,WAAW;AAChC,QAAM,CAAC,WAAW,gBAAgB,4BAAS;AAC3C,QAAM,cAAc,IAAI;AACxB,QAAM,SAAS,2BAAQ,MAAM;AAC3B,WAAO,MAAM,QAAQ,IAAI,CAAC,GAAG,MAAM;AACjC,UAAI,QAAQ,EAAE,MAAM;AACpB,aACE,oCAAC,aAAD;AAAA,QACE,WAAW;AAAA,QACX,gBAAe;AAAA,QACf,eAAc;AAAA,QACd,KAAK,KAAK;AAAA,QACV,OAAO;AAAA,UACL,iBAAiB,SAAS,QAAQ,mBAAmB,GAAG;AAAA;AAAA,SAG1D,oCAAC,kBAAD;AAAA,QAAU,WAAW;AAAA,QAAmB,MAAK;AAAA,QAAO,OAAO,EAAE;AAAA;AAAA;AAAA,KAIlE;AAEH,SACE,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAQ,eAAc;AAAA,KACpC,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAiB,YAAW;AAAA,IAAS,eAAc;AAAA,KACjE,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAe,eAAc;AAAA,KAC3C,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAa,eAAc;AAAA,IAAM,YAAW;AAAA,IAAS,gBAAe;AAAA,KAClF,oCAAC,aAAD;AAAA,IAAK,eAAc;AAAA,IAAM,MAAM;AAAA,IAAG,YAAW;AAAA,KAC1C,SAEH,oCAAC,aAAD;AAAA,IAAK,eAAc;AAAA,KAChB,MAAM,QAAQ,IAAI,CAAC,GAAG,MAAM;AAC3B,WACE,oCAAC,QAAD;AAAA,MACE,OAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,aAAa;AAAA,QACb,UAAU;AAAA;AAAA,MAEZ,KAAK,KAAK;AAAA,MACV,YAAU,EAAE;AAAA,OAEZ,oCAAC,mBAAD;AAAA,MAAW,KAAK,EAAE;AAAA,MAAQ,OAAM;AAAA,MAAO,QAAO;AAAA;AAAA,QAOxD,oCAAC,kBAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,OAAO,MAAM;AAAA,OAIjB,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAa,YAAW;AAAA,IAAS,eAAc;AAAA,KAC7D,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAiB,YAAW;AAAA,IAAS,eAAc;AAAA,KACjE,oCAAC,cAAD;AAAA,IAAM,MAAK;AAAA,MACX,oCAAC,QAAD;AAAA,IAAM,YAAU;AAAA,KACd,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAS,MAAK;AAAA,IAAO,OAAO,MAAM;AAAA,QAI3D,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,YAAW;AAAA,IACX,eAAc;AAAA,IACd,SAAS,MAAM;AACb,mBAAa;AAAA;AAAA,KAGf,oCAAC,cAAD;AAAA,IAAM,MAAK;AAAA,MAEX,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAc,MAAK;AAAA,IAAO,OAAO;AAAA,OAExD,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAiB,YAAW;AAAA,IAAS,eAAc;AAAA,KACjE,oCAAC,cAAD;AAAA,IAAM,MAAK;AAAA,MAEX,oCAAC,kBAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,OAAO,MAAM,YAAY;AAAA,OAI7B,oCAAC,KAAD;AAAA,IAAG,MAAM,MAAM;AAAA,IAAK,WAAW;AAAA,IAAe,QAAO;AAAA,KACnD,oCAAC,cAAD;AAAA,IAAM,MAAK;AAAA,MAEX,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAmB,MAAK;AAAA,IAAO,OAAO;AAAA,SAIjE,oCAAC,qBAAD;AAAA,IACE,YAAY,EAAE,OAAO;AAAA,IACrB,QAAQ;AAAA,IACR,gBAAgB,MAAM;AACpB,mBAAa;AAAA;AAAA,IAEf,OAAO;AAAA,MACL,SAAS;AAAA;AAAA,KAGX,oCAAC,OAAD;AAAA,IACE,QAAO;AAAA,IACP,OAAO;AAAA,MACL;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACjE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,MAAM;AAAA,QAEN,cAAc;AAAA;AAAA,MAEhB;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY,GAAG,IAAI;AAAA,QACxE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,MAAM;AAAA,QACN,SAAS;AAAA;AAAA,MAEX;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY,GAAG,GAAG;AAAA,QACvE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,cAAc,CAAC;AAAA,QACf,MAAM;AAAA,QACN,SAAS;AAAA;AAAA,MAEX;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY,GAAG,GAAG;AAAA,QACvE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,cAAc,CAAC;AAAA,QACf,MAAM;AAAA,QACN,SAAS;AAAA;AAAA,MAEX;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY,GAAG,GAAG;AAAA,QACvE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU;AAAA,QACV,cAAc,CAAC;AAAA,QACf,MAAM;AAAA,QACN,SAAS;AAAA;AAAA,MAEX;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACjE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,UAAU;AAAA,QACV,cAAc,CAAC;AAAA,QACf,SAAS;AAAA;AAAA,MAEX;AAAA,QACE,OAAO,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACnE,KAAK,IAAI,KAAK,YAAY,eAAe,YAAY,YAAY;AAAA,QACjE,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAU,YAAY;AAAA,QACtB,MAAM;AAAA,QACN,cAAc,CAAC;AAAA,QACf,SAAS;AAAA;AAAA;AAAA,IAGb,UAAU,SAAS;AAAA,IACnB,eAAe;AAAA;AAAA;AAOlB,IAAM,cAAc,CAAC,EAAE,MAAM,oBAAY;AAC9C,QAAM,eAAe,2BAAQ,MAAM;AACjC,QAAI,SAAS;AACb,QAAI,UAAU;AACd,cAAU,MAAM,MAAM,SAAS,IAAI,CAAC,MAAM;AACxC,aAAO,oCAAC,MAAD;AAAA,QAAM,MAAM;AAAA,QAAG,KAAK,EAAE;AAAA;AAAA;AAE/B,aAAS,MAAM,MAAM,QAAQ,IAAI,CAAC,MAAM;AACtC,aAAO,oCAAC,MAAD;AAAA,QAAM,MAAM;AAAA,QAAG,KAAK,EAAE;AAAA;AAAA;AAG/B,WAAO,EAAE,QAAQ;AAAA,KAChB,CAAC;AACJ,SACE,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAa,OAAO;AAAA,IAAO,eAAc;AAAA,KACvD,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAwB,eAAc;AAAA,KACpD,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,IAET,eAAc;AAAA,KAEd,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAoB,MAAK;AAAA,IAAO,OAAO,MAAM;AAAA,MAElE,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAoB,MAAK;AAAA,IAAO,OAAO,MAAM;AAAA,OAGpE,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAoB,eAAc;AAAA,KAChD,oCAAC,kBAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,OAAO,MAAM,MAAM,QAAQ,SAAS,MAAM,MAAM,SAAS;AAAA,QAI/D,oCAAC,iBAAD;AAAA,IAAS,MAAK;AAAA,IAAI,UAAS;AAAA,IAAM,OAAO,EAAE,iBAAiB;AAAA,MAE3D,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAuB,eAAc;AAAA,KACnD,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAwB,MAAK;AAAA,IAAO,OAAO;AAAA,MAChE,oCAAC,OAAD,MAAM,cAAc,WAGtB,oCAAC,iBAAD;AAAA,IAAS,MAAK;AAAA,IAAI,UAAS;AAAA,IAAM,OAAO,EAAE,iBAAiB;AAAA,MAE3D,oCAAC,aAAD;AAAA,IAAK,WAAW;AAAA,IAAuB,eAAc;AAAA,KACnD,oCAAC,kBAAD;AAAA,IAAU,WAAW;AAAA,IAAwB,MAAK;AAAA,IAAO,OAAO;AAAA,MAChE,oCAAC,OAAD,MAAM,cAAc;AAAA;;;AiC9P9B;;;;;;ACAA;;;;;;AAKO,IAAM,SAAQ,CAAC,EAAE,KAAK,cAAc,MAAM;AAE1C,IAAM,iBAAe,CAAC,EAAC,WAAQ;AAKrC,SACE,oCAAC,MAAD;AAAA,IAAM,WAAW;AAAA,IAAe,IAAG;AAAA,KACjC,oCAAC,cAAD;AAAA,IAAM,MAAM;AAAA;AAAA;;;;;;ADRV,IAAM,SAAQ;AAAA,EACnB,EAAE,KAAK,cAAc,MAAM;AAAA,EAE3B,GAAG;AAAA;AAGE,IAAM,aAAa,CAAC,EAAE,YAAY;AACvC,SACE,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IAEX,eAAc;AAAA,IACd,UAAS;AAAA,KAET,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,YAAW;AAAA,IACX,eAAc;AAAA,KAEd,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,eAAc;AAAA,KAGd,oCAAC,mBAAD;AAAA,IAAW,OAAM;AAAA,IAAO,QAAO;AAAA,IAAO,KAAK;AAAA,IAAM,OAAO;AAAA,MACtD,UAAS;AAAA,MAAO,WAAU;AAAA;AAAA,MAC5B,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACH,eAAc;AAAA,KAEhB,oCAAC,gBAAD;AAAA,IAAgB,MAAK;AAAA,SAO3B,oCAAC,iBAAD;AAAA,IACE,MAAK;AAAA,IACL,UAAS;AAAA,IACT,OAAO,EAAE,iBAAiB;AAAA;AAAA;;;AlCxC3B,kBAAiB;AACtB,SAAO,CAAC,GAAG,QAAiB,GAAG,OAAY,GAAG;AAAA;AAyIjC,iBAAiB;AAC9B,MAAI,EAAE,MAAM,sBAAsB,uBAAuB;AAEzD,SACE,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,eAAe;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA;AAAA,KAGV,oCAAC,YAAD,OACA,oCAAC,aAAD;AAAA,IACE,eAAc;AAAA,IACd,OAAO;AAAA,MACL,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,KAGd,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,cAAc;AAAA;AAAA,IAEhB,OACE,0DAAE,2BAEA,oCAAC,QAAD;AAAA,MAAM,OAAO,EAAE,OAAO;AAAA,OAAa,aACnC,oCAAC,QAAD;AAAA,MACE,OAAO;AAAA,QACL,OAAO;AAAA,QACP,eAAe;AAAA;AAAA,OAGhB,sBAAqB,KAAE;AAAA,MAKhC,oCAAC,aAAD;AAAA,IAAK,eAAc;AAAA,KAChB,MAAM,IAAI,CAAC,MAAM;AAChB,WACE,oCAAC,aAAD;AAAA,MACE,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,MACV,OAAO;AAAA,QACL,aAAa;AAAA,QACb,WAAW;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
