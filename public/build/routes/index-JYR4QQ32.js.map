{
  "version": 3,
  "sources": ["browser-route-module:/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/treelodot8/app/routes/index.jsx?browser", "../../../app/routes/index.jsx"],
  "sourcesContent": ["export { default } from \"/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/treelodot8/app/routes/index.jsx\";", "import { useMemo } from \"react\";\nimport { Link, useFetcher, useLoaderData, useTransition } from \"remix\";\nimport { boards, cards } from \"../services/trellotypes\";\n\nconst factorSearch = (data, factor) => {\n  return data.labels.find((ee) => ee.name === factor);\n};\nexport let loader = async () => {\n  // return await getListsOnBoard()\n\n  let group = [\n    {\n      title: \"INOVA\u00C7\u00C3O\",\n      data: [],\n    },\n    {\n      title: \"CORRE\u00C7\u00D5ES\",\n      data: [],\n    },\n  ];\n\n  let trashColumn = boards.find((e) => e.name != \"DESCARTADOS\");\n  let data = cards.filter((e) => e.idList != trashColumn.id);\n  data.forEach((e) => {\n    if (factorSearch(e, \"INOVA\u00C7\u00C3O\")) {\n      group[0].data.push(e);\n    } else if (factorSearch(e, \"CORRE\u00C7\u00C3O\")) {\n      group[1].data.push(e);\n    }\n  });\n  return { data: group };\n};\n\nexport default function Index() {\n  let { data } = useLoaderData();\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n      }}\n    >\n      {data?.map((e) => {\n        return (\n          <div\n            style={{\n              flexDirection: \"column\",\n              display: \"flex\",\n              margin:\"0px 50px\"\n            }}\n          >\n            {e.title}\n            <div>\n            {e?.data?.map((e) => {\n              return <span key={e.id}>{e.name}</span>;\n            })}\n          </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;AAAA;;;ACAA;AAAA,mBAAwB;AAiCT,iBAAiB;AAC9B,MAAI,EAAE,SAAS;AACf,SACE,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,eAAe;AAAA,MACf,SAAS;AAAA;AAAA,KAGV,MAAM,IAAI,CAAC,MAAM;AAChB,WACE,oCAAC,OAAD;AAAA,MACE,OAAO;AAAA,QACL,eAAe;AAAA,QACf,SAAS;AAAA,QACT,QAAO;AAAA;AAAA,OAGR,EAAE,OACH,oCAAC,OAAD,MACC,GAAG,MAAM,IAAI,CAAC,OAAM;AACnB,aAAO,oCAAC,QAAD;AAAA,QAAM,KAAK,GAAE;AAAA,SAAK,GAAE;AAAA;AAAA;AAAA;",
  "names": []
}
