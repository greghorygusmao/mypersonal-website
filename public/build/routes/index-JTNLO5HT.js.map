{
  "version": 3,
  "sources": ["browser-route-module:/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/gtproject/app/routes/index.jsx?browser", "../../../app/routes/index.jsx"],
  "sourcesContent": ["export { default, links } from \"/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/gtproject/app/routes/index.jsx\";", "import { withYup } from \"@remix-validated-form/with-yup\"\nimport { useLoaderData } from \"remix\"\nimport { ValidatedForm, validationError } from \"remix-validated-form\"\nimport * as yup from \"yup\"\nimport { authenticator } from \"~/services/auth\"\nimport { AuthForm, links as AuthFormLinks } from \"../components/Auth/AuthForm/AuthForm\"\nimport Box from \"../components/BaseKit/Box/Box\"\nexport function links() {\n  return [...AuthFormLinks]\n}\n\nconst validator = withYup(\n  yup.object({\n    email: yup.string().nullable().email(\"Email Incorreto\").required(\"Campo obrigat\u00F3rio\"),\n    password: yup.string().nullable().required(\"Campo obrigat\u00F3rio\"),\n  }),\n)\n\nexport const action = async ({ request, context }) => {\n  let form = request.clone()\n  const fieldValues = validator.validate(await form.formData())\n  if (fieldValues.error) return validationError(fieldValues.error)\n\n  return await authenticator.authenticate(\"form\", request, {\n    successRedirect: \"/cms\",\n    failureRedirect: \"/logar\",\n    context,\n  })\n}\n\nexport const loader = async ({ request }) => {\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/cms\",\n  })\n  return {\n    email: null,\n    password: null,\n  }\n}\n\nexport default function Index() {\n  const { defaultValues } = useLoaderData()\n\n  return (\n    <Box\n      flex={1}\n      style={{\n        height: \"100%\",\n      }}\n    >\n      <ValidatedForm\n        validator={validator}\n        method=\"post\"\n        defaultValues={defaultValues}\n        style={{\n          height: \"100%\",\n        }}\n      >\n        <AuthForm defaultValues={defaultValues} />\n      </ValidatedForm>\n    </Box>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAOO,kBAAiB;AACtB,SAAO,CAAC,GAAG;AAAA;AAGb,IAAM,YAAY,QAChB,AAAI,QAAO;AAAA,EACT,OAAO,AAAI,SAAS,WAAW,MAAM,mBAAmB,SAAS;AAAA,EACjE,UAAU,AAAI,SAAS,WAAW,SAAS;AAAA;AA0BhC,iBAAiB;AAC9B,QAAM,EAAE,kBAAkB;AAE1B,SACE,oCAAC,aAAD;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,MACL,QAAQ;AAAA;AAAA,KAGV,oCAAC,eAAD;AAAA,IACE;AAAA,IACA,QAAO;AAAA,IACP;AAAA,IACA,OAAO;AAAA,MACL,QAAQ;AAAA;AAAA,KAGV,oCAAC,UAAD;AAAA,IAAU;AAAA;AAAA;",
  "names": []
}
