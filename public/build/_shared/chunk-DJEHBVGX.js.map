{
  "version": 3,
  "sources": ["../../../app/components/Navigation/LeftNavbar/LeftNavbar.jsx", "../../../app/components/BaseKit/Divider/Divider.js", "../../../app/components/Navigation/LinkNavigation/LinkNavigation.jsx", "../../../app/components/BaseKit/Icon/Icon.js"],
  "sourcesContent": ["import logo from \"../../../assets/images/logo.svg\";\nimport BaseImage from \"../../BaseKit/BaseImage/BaseImage\";\nimport Box from \"../../BaseKit/Box/Box\";\nimport Divider from \"../../BaseKit/Divider/Divider\";\nimport { LinkNavigation, links as LinkNavigationStyles } from \"../LinkNavigation/LinkNavigation\";\nimport s from \"./styles.css\";\nexport const links = [\n  { rel: \"stylesheet\", href: s },\n  \n  ...LinkNavigationStyles,\n];\n\nexport const LeftNavbar = ({ props }) => {\n  return (\n    <Box\n      className={\"leftnavbar\"}\n\n      flexDirection=\"row\"\n      position=\"fixed\"\n    >\n      <Box\n        className={\"leftnavbar_ctn\"}\n        flex=\"1\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <Box\n          className={\"leftnavbar_ctn_nav\"}\n          flex=\"1\"\n          flexDirection=\"column\"\n        > \n\n          <BaseImage width=\"30px\" height=\"30px\" src={logo} style={{\n            minWidth:\"30px\",minHeight:\"30px\"}}/>\n          <Box\n            className={\"leftnavbar_ctn_links\"}\n            flex=\"1\"    \n              flexDirection=\"column\"\n          >\n            <LinkNavigation icon=\"icon-icon_code\"/>\n          </Box>\n        </Box>\n\n        {/* // <Icon  className={\"leftnavbar_icon_logout\"} /> */}\n      </Box>\n\n      <Divider\n        type=\"v\"\n        spaccing=\"0px\"\n        style={{ backgroundColor: \"#EBEBED\" }}\n      ></Divider>\n    </Box>\n  );\n};\n\nexport default LeftNavbar;", "import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Divider = ({ type, spaccing, variant, style, size = 1 }) => {\n\n  let dotted = {};\n\n  dotted =\n    variant == 'dotted'\n      ? {\n          backgroundimage: `-webkit-linear-gradient(right, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(255,255,255,0) 51%,rgba(255,255,255,0) 100%),\n                            -webkit-linear-gradient(bottom, rgba(128,128,128,1) 0%, rgba(128,128,128,0) 8%, rgba(128,128,128,0) 100%)`,\n          backgroundSize: '12px 24px',\n        }\n      : {};\n\n  return (\n    <div\n      style={{\n        margin: type == 'h' ? `${spaccing} 0px` : `0px ${spaccing}`,\n        minWidth: type == 'h' ? `100%` : `${size}px`,\n        minHeight: type == 'h' ? `${size}px` : `100%`,\n        ...dotted,\n        ...style,\n      }}\n    />\n  );\n};\n\nDivider.defaultProps = {\n  variant: 'solid',\n};\n\nDivider.propTypes = {\n  type: PropTypes.string,\n  spaccing: PropTypes.string,\n  variant: PropTypes.string,\n};\n\nexport default Divider;\n", "import { Link } from \"remix\";\nimport Box from \"~/components/BaseKit/Box/Box\"\nimport Icon from \"~/components/BaseKit/Icon/Icon\"\nimport s from \"./styles.css\";\n\nexport const links = [{ rel: \"stylesheet\", href: s }];\n\nexport const LinkNavigation=({icon})=>{\n\n            \n\n            \n return (\n   <Link className={\"link_navbar\"} to=\"/\">\n     <Icon name={icon} />\n   </Link>\n );\n            \n}", "\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './Icon.css';\n\nconst Icon = ({ style, name, className=\"\", onClick }) => {\n  return (\n    <i\n      className={`icon ${name} ${className||''}`}\n      onClick={e => {\n        if (onClick) {\n          onClick(e);\n        }\n      }}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        ...style,\n      }}\n    />\n  );\n};\n\nIcon.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n};\n\nexport default Icon;\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;;;;ACAA;AAAA,mBAAkB;AAClB,wBAAsB;AAGtB,IAAM,UAAU,CAAC,EAAE,MAAM,UAAU,SAAS,OAAO,OAAO,QAAQ;AAEhE,MAAI,SAAS;AAEb,WACE,WAAW,WACP;AAAA,IACE,iBAAiB;AAAA;AAAA,IAEjB,gBAAgB;AAAA,MAElB;AAEN,SACE,mDAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,QAAQ,QAAQ,MAAM,GAAG,iBAAiB,OAAO;AAAA,MACjD,UAAU,QAAQ,MAAM,SAAS,GAAG;AAAA,MACpC,WAAW,QAAQ,MAAM,GAAG,WAAW;AAAA,SACpC;AAAA,SACA;AAAA;AAAA;AAAA;AAMX,QAAQ,eAAe;AAAA,EACrB,SAAS;AAAA;AAGX,QAAQ,YAAY;AAAA,EAClB,MAAM,0BAAU;AAAA,EAChB,UAAU,0BAAU;AAAA,EACpB,SAAS,0BAAU;AAAA;AAGrB,IAAO,kBAAQ;;;ACxCf;;;ACAA;AACA,yBAAsB;AACtB,oBAAkB;AAGlB,IAAM,OAAO,CAAC,EAAE,OAAO,MAAM,YAAU,IAAI,cAAc;AACvD,SACE,oDAAC,KAAD;AAAA,IACE,WAAW,QAAQ,QAAQ,aAAW;AAAA,IACtC,SAAS,OAAK;AACZ,UAAI,SAAS;AACX,gBAAQ;AAAA;AAAA;AAAA,IAGZ,OAAO;AAAA,MACL,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,gBAAgB;AAAA,SACb;AAAA;AAAA;AAAA;AAMX,KAAK,YAAY;AAAA,EACf,MAAM,2BAAU;AAAA,EAChB,WAAW,2BAAU;AAAA,EACrB,OAAO,2BAAU;AAAA;AAGnB,IAAO,eAAQ;;;;;;ADzBR,IAAM,QAAQ,CAAC,EAAE,KAAK,cAAc,MAAM;AAE1C,IAAM,iBAAe,CAAC,EAAC,WAAQ;AAKrC,SACE,oCAAC,MAAD;AAAA,IAAM,WAAW;AAAA,IAAe,IAAG;AAAA,KACjC,oCAAC,cAAD;AAAA,IAAM,MAAM;AAAA;AAAA;;;;;;AFRV,IAAM,SAAQ;AAAA,EACnB,EAAE,KAAK,cAAc,MAAM;AAAA,EAE3B,GAAG;AAAA;AAGE,IAAM,aAAa,CAAC,EAAE,YAAY;AACvC,SACE,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IAEX,eAAc;AAAA,IACd,UAAS;AAAA,KAET,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,YAAW;AAAA,IACX,eAAc;AAAA,KAEd,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,eAAc;AAAA,KAGd,oCAAC,mBAAD;AAAA,IAAW,OAAM;AAAA,IAAO,QAAO;AAAA,IAAO,KAAK;AAAA,IAAM,OAAO;AAAA,MACtD,UAAS;AAAA,MAAO,WAAU;AAAA;AAAA,MAC5B,oCAAC,aAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACH,eAAc;AAAA,KAEhB,oCAAC,gBAAD;AAAA,IAAgB,MAAK;AAAA,SAO3B,oCAAC,iBAAD;AAAA,IACE,MAAK;AAAA,IACL,UAAS;AAAA,IACT,OAAO,EAAE,iBAAiB;AAAA;AAAA;",
  "names": []
}
