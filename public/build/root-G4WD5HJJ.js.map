{
  "version": 3,
  "sources": ["browser-route-module:/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/gtproject/app/root.jsx?browser", "../../app/root.jsx", "../../app/components/contexts/theme.jsx"],
  "sourcesContent": ["export { default, links, meta } from \"/home/tharyckgusmao/Documentos/tharyck/Projetos/remix/gtproject/app/root.jsx\";", "import { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useTransition } from \"remix\"\n\nexport function meta() {\n  return { title: \"Planejamento\" }\n}\n\nimport resetcss from \"normalize.css\"\nimport fonts from \"./assets/fonts/icons.css\"\nimport global from \"./assets/global.css\"\n// import ReactTooltip from \"react-tooltip\"\nimport { ThemeProvider } from \"./components/contexts/theme\"\nimport { SmoothScrollProvider } from \"./components/contexts/scroll\"\nexport function links() {\n  return [\n    { rel: \"stylesheet\", href: resetcss },\n    { rel: \"stylesheet\", href: fonts },\n    { rel: \"stylesheet\", href: global },\n  ]\n}\n\nexport default function App() {\n  const transition = useTransition()\n\n  return (\n    <ThemeProvider>\n      <SmoothScrollProvider options={{ smooth: true, class: \"inView\" }}>\n        <html lang=\"pt-BR\">\n          <head>\n            <meta charSet=\"utf-8\" />\n            <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n            <Meta />\n            <Links />\n          </head>\n          <body>\n            <Outlet />\n\n            <ScrollRestoration />\n            <Scripts />\n            {process.env.NODE_ENV === \"development\" && <LiveReload />}\n            {/* <ReactTooltip place=\"top\" type=\"dark\" effect=\"solid\" /> */}\n          </body>\n        </html>\n      </SmoothScrollProvider>\n    </ThemeProvider>\n  )\n}\n", "import { createContext, useContext, useState } from \"react\"\n\nconst ThemeContext = createContext(undefined)\n\nfunction ThemeProvider({ children, defaulTheme }) {\n  const [theme, setTheme] = useState(defaulTheme)\n\n  return <ThemeContext.Provider value={[theme, setTheme]}>{children}</ThemeContext.Provider>\n}\n\nfunction useTheme() {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n  }\n  return context\n}\n\nexport { ThemeProvider, useTheme }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;;;;;;;;;;ACAA;AAAA,mBAAoD;AAEpD,IAAM,eAAe,gCAAc;AAEnC,uBAAuB,EAAE,UAAU,eAAe;AAChD,QAAM,CAAC,OAAO,YAAY,2BAAS;AAEnC,SAAO,oCAAC,aAAa,UAAd;AAAA,IAAuB,OAAO,CAAC,OAAO;AAAA,KAAY;AAAA;;;ADLpD,gBAAgB;AACrB,SAAO,EAAE,OAAO;AAAA;AASX,iBAAiB;AACtB,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B,EAAE,KAAK,cAAc,MAAM;AAAA;AAAA;AAIhB,eAAe;AAC5B,QAAM,aAAa;AAEnB,SACE,oCAAC,eAAD,MACE,oCAAC,sBAAD;AAAA,IAAsB,SAAS,EAAE,QAAQ,MAAM,OAAO;AAAA,KACpD,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,QAAD;AAAA,IAAM,SAAQ;AAAA,MACd,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAW,SAAQ;AAAA,MAC9B,oCAAC,MAAD,OACA,oCAAC,OAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,gCAAD,OAEA,oCAAC,mBAAD,OACA,oCAAC,SAAD,OAC2C,oCAAC,YAAD;AAAA;",
  "names": []
}
